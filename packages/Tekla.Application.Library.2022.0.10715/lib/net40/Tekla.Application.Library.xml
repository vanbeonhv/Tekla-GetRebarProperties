<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tekla.Application.Library</name>
    </assembly>
    <members>
        <member name="T:Tekla.Structures.Cache`1">
            <summary>Generic item cache.</summary>
            <typeparam name="TItem">Item type.</typeparam>
            <remarks>Cache is used to hold cached items with multiple key types.</remarks>
        </member>
        <member name="M:Tekla.Structures.Cache`1.Add``1(``0,`0)">
            <summary>Adds an item to the cache.</summary>
            <typeparam name="TKey">The Key type.</typeparam>
            <param name="key">The Item key.</param>
            <param name="item">Item to add.</param>
            <exception cref="T:System.ArgumentException">Thrown if the key already exists in the cache.</exception>
        </member>
        <member name="M:Tekla.Structures.Cache`1.ContainsKey``1(``0)">
            <summary>Determines whether the specified key exists in the cache.</summary>
            <typeparam name="TKey">The Key type.</typeparam>
            <param name="key">The Item key.</param>
            <returns>A boolean value indicating whether the key exists in the cache.</returns>
        </member>
        <member name="M:Tekla.Structures.Cache`1.GetItem``1(``0)">
            <summary>Gets an item from the cache.</summary>
            <typeparam name="TKey">The Key type.</typeparam>
            <param name="key">The Item key.</param>
            <returns>Retrieved item.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if the key does not exist in the cache.</exception>
        </member>
        <member name="M:Tekla.Structures.Cache`1.GetItemOrDefault``1(``0)">
            <summary>Gets an item or default value from the cache.</summary>
            <typeparam name="TKey">The Key type.</typeparam>
            <param name="key">The Item key.</param>
            <returns>Retrieved item or default value.</returns>
        </member>
        <member name="M:Tekla.Structures.Cache`1.GetItemOrDefault``1(``0,`0)">
            <summary>Gets an item or the specified default item from the cache.</summary>
            <typeparam name="TKey">The Key type.</typeparam>
            <param name="key">The Item key.</param>
            <param name="defaultItem">Default item that is returned if the key does not exist in the cache.</param>
            <returns>Retrieved item or the specified default item.</returns>
        </member>
        <member name="M:Tekla.Structures.Cache`1.TryGetItem``1(``0,`0@)">
            <summary>Attempts to get an item from the cache.</summary>
            <typeparam name="TKey">The Key type.</typeparam>
            <param name="key">The Item key.</param>
            <param name="item">Output variable for the item.</param>
            <returns>A boolean value indicating whether the item was retrieved.</returns>
        </member>
        <member name="T:Tekla.Structures.Cache`1.Container`1">
            <summary>Static container.</summary>
            <typeparam name="TKey">The Key type.</typeparam>
        </member>
        <member name="F:Tekla.Structures.Cache`1.Container`1.Cache">
            <summary>
            Cache dictionary.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Cache`1.Container`1.Add(`1,`0)">
            <summary>Adds an item to the cache.</summary>
            <param name="key">The Item key.</param>
            <param name="item">The Item to add.</param>
            <exception cref="T:System.ArgumentException">Thrown if the key already exists in the cache.</exception>
        </member>
        <member name="M:Tekla.Structures.Cache`1.Container`1.ContainsKey(`1)">
            <summary>Determines whether the specified key exists in the cache.</summary>
            <param name="key">The Item key.</param>
            <returns>A boolean value indicating whether the key exists in the cache.</returns>
        </member>
        <member name="M:Tekla.Structures.Cache`1.Container`1.GetItem(`1)">
            <summary>Gets an item from the cache.</summary>
            <param name="key">The Item key.</param>
            <returns>Retrieved item.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">Thrown if the key does not exist in the cache.</exception>
        </member>
        <member name="M:Tekla.Structures.Cache`1.Container`1.GetItemOrDefault(`1)">
            <summary>Gets an item or default value from the cache.</summary>
            <param name="key">The Item key.</param>
            <returns>Retrieved item or default value.</returns>
        </member>
        <member name="M:Tekla.Structures.Cache`1.Container`1.GetItemOrDefault(`1,`0)">
            <summary>Gets an item or the specified default item from the cache.</summary>
            <param name="key">The Item key.</param>
            <param name="defaultItem">Default item that is returned if the key does not exist in the cache.</param>
            <returns>Retrieved item or the specified default item.</returns>
        </member>
        <member name="M:Tekla.Structures.Cache`1.Container`1.TryGetItem(`1,`0@)">
            <summary>Attempts to get an item from the cache.</summary>
            <param name="key">The Item key.</param>
            <param name="item">Output variable for the item.</param>
            <returns>A boolena value indicating whether the item was retrieved.</returns>
        </member>
        <member name="T:Tekla.Structures.CommonTasks">
            <summary>
            Common tasks library.
            </summary>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.CreateGeneralArrangementDrawingFromTemplate(System.String)">
            <summary>Creates a general arrangement drawing from template.</summary>
            <param name="name">Template name.</param>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.OpenAssemblyDrawingProperties(System.String)">
            <summary>Opens assembly drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.OpenAutoDrawingScript(System.String)">
            <summary>Opens auto drawing script editor.</summary>
            <param name="name">Script name.</param>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.OpenCastUnitDrawingProperties(System.String)">
            <summary>Opens cast unit drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.OpenDrawingList">
            <summary>
            Opens the drawing list.
            </summary>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.OpenGeneralArrangementDrawingProperties(System.String)">
            <summary>Opens general arrangement drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.OpenNumberingSettings">
            <summary>
            Opens the numbering settings dialog.
            </summary>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.OpenSinglePartDrawingProperties(System.String)">
            <summary>Opens single part drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.CommonTasks.PerformNumbering(System.Boolean)">
            <summary>Performs numbering.</summary>
            <param name="numberAllModified">Indicates whether to perform numbering for all modified parts
            or only to selected modified parts.</param>
        </member>
        <member name="T:Tekla.Structures.Concrete.ClassificatorCalculator">
            <summary>
            The classificator calculator.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.UDA">
            <summary>
            The uda value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.UDA2">
            <summary>
            The uda 2.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Back">
            <summary>
            The back value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Bot">
            <summary>
            The bot value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Front">
            <summary>
            The front value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Top">
            <summary>
            The top value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.PrefixBack">
            <summary>
            The m_ prefix back.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.PrefixBot">
            <summary>
            The m_ prefix bot.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.PrefixFront">
            <summary>
            The m_ prefix front.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.PrefixTop">
            <summary>
            The m_ prefix top.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Deeper">
            <summary>
            The deeper.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Epsilon">
            <summary>
            The epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Equal">
            <summary>
            The equal.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.Upper">
            <summary>
            The upper.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.ClassificatorCalculator.localization">
            <summary>
            The m_ localization.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.#ctor(Tekla.Structures.Dialog.Localization)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.ClassificatorCalculator"/> class.</summary>
            <param name="localize">The localize.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.#ctor(System.String,System.String,System.String,System.String,Tekla.Structures.Dialog.Localization)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.ClassificatorCalculator"/> class.</summary>
            <param name="top">The top value.</param>
            <param name="bot">The bot value.</param>
            <param name="back">The back value.</param>
            <param name="front">The front value.</param>
            <param name="localize">The localize value.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.ClassifyRebar(Tekla.Structures.Model.ModelObject,System.Collections.ArrayList@)">
            <summary>The classify rebar.</summary>
            <param name="singleObject">The single object.</param>
            <param name="classifiedRebars">The classified reinforcement bars.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.ClassifyRebars(System.Boolean,System.Collections.ArrayList@,System.Windows.Forms.ProgressBar@)">
            <summary>The classify reinforcement bars.</summary>
            <param name="allRebars">The all reinforcement bars.</param>
            <param name="rebars">The reinforcement bars.</param>
            <param name="progress">The progress.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.SetRebarsLevel(Tekla.Structures.Model.Reinforcement)">
            <summary>The set reinforcement bars level.</summary>
            <param name="rebar">The rebar.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.SortRebarsLevels(System.Collections.ArrayList@,System.Windows.Forms.ProgressBar@)">
            <summary>The sort reinforcement bars levels.</summary>
            <param name="classifiedRebars">The classified reinforcement bars.</param>
            <param name="progressBar">The progress bar.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.PartIsSlab(Tekla.Structures.Model.ModelObject)">
            <summary>The part is slab.</summary>
            <param name="singlePart">The single part.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.AddValueToLevelList(System.Collections.ArrayList@,System.Double,System.Double)">
            <summary>The add value to level list.</summary>
            <param name="levelPoints">The level points.</param>
            <param name="currentZ">The current z.</param>
            <param name="lengthBetweenPoints">The length between points.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.GetLengthBetweenPoints(Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point)">
            <summary>The get length between points.</summary>
            <param name="pointA">The point a.</param>
            <param name="pointB">The point b.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.GetRebarsPredominantLevel(System.Collections.ArrayList)">
            <summary>The get reinforcement bars predominant level.</summary>
            <param name="rebarGeometries">The reinforcement bar geometries.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.RebarsPredominantLevel(System.Collections.ArrayList)">
            <summary>The reinforcement bars predominant level.</summary>
            <param name="levelPoints">The level points.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.AreLevelsEqual(System.String,System.String)">
            <summary>The are levels equal.</summary>
            <param name="rebarsLevel">The reinforcement bars level.</param>
            <param name="prevLevel">The prev level.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.ArrayContainsRebar(Tekla.Structures.Model.Reinforcement,System.Collections.ArrayList)">
            <summary>The array contains reinforcement bar.</summary>
            <param name="rebar">The reinforcement bars.</param>
            <param name="classifiedRebars">The classified reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.AssembleRebarsLevel(System.String,System.Int32)">
            <summary>The assemble reinforcement bars level.</summary>
            <param name="rebarsLevel">The reinforcement bars level.</param>
            <param name="rebarsIndex">The reinforcement bars index.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.CompareLevels(System.String,System.String,System.String)">
            <summary>The compare levels.</summary>
            <param name="rebarsLevel">The reinforcement bars level.</param>
            <param name="nextRebarsLevel">The next reinforcement bars level.</param>
            <param name="prefix">The prefix.</param>
            <returns>The integer.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.ExtractLevel(System.String,System.String)">
            <summary>The extract level.</summary>
            <param name="rebarsLevel">The reinforcement bars level.</param>
            <param name="prefix">The prefix.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.HandleNextObject(System.Boolean,System.Windows.Forms.ProgressBar,Tekla.Structures.Model.ModelObject,System.Collections.ArrayList)">
            <summary>The handle next object.</summary>
            <param name="allRebars">The all reinforcement bars.</param>
            <param name="progress">The progress.</param>
            <param name="nextObj">The next obj.</param>
            <param name="rebars">The reinforcement bars.</param>
            <returns>The System.Collections.ArrayList.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.IsItWall(System.Double,System.Double,System.Double,System.Int32)">
            <summary>The is it wall.</summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="length">The length.</param>
            <param name="count">The count.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.PartIsWall(Tekla.Structures.Model.ModelObject)">
            <summary>The part is wall.</summary>
            <param name="modelObject">The model object.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.RaiseRebarsIndex(System.String,System.String)">
            <summary>The raise reinforcement bars index.</summary>
            <param name="rebarsLevel">The reinforcement bars level.</param>
            <param name="nextRebarsLevel">The next reinforcement bars level.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.ReviseClassifiedRebars(System.Collections.ArrayList)">
            <summary>The revise classified reinforcement bars.</summary>
            <param name="classifiedRebars">The classified reinforcement bars.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.RotateRebarsGeometries(System.Collections.ArrayList@,Tekla.Structures.Geometry3d.Matrix,Tekla.Structures.Geometry3d.Point)">
            <summary>The rotate reinforcement bars geometries.</summary>
            <param name="rebarGeometries">The reinforcement bar geometries.</param>
            <param name="rotateMatrix">The rotate matrix.</param>
            <param name="origin">The origin.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.RotateSlabPoint(Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Matrix,Tekla.Structures.Geometry3d.Point)">
            <summary>The rotate slab point.</summary>
            <param name="slabsPoint">The slabs point.</param>
            <param name="rotMat">The rot mat.</param>
            <param name="origin">The origin.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.ShiftRebars(System.Collections.ArrayList@,System.Double@,System.Double@)">
            <summary>The shift reinforcement bars.</summary>
            <param name="rebarGeometries">The reinforcement bar geometries.</param>
            <param name="shift">The shift.</param>
            <param name="minDepth">The min depth.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.ClassificatorCalculator.ShowMessage(System.String)">
            <summary>The show message.</summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Tekla.Structures.Concrete.CreateSingleRebar">
            <summary>
            The create single rebar.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.CreateSingleRebar.OverhangEpsilon">
            <summary>
            The overhan g_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.CreateSingleRebar.originalRebar">
            <summary>
            The m_ original rebar.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.CreateSingleRebar.#ctor(Tekla.Structures.Model.Reinforcement)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.CreateSingleRebar"/> class.</summary>
            <param name="newOriginalRebar">The original rebar.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.CreateSingleRebar.GetSingleRebar(System.Collections.ArrayList)">
            <summary>The get single rebar.</summary>
            <param name="rebarPoints">The reinforcement bar points.</param>
            <returns>The Tekla.Structures.Model.SingleRebar.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.CreateSingleRebar.SetNewRebarPropertiesFromRebarGroup(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.RebarGroup)">
            <summary>The set new reinforcement bar properties from reinforcement bar group.</summary>
            <param name="newRebar">The new rebar.</param>
            <param name="originalRebarGroup">The original reinforcement bar group.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.CreateSingleRebar.SetNewRebarPropertiesFromSingleRebar(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.SingleRebar)">
            <summary>The set new reinforcement bar properties from single rebar.</summary>
            <param name="newRebar">The new rebar.</param>
            <param name="originalSingleRebar">The original single rebar.</param>
        </member>
        <member name="T:Tekla.Structures.Concrete.PatternInfo">
            <summary>
            The pattern info.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.BeamTag">
            <summary>
            The beam tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.BottomClassTag">
            <summary>
            The bottom class tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.BottomNameTag">
            <summary>
            The bottom name tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.BottomXyTag">
            <summary>
            The bottom xy tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.PatternBeginTag">
            <summary>
            The pattern begin tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.PatternEndTag">
            <summary>
            The pattern end tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.SymmteryTag">
            <summary>
            The symmtery tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.TopClassTag">
            <summary>
            The top class tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.TopNameTag">
            <summary>
            The top name tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.TopXyTag">
            <summary>
            The top xy tag.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.patternData">
            <summary>
            The pattern data.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.bottomClass">
            <summary>
            The bottom class.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.bottomName">
            <summary>
            The bottom name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.topClass">
            <summary>
            The top class.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.topName">
            <summary>
            The top name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.bottomPos">
            <summary>
            The bottom pos.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.PatternInfo.topPos">
            <summary>
            The top pos.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.PatternInfo"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.BottomName">
            <summary>Gets the bottom name.</summary>
            <value>The bottom name.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.TopClass">
            <summary>Gets the top class.</summary>
            <value>The top class.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.TopName">
            <summary>Gets the top name.</summary>
            <value>The top name.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.BottomClass">
            <summary>Gets the bottom class.</summary>
            <value>The bottom class.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.BeamType">
            <summary>Gets or sets the beam type.</summary>
            <value>The beam type.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.Height">
            <summary>Gets or sets the height.</summary>
            <value>The height.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.IsSymmetrical">
            <summary>Gets or sets a value indicating whether this is symmetrical.</summary>
            <value>The is symmetrical.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name value.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.Width">
            <summary>Gets or sets the width.</summary>
            <value>The width value.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.MaxNumberBottom">
            <summary>Gets the max number bottom.</summary>
            <value>The max number bottom.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.PatternInfo.MaxNumberTop">
            <summary>Gets the max number top.</summary>
            <value>The max number top.</value>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.GetAllBeamTypes">
            <summary>
            The get all beam types.
            </summary>
            <returns>
            The System.Collections.ArrayList.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.GetPatternInfo(System.String)">
            <summary>The get pattern info.</summary>
            <param name="name">The name value.</param>
            <returns>The Tekla.Structures.Concrete.PatternInfo.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.GetPatternsByBeamType(System.String)">
            <summary>The get patterns by beam type.</summary>
            <param name="type">The type value.</param>
            <returns>The System.Collections.ArrayList.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.GetSysFilePathName(Tekla.Structures.Model.Model,System.String)">
            <summary>The get sys file path name.</summary>
            <param name="m">The m value.</param>
            <param name="name">The name value.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.AddBottomPos(System.Double,System.Double)">
            <summary>The add bottom pos.</summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.AddTopPos(System.Double,System.Double)">
            <summary>The add top pos.</summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.GetBottomXy(System.Int32,System.Double@,System.Double@)">
            <summary>The get bottom xy.</summary>
            <param name="index">The index.</param>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.GetTopXy(System.Int32,System.Double@,System.Double@)">
            <summary>The get top xy.</summary>
            <param name="index">The index.</param>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.ReadPatternBlock(System.IO.StreamReader)">
            <summary>The read pattern block.</summary>
            <param name="sr">The sr value.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.SetWidthHeight(System.Double,System.Double)">
            <summary>The set width height.</summary>
            <param name="pointX">The point x.</param>
            <param name="pointY">The point y.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.GetPatternFileName">
            <summary>
            The get pattern file name.
            </summary>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.PatternInfo.LoadPatternData">
            <summary>
            The load pattern data.
            </summary>
            <returns>
            The System.Boolean.
            </returns>
            <exception cref="T:System.Exception">
            Throws an exception.
            </exception>
        </member>
        <member name="T:Tekla.Structures.Concrete.RebarGroupConversionData">
            <summary>
            The reinforcement bar group conversion data.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.RebarGroupConversionData.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.RebarGroupConversionData"/> class.</summary>
        </member>
        <member name="P:Tekla.Structures.Concrete.RebarGroupConversionData.DepthLocation">
            <summary>Gets or sets the depth location.</summary>
            <value>The depth location.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.RebarGroupConversionData.FatherSlab">
            <summary>Gets or sets the father slab.</summary>
            <value>The father slab.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.RebarGroupConversionData.Spacing">
            <summary>Gets or sets the spacing.</summary>
            <value>The spacing.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.RebarGroupConversionData.SpliceSection">
            <summary>Gets or sets the splice section.</summary>
            <value>The splice section.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.RebarGroupConversionData.StirrupType">
            <summary>
            Gets or sets stirrup type.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter">
            <summary>
            The single reinforcement bar to reinforcement bar group converter.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.AngleEpsilon">
            <summary>
            The angl e_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.Degress90">
            <summary>
            The degres s_90.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.DistanceEpsilon">
            <summary>
            The distanc e_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.DotEpsilon">
            <summary>
            The do t_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.MaximumIterations">
            <summary>
            The maximu m_ iterations.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.coordinateZ">
            <summary>
            The m_ coordinate z.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.rebarGroupConversionData">
            <summary>
            The m_ reinforcement bar group conversion data.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.singleRebars">
            <summary>
            The m_ single rebars.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.consideredRebarsIndex">
            <summary>
            The m_ considered reinforcement bars index.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.rebarGroups">
            <summary>
            The m_ reinforcement bar groups.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.ungroupedRebars">
            <summary>
            The m_ ungrouped rebars.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.#ctor(Tekla.Structures.Concrete.RebarGroupConversionData,System.Collections.ArrayList)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter"/> class.</summary>
            <param name="newRebarGroupConversionData">The reinforcement bar group conversion data.</param>
            <param name="newSingleRebars">The single reinforcement bars.</param>
        </member>
        <member name="T:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType">
            <summary>
            The group type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType.Normal">
            <summary>
            The normal.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType.Tapered">
            <summary>
            The tapered.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetHookDirection(Tekla.Structures.Model.Reinforcement)">
            <summary>The get hook direction.</summary>
            <param name="rebar">The rebar.</param>
            <returns>The Tekla.Structures.Geometry3d.Vector.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SwapStartHookWithEndHook(Tekla.Structures.Model.SingleRebar@)">
            <summary>The swap start hook with end hook.</summary>
            <param name="newRebar">The new rebar.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.ConvertSingleRebarToRebarGroup(System.Boolean,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>The convert single reinforcement bar to reinforcement bar group.</summary>
            <param name="splitForSplicing">The split for splicing.</param>
            <param name="newRebarGroups">The reinforcement bar groups.</param>
            <param name="newUngroupedRebars">The ungrouped reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.AddParallelRebarsToGroup(System.Collections.ArrayList,Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>The add parallel reinforcement bars to group.</summary>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <param name="type">The type value.</param>
            <param name="newRebarGroups">The reinforcement bar groups.</param>
            <param name="newUngroupedRebars">The ungrouped reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.AddRebarsIfDoNotOverlap(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Geometry3d.Vector,Tekla.Structures.Geometry3d.Vector,System.Collections.ArrayList)">
            <summary>The add reinforcement bars if do not overlap.</summary>
            <param name="newRebar">The new rebar.</param>
            <param name="primaryRebarVector">The primary reinforcement bar vector.</param>
            <param name="secondaryRebarVector">The secondary reinforcement bar vector.</param>
            <param name="newParallelRebars">The new parallel reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.AddRebarsToConsideredRebarsIndex(System.Collections.ArrayList)">
            <summary>The add reinforcement bars to considered reinforcement bars index.</summary>
            <param name="newGroupRebars">The new group reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.CheckIfRebarsCanBeTaperedCurved">
            <summary>
            Check if rebars can be created as tapered curve group.
            </summary>
            <returns>True when rebars can be grouped as round bars.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.AddPointToList(Tekla.Structures.Geometry3d.Point,System.Collections.Generic.List{Tekla.Structures.Geometry3d.Point})">
            <summary>
            Add point into list if it is not already there.
            </summary>
            <param name="point">Point to be add to the list.</param>
            <param name="pointList">List of points.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.CheckIfRebarsAreInSamePlane">
            <summary>
            The check if reinforcement bars are in same plane.
            </summary>
            <returns>
            The System.Boolean.
            </returns>
            <exception cref="T:System.Exception">
            Throws an exception.
            </exception>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.CreateNormalOrTaperedRebarGroup(System.Collections.ArrayList,Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType,Tekla.Structures.Model.RebarGroup@)">
            <summary>The create normal or tapered reinforcement bar group.</summary>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <param name="type">The type value.</param>
            <param name="newRebarGroup">The new reinforcement bar group.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.CreateRebarGroupBySingleRebar(System.Int32,System.Collections.ArrayList,Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType)">
            <summary>The create reinforcement bar group by single rebar.</summary>
            <param name="rebarIndex">The reinforcement bar index.</param>
            <param name="groupLines">The group lines.</param>
            <param name="type">The type value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.IsLastTwoBars(System.Collections.IList)">
            <summary>
            Is last two bars.
            </summary>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.FindRebarGroups(System.Int32,System.Collections.ArrayList,System.Collections.ArrayList@)">
            <summary>The find reinforcement bar groups.</summary>
            <param name="primaryRebarIndex">The primary reinforcement bar index.</param>
            <param name="groupLines">The group lines.</param>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.FindRebarsInSameGroup(System.Int32,System.Collections.ArrayList,System.Collections.ArrayList@)">
            <summary>The find reinforcement bars in same group.</summary>
            <param name="primaryRebarIndex">The primary reinforcement bar index.</param>
            <param name="groupLines">The group lines.</param>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetDistanceRebars(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.SingleRebar)">
            <summary>The get distance reinforcement bars.</summary>
            <param name="primaryRebar">The primary rebar.</param>
            <param name="secondaryRebar">The secondary rebar.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetGroupLine(System.Int32,System.Int32,System.Collections.ArrayList@)">
            <summary>The get group line.</summary>
            <param name="primaryRebarIndex">The primary reinforcement bar index.</param>
            <param name="secondaryRebarIndex">The secondary reinforcement bar index.</param>
            <param name="groupLines">The group lines.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetGroupSegments(System.Collections.ArrayList)">
            <summary>The get group segments.</summary>
            <param name="groupGeometries">The group geometries.</param>
            <returns>The System.Collections.ArrayList.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetNormalRebarGroup(System.Int32)">
            <summary>The get normal reinforcement bar group.</summary>
            <param name="primaryRebarIndex">The primary reinforcement bar index.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetParallelRebarsToCreateNewGroups(Tekla.Structures.Model.RebarGroup,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>The get parallel reinforcement bars to create new groups.</summary>
            <param name="primaryRebarGroup">The primary reinforcement bar group.</param>
            <param name="primaryGroupGeometries">The primary group geometries.</param>
            <param name="secondaryGroupGeometries">The secondary group geometries.</param>
            <param name="newParallelRebars">The new parallel reinforcement bars.</param>
            <param name="remainingParallelRebars">The remaining parallel reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetPolygonForRebarGroup(System.Collections.ArrayList,Tekla.Structures.Model.Polygon@,Tekla.Structures.Model.Polygon@)">
            <summary>The get polygon for reinforcement bar group.</summary>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <param name="polygon1">The polygon 1.</param>
            <param name="polygon2">The polygon 2.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetRebarGroup(System.Collections.ArrayList,Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupType,Tekla.Structures.Model.Polygon,Tekla.Structures.Model.Polygon,System.Boolean)">
            <summary>The get reinforcement bar group.</summary>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <param name="type">The type value.</param>
            <param name="polygon1">The polygon 1.</param>
            <param name="polygon2">The polygon 2.</param>
            <param name="checkHooks">Indicates when ever the hooks should be checked.</param>
            <returns>The Tekla.Structures.Model.RebarGroup.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetRebarGroups">
            <summary>
            The get reinforcement bar groups.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetCircleTaperedGroup">
            <summary>
            Get circle papered rebar group;
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetTaperedRebarGroup(System.Int32)">
            <summary>The get tapered reinforcement bar group.</summary>
            <param name="primaryRebarIndex">The primary reinforcement bar index.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GetUngroupedRebars">
            <summary>
            The get ungrouped rebars.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.GroupShouldBeSplitted(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.SingleRebar,System.Double@)">
            <summary>The group should be splitted.</summary>
            <param name="primaryRebar">The primary rebar.</param>
            <param name="secondaryRebar">The secondary rebar.</param>
            <param name="previusDistanceRebars">The previus distance reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.IsFirstRebarDistanceEqual(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.SingleRebar)">
            <summary>The is first reinforcement bar distance equal.</summary>
            <param name="firstRebar">The first rebar.</param>
            <param name="secondRebar">The second rebar.</param>
            <param name="thirdRebar">The third rebar.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.LineSegmentsOverlapButAreNotIdentical(Tekla.Structures.Geometry3d.LineSegment,Tekla.Structures.Geometry3d.LineSegment)">
            <summary>The line segments overlap but are not identical.</summary>
            <param name="primarySegment">The primary segment.</param>
            <param name="secondarySegment">The secondary segment.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.PrimaryRebarGroupShouldBeSplit(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>The primary reinforcement bar group should be split.</summary>
            <param name="primaryGroupGeometries">The primary group geometries.</param>
            <param name="secondaryGroupGeometries">The secondary group geometries.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.PrimaryRebarGroupShouldBeSplit(Tekla.Structures.Model.RebarGroup,System.Collections.ArrayList,Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.RebarGeometry@,System.Collections.ArrayList@)">
            <summary>The primary reinforcement bar group should be split.</summary>
            <param name="primaryRebarGroup">The primary reinforcement bar group.</param>
            <param name="primaryGroupGeometries">The primary group geometries.</param>
            <param name="secondaryRebar">The secondary rebar.</param>
            <param name="splitRebarGeometry">The split reinforcement bar geometry.</param>
            <param name="remainingParallelRebars">The remaining parallel reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.RebarArrayListContainsSingleRebar(Tekla.Structures.Model.SingleRebar,System.Collections.ArrayList)">
            <summary>The reinforcement bar array list contains single rebar.</summary>
            <param name="rebar">The rebar.</param>
            <param name="rebarsArray">The reinforcement bars array.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.RebarGroupArrayListContainsRebarGroup(Tekla.Structures.Model.RebarGroup,System.Collections.ArrayList)">
            <summary>The reinforcement bar group array list contains reinforcement bar group.</summary>
            <param name="rebarGroup">The reinforcement bar group.</param>
            <param name="rebarGroupsArray">The reinforcement bar groups array.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.RebarGroupsDoNotOverlap(Tekla.Structures.Model.RebarGeometry,Tekla.Structures.Model.RebarGeometry)">
            <summary>The reinforcement bar groups do not overlap.</summary>
            <param name="primaryRebarGeometry">The primary reinforcement bar geometry.</param>
            <param name="secondaryRebarGeometry">The secondary reinforcement bar geometry.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.RebarHooksShouldBeTurned(Tekla.Structures.Model.Reinforcement)">
            <summary>Determines whether the hooks of the rebar should be turned.</summary>
            <param name="currentRebar">The reinforcement bar group.</param>
            <returns>True if the hooks of the group should be turned.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.RebarsDoNotOverlap(Tekla.Structures.Geometry3d.Vector,Tekla.Structures.Geometry3d.Vector)">
            <summary>The reinforcement bars do not overlap.</summary>
            <param name="primaryVector">The primary vector.</param>
            <param name="secondaryVector">The secondary vector.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SplitGroupsWithTwoRebarsOrMore(System.Collections.ArrayList,System.Collections.ArrayList)">
            <summary>The split groups with two reinforcement bars or more.</summary>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <param name="newRebarGroups">The new reinforcement bar groups.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SplitInDifferentGroupsIfNeeded(System.Collections.ArrayList)">
            <summary>The split in different groups if needed.</summary>
            <param name="parallelRebars">The parallel reinforcement bars.</param>
            <returns>The System.Collections.ArrayList.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SplitPrimaryRebarGroup(Tekla.Structures.Model.RebarGroup,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>The split primary reinforcement bar group.</summary>
            <param name="primaryRebarGroup">The primary reinforcement bar group.</param>
            <param name="primaryGroupGeometries">The primary group geometries.</param>
            <param name="secondaryGroupGeometries">The secondary group geometries.</param>
            <param name="splitRebarGroups">The split reinforcement bar groups.</param>
            <param name="splitUngroupedRebars">The split ungrouped reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SplitPrimaryRebarGroupByRebarGroups(System.Collections.ArrayList,Tekla.Structures.Model.RebarGroup,System.Int32,System.Collections.ArrayList,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>The split primary reinforcement bar group by reinforcement bar groups.</summary>
            <param name="newRebarGroups">The reinforcement bar groups.</param>
            <param name="primaryRebarGroup">The primary reinforcement bar group.</param>
            <param name="primaryGroupIndex">The primary group index.</param>
            <param name="primaryGroupGeometries">The primary group geometries.</param>
            <param name="splitRebarGroups">The split reinforcement bar groups.</param>
            <param name="splitUngroupedRebars">The split ungrouped reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SplitPrimaryRebarGroupBySingleRebar(System.Collections.ArrayList,Tekla.Structures.Model.RebarGroup,System.Collections.ArrayList,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>The split primary reinforcement bar group by single rebar.</summary>
            <param name="newUngroupedRebars">The ungrouped reinforcement bars.</param>
            <param name="primaryRebarGroup">The primary reinforcement bar group.</param>
            <param name="primaryGroupGeometries">The primary group geometries.</param>
            <param name="splitRebarGroups">The split reinforcement bar groups.</param>
            <param name="splitUngroupedRebars">The split ungrouped reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SplitRebarGroups(System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>The split reinforcement bar groups.</summary>
            <param name="newRebarGroups">The reinforcement bar groups.</param>
            <param name="newUngroupedRebars">The ungrouped reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SingleRebarToRebarGroupConverter.SplitRebarGroupsForSplicing">
            <summary>
            The split reinforcement bar groups for splicing.
            </summary>
            <returns>
            The System.Boolean.
            </returns>
        </member>
        <member name="T:Tekla.Structures.Concrete.SpliceData">
            <summary>
            The splice data.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Concrete.SpliceData.BarPositions">
            <summary>Gets or sets the bar positions.</summary>
            <value>The bar positions.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SpliceData.LappingLength">
            <summary>Gets or sets the lapping length.</summary>
            <value>The lapping length.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SpliceData.LappingLengthFactor">
            <summary>Gets or sets the lapping length factor.</summary>
            <value>The lapping length factor.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SpliceData.SpliceType">
            <summary>Gets or sets the splice type.</summary>
            <value>The splice type.</value>
        </member>
        <member name="T:Tekla.Structures.Concrete.SpliceRebarsInPart">
            <summary>
            The splice reinforcement bars in part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SpliceRebarsInPart.AngleEpsilon">
            <summary>
            The angl e_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SpliceRebarsInPart.DistanceEpsilon">
            <summary>
            The distanc e_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SpliceRebarsInPart.spliceData">
            <summary>
            The m_ splice data.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.SpliceRebarsInPart"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.#ctor(Tekla.Structures.Concrete.SpliceData)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.SpliceRebarsInPart"/> class.</summary>
            <param name="newSpliceData">The splice data.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.SpliceRebarsIfNeeded(Tekla.Structures.Concrete.SpliceData,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList@)">
            <summary>The splice reinforcement bars if needed.</summary>
            <param name="newSpliceData">The splice data.</param>
            <param name="rebarGroups">The reinforcement bar groups.</param>
            <param name="ungroupedRebars">The ungrouped reinforcement bars.</param>
            <param name="splices">The splices.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.SpliceRebarsIfNeeded(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList@)">
            <summary>The splice reinforcement bars if needed.</summary>
            <param name="rebarGroups">The reinforcement bar groups.</param>
            <param name="ungroupedRebars">The ungrouped reinforcement bars.</param>
            <param name="splices">The splices.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.CreateSplices(Tekla.Structures.Model.Reinforcement,Tekla.Structures.Model.Reinforcement,System.Double,System.Collections.ArrayList@)">
            <summary>The create splices.</summary>
            <param name="primary">The primary.</param>
            <param name="secondary">The secondary.</param>
            <param name="size">The size value.</param>
            <param name="splices">The splices.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.GetGroupLines(Tekla.Structures.Model.RebarGroup,System.Collections.ArrayList@)">
            <summary>The get group lines.</summary>
            <param name="rebarGroup">The reinforcement bar group.</param>
            <param name="groupSegments">The group segments.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.GetNominalDiameter(Tekla.Structures.Model.Reinforcement)">
            <summary>The get nominal diameter.</summary>
            <param name="rebar">The rebar.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.GetRebarVectorForGroup(System.Int32,System.Collections.ArrayList)">
            <summary>The get reinforcement bar vector for group.</summary>
            <param name="segmentIndex">The segment index.</param>
            <param name="groupSegments">The group segments.</param>
            <returns>The Tekla.Structures.Geometry3d.Vector.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.GetRebarVectorForSingleRebar(System.Int32,Tekla.Structures.Model.SingleRebar)">
            <summary>The get reinforcement bar vector for single rebar.</summary>
            <param name="pointIndex">The point index.</param>
            <param name="rebar">The rebar.</param>
            <returns>The Tekla.Structures.Geometry3d.Vector.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.RebarGroupsCanBeSpliced(Tekla.Structures.Model.RebarGroup,Tekla.Structures.Model.RebarGroup)">
            <summary>The reinforcement bar groups can be spliced.</summary>
            <param name="primaryRebarGroup">The primary reinforcement bar group.</param>
            <param name="secondaryRebarGroup">The secondary reinforcement bar group.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.RebarsCanBeSpliced(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Model.SingleRebar)">
            <summary>The reinforcement bars can be spliced.</summary>
            <param name="primaryRebar">The primary rebar.</param>
            <param name="secondaryRebar">The secondary rebar.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.RebarsDoNotOverlap(Tekla.Structures.Geometry3d.Vector,Tekla.Structures.Geometry3d.Vector)">
            <summary>The reinforcement bars do not overlap.</summary>
            <param name="primaryVector">The primary vector.</param>
            <param name="secondaryVector">The secondary vector.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.SpliceRebarGroups(System.Collections.ArrayList,System.Collections.ArrayList@)">
            <summary>The splice reinforcement bar groups.</summary>
            <param name="rebarGroups">The reinforcement bar groups.</param>
            <param name="splices">The splices.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SpliceRebarsInPart.SpliceUngroupedRebars(System.Collections.ArrayList,System.Collections.ArrayList@)">
            <summary>The splice ungrouped reinforcement bars.</summary>
            <param name="ungroupedRebars">The ungrouped reinforcement bars.</param>
            <param name="splices">The splices.</param>
        </member>
        <member name="T:Tekla.Structures.Concrete.SplitData">
            <summary>
            The split data.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitData.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.SplitData"/> class.</summary>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.DepthLocation">
            <summary>Gets or sets the depth location.</summary>
            <value>The depth location.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.LappingLength">
            <summary>Gets or sets the lapping length.</summary>
            <value>The lapping length.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.MaxLength">
            <summary>Gets or sets the max length.</summary>
            <value>The max length.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.MinSplitDistance">
            <summary>Gets or sets the min split distance.</summary>
            <value>The min split distance.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.SpliceOffset">
            <summary>Gets or sets the splice offset.</summary>
            <value>The splice offset.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.SpliceSection">
            <summary>Gets or sets the splice section.</summary>
            <value>The splice section.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.SpliceSymmetry">
            <summary>Gets or sets the splice symmetry.</summary>
            <value>The splice symmetry.</value>
        </member>
        <member name="P:Tekla.Structures.Concrete.SplitData.SpliceType">
            <summary>Gets or sets the splice type.</summary>
            <value>The splice type.</value>
        </member>
        <member name="T:Tekla.Structures.Concrete.SplitRebarsInPart">
            <summary>
            The split reinforcement bars in part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.AdditionalRebarLength">
            <summary>
            The additiona l_ reba r_ length.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.AngleEpsilon">
            <summary>
            The angl e_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.DistanceEpsilon">
            <summary>
            The distanc e_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.RebarLengthEpsilon">
            <summary>
            The reba r_ lengt h_ epsilon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.originalRebar">
            <summary>
            The m_ original rebar.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.singleRebars">
            <summary>
            The m_ single rebars.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.splitData">
            <summary>
            The m_ split data.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.startHookLength">
            <summary>
            Length of the start hook.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.endHookLength">
            <summary>
            Length of the start hook.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.minimumBarsLength">
            <summary>
            Minimum bars length.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.#ctor(Tekla.Structures.Concrete.SplitData,System.Collections.ArrayList)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.SplitRebarsInPart"/> class.</summary>
            <param name="splitData">The split data.</param>
            <param name="singleRebars">The single reinforcement bars.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Concrete.SplitRebarsInPart"/> class.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions">
            <summary>
            The bar positions.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions.First">
            <summary>
            The first.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions.Second">
            <summary>
            The second.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions.Third">
            <summary>
            The third.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions.Forth">
            <summary>
            The forth.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Concrete.SplitRebarsInPart.FirstOrLastEnum">
            <summary>
            The first or last enum.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.FirstOrLastEnum.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.FirstOrLastEnum.FirstRebar">
            <summary>
            The firstrebar.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.FirstOrLastEnum.LastRebar">
            <summary>
            The lastrebar.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.FirstOrLastEnum.MiddleRebar">
            <summary>
            The middlerebar.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection">
            <summary>
            The splice section.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection.EverySingle">
            <summary>
            The ever y_ single.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection.EverySecond">
            <summary>
            The ever y_ second.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection.EveryThird">
            <summary>
            The ever y_ third.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection.EveryForth">
            <summary>
            The ever y_ forth.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetRebarLength(Tekla.Structures.Model.RebarGeometry,System.Boolean)">
            <summary>
            Get rebar length.
            </summary>
            <param name="geometry">rebar geometry</param>
            <param name="roundUp">Round up output values</param>
            <returns>rebar length</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitRebarsIfNeeded(Tekla.Structures.Concrete.SplitData,System.Collections.Generic.IList{Tekla.Structures.Model.SingleRebar},System.Collections.ArrayList@)">
            <summary>
            Split single rebars if needed.
            </summary>
            <param name="newSplitData">Split data.</param>
            <param name="newSingleRebars">List of existing single rebars, which might need to be split.</param>
            <param name="splitRebars">Splitted rebars</param>
            <returns>True, when rebars has been successfully processed.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitRebarsIfNeeded(Tekla.Structures.Concrete.SplitData,Tekla.Structures.Model.RebarGroup,System.Collections.ArrayList@,System.Int32)">
            <summary>
            Split rebar group if needed.
            </summary>
            <param name="newSplitData">Split data.</param>
            <param name="rebarGroupToSplit">Existing rebar group, which might need to be split.</param>
            <param name="splitRebars">Splitted rebars</param>
            <param name="crossSection">Rebar group index, use for multiple groups in single part for continues splicing.</param>
            <returns>True, when rebars has been successfully processed.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitRebarsIfNeeded(Tekla.Structures.Concrete.SplitData,System.Collections.ArrayList,System.Collections.ArrayList@)">
            <summary>The split reinforcement bars if needed.</summary>
            <param name="newSplitData">The split data.</param>
            <param name="newSingleRebars">The single reinforcement bars.</param>
            <param name="splitRebars">The split reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitRebarsIfNeeded(System.Collections.ArrayList@)">
            <summary>The split reinforcement bars if needed.</summary>
            <param name="newSplitRebars">The split reinforcement bars.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.PolygonForSplicing(System.Collections.IList,Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point@,Tekla.Structures.Geometry3d.Vector,System.Int32,System.Int32)">
            <summary>
            Polygon for splicing from start
            </summary>
            <param name="rebarPoints">Re-bar points</param>
            <param name="last">Last point</param>
            <param name="first">First point</param>
            <param name="direction">Re-bar direction</param>
            <param name="index">Polygon index</param>
            <param name="count">Count of new polygons</param>
            <returns>Polygon for re-bar group</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.ReverseRebars(System.Collections.Generic.List{Tekla.Structures.Model.Polygon})">
            <summary>
            Reverse re-bars
            </summary>
            <param name="polygonList">Re-bars polygon list</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetLastPointFromGeometry(System.Collections.IList)">
            <summary>
            Get last point from geometry
            </summary>
            <param name="rebarPoints">Re-bar points</param>
            <returns>Last point from re-bar geometry</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetFirstPointFromGeometry(System.Collections.IList)">
            <summary>
            Get first point from re-bar geometry
            </summary>
            <param name="rebarPoints">Re-bar points</param>
            <returns>First point from re-bar geometry</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetSummaryReinforcementLengthOptions(System.Boolean@,System.Boolean@,System.Double@,System.Boolean@)">
            <summary>
            Get summary length options.
            </summary>
            <param name="useUserDefinedRebarLengthAndWeight">use user defined rebar length and weight</param>
            <param name="useUserDefinedRebarShapeRules">use user defined rebar shape rules</param>
            <param name="scheduleTotalLengthRoundingAccuracy">schedule total length rounding accuracy</param>
            <param name="scheduleTotalLengthRoundingDirection">schedule total length rounding direction</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.ReadScheduleRounding(System.IO.StreamReader,System.Double@,System.Boolean@)">
            <summary>
            Read schedule rounding
            </summary>
            <param name="reader">Stream reader from the dile</param>
            <param name="scheduleTotalLengthRoundingAccuracy">schedule total length rounding accuracy</param>
            <param name="scheduleTotalLengthRoundingDirection">schedule total length rounding direction</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetTeklaAdvancedOption(System.String,System.String@)">
            <summary>
            Get Tekla advanced option
            </summary>
            <param name="variable">variable name</param>
            <param name="variableValue">variable value</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetLegthVector(Tekla.Structures.Model.RebarGeometry,System.Int32)">
            <summary>
            Get length vector.
            </summary>
            <param name="geometry">reinforcement geometry</param>
            <param name="index">actual index</param>
            <returns>length vector</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SumOfSegLength(Tekla.Structures.Model.RebarGeometry)">
            <summary>
            Summary segment length (SSL).
            </summary>
            <param name="geometry">reinforcement geometry</param>
            <returns>segment length (SSL)</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetBendingRadius(Tekla.Structures.Model.RebarGeometry,System.Int32)">
            <summary>
            Get bending radius from geometry.
            </summary>
            <param name="geometry">reinforcement geometry</param>
            <param name="index">index of bending radius</param>
            <returns>bending radius</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.RadiusDelta(Tekla.Structures.Geometry3d.Vector,Tekla.Structures.Geometry3d.Vector,System.Double)">
            <summary>
            Radius delta (between two vectors)
            </summary>
            <param name="vector1">vector 1</param>
            <param name="vector2">vector 2</param>
            <param name="radius">bending radius</param>
            <returns>radius delta</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetVectorLineSegment(Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point)">
            <summary>
            Get 3D vector from line segment.
            </summary>
            <param name="point1">point 1</param>
            <param name="point2">point 2</param>
            <returns>vector from line</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CenterLineLength(Tekla.Structures.Model.RebarGeometry)">
            <summary>
            Center line length (CLL).
            </summary>
            <param name="geometry">reinforcement geometry</param>
            <returns>center line length</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.MakeSingleRebarsFromPolygons(System.Collections.Generic.List{Tekla.Structures.Model.Polygon},Tekla.Structures.Model.Reinforcement)">
            <summary>
            Create single rebars from list of rebar shape polygons.
            </summary>
            <param name="rebarShapes">Rebar shape polygons.</param>
            <param name="originalReinforcement">Existing reinforcement based on which new single rebars will be created.</param>
            <returns>List of new single rebars.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CalculateTotalOffset(System.Double,Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection,Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>The calculate total offset.</summary>
            <param name="totalRebarLength">The total reinforcement bar length.</param>
            <param name="section">The section.</param>
            <param name="barPosition">The bar position.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="totalOffset">The total offset.</param>
            <param name="remainingLength">The remaining length.</param>
            <param name="hookLength">The hook length.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CalculateTotalOffsetForFirstRebar(System.Double,System.Double,System.Double@,System.Double@)">
            <summary>The calculate total offset for first rebar.</summary>
            <param name="totalRebarLength">The total reinforcement bar length.</param>
            <param name="maxLength">The max length.</param>
            <param name="remainingLength">The remaining length.</param>
            <param name="hookLength">The hook length.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CalculateTotalOffsetForFollowingRebar(System.Double,System.Double,System.Double,Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection,Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions,System.Double@)">
            <summary>The calculate total offset for following rebar.</summary>
            <param name="totalRebarLength">The total reinforcement bar length.</param>
            <param name="maxLength">The max length.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="section">The section.</param>
            <param name="barPosition">The bar position.</param>
            <param name="remainingLength">The remaining length.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CreateDifferentMiddleRebarInCenterSymmetry(System.Double,Tekla.Structures.Model.SingleRebar,Tekla.Structures.Geometry3d.Vector@,System.Double@,System.Collections.ArrayList@)">
            <summary>The create different middle rebar in center symmetry.</summary>
            <param name="remainingLength">The remaining length.</param>
            <param name="currentOriginalRebar">The original rebar.</param>
            <param name="splitPattern">The split pattern.</param>
            <param name="incrementalLength">The incremental length.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CreateEndRebar(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Geometry3d.Vector,System.Collections.ArrayList,System.Double@,System.Double@)">
            <summary>The create end rebar.</summary>
            <param name="currentOriginalRebar">The original rebar.</param>
            <param name="splitPattern">The split pattern.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <param name="incrementalLength">The incremental length.</param>
            <param name="lastSegment">The last segment.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CreateMiddleRebar(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Geometry3d.Vector,System.Collections.ArrayList,System.Double@)">
            <summary>The create middle rebar.</summary>
            <param name="currentOriginalRebar">The original rebar.</param>
            <param name="splitPattern">The split pattern.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <param name="incrementalLength">The incremental length.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CreateSplittedRebars(Tekla.Structures.Concrete.SplitRebarsInPart.FirstOrLastEnum,System.Collections.ArrayList,System.Collections.ArrayList,System.Double@)">
            <summary>The create splitted reinforcement bars.</summary>
            <param name="position">The position.</param>
            <param name="rebarPoints">The reinforcement bar points.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <param name="finalRebarLength">The final reinforcement bar length.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CreateStartRebar(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Geometry3d.Vector,System.Collections.ArrayList,System.Double,System.Double,System.Double@)">
            <summary>The create start rebar.</summary>
            <param name="currentOriginalRebar">The original rebar.</param>
            <param name="splitPattern">The split pattern.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <param name="totalOffset">The total offset.</param>
            <param name="hookLength">The hook length.</param>
            <param name="incrementalLength">The incremental length.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetRebarLengthEpsilon">
            <summary>
            The get reinforcement bar length epsilon.
            </summary>
            <returns>
            The System.Double.
            </returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetRebarMaximumLength(Tekla.Structures.Concrete.SplitRebarsInPart.FirstOrLastEnum,System.Double@)">
            <summary>The get reinforcement bar maximum length.</summary>
            <param name="position">The position.</param>
            <param name="maxLength">The max length.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetShortRebarLength(System.Double,System.Double,System.Double)">
            <summary>The get short reinforcement bar length.</summary>
            <param name="maxLength">The max length.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="barCount">The bar count.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitEveryFourthRebarInSameLocation(System.Int32,System.Collections.Generic.List{System.Double},System.Double@,System.Collections.ArrayList@)">
            <summary>The split every fourth rebar in same location.</summary>
            <param name="rebarIndex">The reinforcement bar index.</param>
            <param name="segmentLengths">Lengths of bars segments.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitEveryRebarInSameLocation(System.Int32,System.Double@,System.Collections.Generic.List{System.Double},System.Collections.ArrayList@)">
            <summary>The split every rebar in same location.</summary>
            <param name="rebarIndex">The reinforcement bar index.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="segmentLengths">Lengths of bars segments.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitEverySecondRebarInSameLocation(System.Int32,System.Double@,System.Collections.Generic.List{System.Double},System.Collections.ArrayList@)">
            <summary>The split every second rebar in same location.</summary>
            <param name="rebarIndex">The reinforcement bar index.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="segmentLengths">Lengths of bars segments.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitEveryThirdRebarInSameLocation(System.Int32,System.Collections.Generic.List{System.Double},System.Double@,System.Collections.ArrayList@)">
            <summary>The split every third rebar in same location.</summary>
            <param name="rebarIndex">The reinforcement bar index.</param>
            <param name="segmentLengths">Lengths of bars segments.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitRebar(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection,Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions,System.Double@,System.Collections.ArrayList@)">
            <summary>The split rebar.</summary>
            <param name="originalRebar">The original rebar.</param>
            <param name="section">The section.</param>
            <param name="barPosition">The bar position.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitRebar(Tekla.Structures.Model.SingleRebar,Tekla.Structures.Concrete.SplitRebarsInPart.SpliceSection,Tekla.Structures.Concrete.SplitRebarsInPart.BarPositions,System.Collections.Generic.List{System.Double},System.Double@,System.Collections.ArrayList@)">
            <summary>The split rebar.</summary>
            <param name="originalRebar">The original rebar.</param>
            <param name="section">The section.</param>
            <param name="barPosition">The bar position.</param>
            <param name="rebarSegmentLengths">Lengths of all rebars segments.</param>
            <param name="remainingOffset">The remaining offset.</param>
            <param name="splitRebarSet">The split reinforcement bar set.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.AddRebarPoint(Tekla.Structures.Geometry3d.Point,System.Collections.ArrayList)">
            <summary>
            Add rebar point into the list, if point is not already within.
            </summary>
            <param name="rebarPoint">Rebar point.</param>
            <param name="list">List of rebar points.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetHookRealLength(Tekla.Structures.Model.RebarHookData,System.Double)">
            <summary>
            Get start hook real length
            </summary>
            <param name="rebarHookData">Hook data</param>
            <param name="actualRebarSize">Actual rebar size</param>
            <returns>Real length of start hook</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetRebarDiameter(System.String,System.String)">
            <summary>
            Get rebar diameter.
            </summary>
            <param name="size">Rebar size</param>
            <param name="grade">Rebar grade</param>
            <returns>Rebar diameter</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.SplitRebarGeometry(Tekla.Structures.Model.RebarGeometry,Tekla.Structures.Model.RebarGeometry,System.Int32)">
            <summary>
            Split re-bar
            </summary>
            <param name="geometryWithoutHooks">Re-bar geometry without hooks</param>
            <param name="geometryWithHooks">Re-bar geometry with hooks</param>
            <param name="index">Re-bar index</param>
            <returns>New rebar polygons</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CheckMinimumDistance(System.Collections.Generic.List{Tekla.Structures.Model.Polygon})">
            <summary>
            Check minimum distances of rebars.
            </summary>
            <param name="rebarShapeList">List of rebar shapes.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.ShortenNextRebar(System.Collections.Generic.List{Tekla.Structures.Model.Polygon},System.Double,System.Int32,Tekla.Structures.Geometry3d.Vector)">
            <summary>
            Shorten next rebar, so current rebar can have minimum length.
            </summary>
            <param name="rebarShapeList">List of rebar shapes.</param>
            <param name="difference">Difference between current rebars length and minimum allowed length.</param>
            <param name="rebarIndex">Index of the current rebar.</param>
            <param name="direction">Direction for shortening.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.ShortenPreviousRebar(System.Collections.Generic.IList{Tekla.Structures.Model.Polygon},System.Double,System.Int32,Tekla.Structures.Geometry3d.Vector)">
            <summary>
            Shorten previous rebar, so current rebar can have minimum length.
            </summary>
            <param name="rebarShapeList">List of rebar shapes.</param>
            <param name="difference">Difference between current rebars length and minimum allowed length.</param>
            <param name="rebarIndex">Index of the current rebar.</param>
            <param name="direction">Direction for shortening.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetRebarCount(System.Double)">
            <summary>
            Get count of re-bars
            </summary>
            <param name="rebarLength">Re-bar length</param>
            <returns>Count of re-bars</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetLengthList(System.Double,System.Int32,System.Double,System.Double)">
            <summary>
            Get list of re-bar lengths
            </summary>
            <param name="firstLastDistnace">Distance between first and last point of re-bar</param>
            <param name="index">Re-bar index</param>
            <param name="endHookRealLength">End hook real length</param>
            <param name="startHookRealLength">Start hook real length</param>
            <returns>List of re-bars lengths</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.LengthsForSplicingFromStart(System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double)">
            <summary>
            Lengths for splicing from start.
            </summary>
            <param name="lengthList">List of rebars lengths.</param>
            <param name="endHookRealLength">End hook real length.</param>
            <param name="startHookRealLength">Start hook real length.</param>
            <param name="ratio">Length ratio.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.LengthsForSplicingFromSides(System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double)">
            <summary>
            Lengths for splicing from sides.
            </summary>
            <param name="lengthList">List of rebars lengths.</param>
            <param name="firstLastDistnace">Distance between first and last point of re-bar.</param>
            <param name="endHookRealLength">End hook real length.</param>
            <param name="startHookRealLength">Start hook real length.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.LengthsForSplicingFromMiddle(System.Collections.Generic.List{System.Double},System.Double,System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Lengths for splicing from middle.
            </summary>
            <param name="lengthList">List of rebars lengths.</param>
            <param name="firstLastDistnace">Distance between first and last point of re-bar.</param>
            <param name="index">Re-bar index.</param>
            <param name="endHookRealLength">End hook real length.</param>
            <param name="startHookRealLength">Start hook real length.</param>
            <param name="ratio">Length ratio.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.RestValuesForSplicingFromMiddle(System.Collections.Generic.List{System.Double},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Rest values for splicing from middle
            </summary>
            <param name="lengthList">List of rebars lengths.</param>
            <param name="restLength">Rest length.</param>
            <param name="endHookRealLength">End hook real length.</param>
            <param name="startHookRealLength">Start hook real length.</param>
            <param name="ratio">Length ratio.</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetRestLength(System.Double,System.Collections.Generic.List{System.Double},System.Double@,System.Double@,System.Boolean)">
            <summary>
            Get rest length
            </summary>
            <param name="restLength">Original rest length</param>
            <param name="valueList">List of re-bars lengths</param>
            <param name="restLength1">Rest length 1</param>
            <param name="restLength2">Rest length 2</param>
            <param name="one">True if only one value is needed on return</param>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.GetBasicValueList(System.Double)">
            <summary>
            Get basic value list
            </summary>
            <param name="firstLastDistnace">Distance between first and last point of re-bar</param>
            <returns>List of re-bars lengths</returns>
        </member>
        <member name="M:Tekla.Structures.Concrete.SplitRebarsInPart.CheckDistances(System.Collections.Generic.List{Tekla.Structures.Model.Polygon},Tekla.Structures.Geometry3d.Point,System.Collections.ArrayList,Tekla.Structures.Geometry3d.Vector)">
            <summary>
            Check distances
            </summary>
            <param name="polygonList">Polygon list</param>
            <param name="lastPoint">Last point</param>
            <param name="rebarPoints">Re-bar points</param>
            <param name="direction">Direction vector</param>
            <returns>New rebar polygons</returns>
        </member>
        <member name="T:Tekla.Structures.Configuration">
            <summary>
            Application configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Viewer">
            <summary>
            Viewer configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.ProductionPlanner">
            <summary>
            Production planner configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Drafter">
            <summary>
            Drafter configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.ProjectManagement">
            <summary>
            Project Management configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.ConstructionManagement">
            <summary>
            Construction Management configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Engineering">
            <summary>
            Engineering configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.ReinforcedConcreteDetailing">
            <summary>
            Reinforced conrete detailing configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.PrecastConcreteDetailing">
            <summary>
            Precast concrete detailing configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.SteelDetailing">
            <summary>
            Steel detailing configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Full">
            <summary>
            Full detailing configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Primary">
            <summary>
            Steel detailing limited configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Educational">
            <summary>
            Educational configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Developer">
            <summary>
            Developer configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Partner">
            <summary>
            Partner configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.EPMModeler">
            <summary>
            EPM Modeler configuration.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Carbon">
            <summary>
            The subscription license Carbon.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Graphite">
            <summary>
            The subscription license Graphite.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.Diamond">
            <summary>
            The subscription license Diamond.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Configuration.MEP">
            <summary>
            The subscription license MEP.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ConfigurationSet">
            <summary>
            Configuration set.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ConfigurationSet.storage">
            <summary>
            Configuration set storage.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ConfigurationSet"/> class. 
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.#ctor(Tekla.Structures.Configuration[])">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ConfigurationSet"/> class. 
            Initializes a new instance of the class.</summary>
            <param name="configurations">Initial configurations.</param>
        </member>
        <member name="P:Tekla.Structures.ConfigurationSet.Empty">
            <summary>Gets the empty configuration set.</summary>
            <value>The empty.</value>
        </member>
        <member name="P:Tekla.Structures.ConfigurationSet.Full">
            <summary>Gets the full configuration set.</summary>
            <value>The full value.</value>
        </member>
        <member name="P:Tekla.Structures.ConfigurationSet.Item(Tekla.Structures.Configuration)">
            <summary>Gets or sets a boolean value indicating whether the set contains the specified configuration.</summary>
            <param name="configuration">The configuration.</param>
            <value>A boolean value indicating whether the set contains the specified configuration.</value>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.Add(Tekla.Structures.Configuration)">
            <summary>Adds the specified configuration to the configuration set.</summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.Add(Tekla.Structures.Configuration[])">
            <summary>Adds the specified configurations to the configuration set.</summary>
            <param name="configurations">The configurations.</param>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.Contains(Tekla.Structures.Configuration)">
            <summary>Determines whether the configuration set contains the specified configuration.</summary>
            <param name="configuration">The configuration.</param>
            <returns>A boolean value indicating whether the set contains the specified configuration.</returns>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.ContainsAll(Tekla.Structures.Configuration[])">
            <summary>Determines whether the configuration set contains all of the specified configurations.</summary>
            <param name="configurations">The configurations.</param>
            <returns>A boolean value indicating whether the set contains all of the specified configurations.</returns>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.ContainsAny(Tekla.Structures.Configuration[])">
            <summary>Determines whether the configuration set contains any of the specified configurations.</summary>
            <param name="configurations">The configurations.</param>
            <returns>A boolean value indicating whether the set contains any of the specified configurations.</returns>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.Remove(Tekla.Structures.Configuration)">
            <summary>Removes the specified configuration from the configuration set.</summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="M:Tekla.Structures.ConfigurationSet.Remove(Tekla.Structures.Configuration[])">
            <summary>Removes the specified configurations from the configuration set.</summary>
            <param name="configurations">The configurations.</param>
        </member>
        <member name="T:Tekla.Structures.Connection">
            <summary>
            Connection interface implementation.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Connection.drawing">
            <summary>
            Drawing connection instance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Connection.model">
            <summary>
            Model connection instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Connection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.Connection"/> class. 
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Connection.ChangesCommitted">
            <summary>
            Announces that the changes have been committed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Connection.ChangesDiscarded">
            <summary>
            Announces that the changes have been discarded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.Connection.SelectionChanged">
            <summary>
            Announces that the selection has changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Connection.AllObjects">
            <summary>
            Gets all objects in the view.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="P:Tekla.Structures.Connection.Drawing">
            <summary>
            Gets the drawing connection instance.
            </summary>
            <value>
            Drawing connection instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.Connection.IsActive">
            <summary>
            Gets a value indicating whether the view is active.
            </summary>
            <value>
            Indicates whether the view is active.
            </value>
        </member>
        <member name="P:Tekla.Structures.Connection.Model">
            <summary>
            Gets the model connection instance.
            </summary>
            <value>
            Model connection instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.Connection.SelectedObjects">
            <summary>
            Gets the selected objects in the view.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="M:Tekla.Structures.Connection.CommitChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Commits the changes made to the objects.</summary>
            <param name="objects">Enumerable collection of modified objects.</param>
        </member>
        <member name="M:Tekla.Structures.Connection.Connect">
            <summary>
            Connects the interface.
            </summary>
            <returns>A boolean value indicating whether the interface was connected.</returns>
        </member>
        <member name="M:Tekla.Structures.Connection.DiscardChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Discards the changed made to the objects.</summary>
            <param name="objects">Enumerable collection of modified objects.</param>
        </member>
        <member name="M:Tekla.Structures.Connection.Disconnect">
            <summary>
            Disconnects the interface.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Connection.PickObject(System.String)">
            <summary>Picks an object.</summary>
            <param name="prompt">Pick prompt.</param>
            <returns>Picked object or null if no object was picked.</returns>
        </member>
        <member name="M:Tekla.Structures.Connection.RunMacro(System.String)">
            <summary>Executes a macro.</summary>
            <param name="macroName">Macro name.</param>
        </member>
        <member name="M:Tekla.Structures.Connection.SelectObjectByIdentifier(Tekla.Structures.Identifier)">
            <summary>Selects object by identifier.</summary>
            <param name="identifier">Object identifier.</param>
            <returns>Selected object or null if no matching object was found.</returns>
        </member>
        <member name="T:Tekla.Structures.DrawingConnection">
            <summary>
            Drawing connection.
            </summary>
        </member>
        <member name="F:Tekla.Structures.DrawingConnection.LongOperation">
            <summary>
            Timeout for long operations.
            </summary>
        </member>
        <member name="F:Tekla.Structures.DrawingConnection.model">
            <summary>
            Model connection.
            </summary>
        </member>
        <member name="F:Tekla.Structures.DrawingConnection.context">
            <summary>
            UIThreadId for executing the operation immediately if in UI thread
            </summary>
        </member>
        <member name="F:Tekla.Structures.DrawingConnection.connection">
            <summary>
            Drawing connection object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.DrawingConnection.events">
            <summary>
            Drawing event dispatcher.
            </summary>
        </member>
        <member name="F:Tekla.Structures.DrawingConnection.eventsRegistered">
            <summary>
            Indicates whether event dispatcher has been registered.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.#ctor(Tekla.Structures.RunContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.DrawingConnection"/> class. 
            Initializes a new instance of the class.
            </summary>
            <param name="context">passes the info to define running context</param>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.#ctor(Tekla.Structures.ModelConnection,Tekla.Structures.RunContext)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.DrawingConnection"/> class. 
            Initializes a new instance of the class.</summary>
            <param name="model">Model connection.</param>
            <param name="context">passes the info to define running context</param>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.ChangesCommitted">
            <summary>
            Announces that the changes have been committed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.ChangesDiscarded">
            <summary>
            Announces that the changes have been discarded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.DrawingLoaded">
            <summary>
            Announces that a drawing has been loaded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.EditorClosed">
            <summary>
            Announces that the drawing editor has been closed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.EditorOpened">
            <summary>
            Announces that the drawing editor has been opened.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.SelectionChanged">
            <summary>
            Announces that the selection has changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.DrawingLoadedEvent">
            <summary>
            Announces that a drawing has been loaded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.EditorClosedEvent">
            <summary>
            Announces that the drawing editor has been closed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.EditorOpenedEvent">
            <summary>
            Announces that the drawing editor has been opened.
            </summary>
        </member>
        <member name="E:Tekla.Structures.DrawingConnection.SelectionChangedEvent">
            <summary>
            Announces that the selection has changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.AllObjects">
            <summary>
            Gets all objects in the view.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.Current">
            <summary>
            Gets the current drawing.
            </summary>
            <value>Current drawing.</value>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.Drawings">
            <summary>
            Gets the drawings.
            </summary>
            <value>
            Enumerable collection of drawings.
            </value>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.IsActive">
            <summary>
            Gets a value indicating whether the object is active.
            </summary>
            <value>
            Indicates whether the object is active.
            </value>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.IsEditorOpen">
            <summary>
            Gets a value indicating whether the drawing editor is open.
            </summary>
            <value>
            Indicates whether the drawing editor is open.
            </value>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.SelectedObjects">
            <summary>
            Gets the selected objects in the view.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.Close">
            <summary>
            Closes the drawing editor.
            </summary>
            <returns>A boolean value indicating whether the drawing editor was closed.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.Close(System.Boolean)">
            <summary>Closes the drawing editor.</summary>
            <param name="saveBeforeClosing">Indicates whether the drawing is saved before closing.</param>
            <returns>A boolean value indicating whether the drawing editor was closed.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.CommitChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Commits the changes made to the objects.</summary>
            <param name="objects">Enumerable collection of modified objects.</param>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.Connect">
            <summary>
            Connects the drawing interface.
            </summary>
            <returns>A boolean value indicating whether the interface is connected.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DiscardChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Discards the changed made to the objects.</summary>
            <param name="objects">Enumerable collection of modified objects.</param>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.Disconnect">
            <summary>
            Disconnects the drawing interface.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.Open(Tekla.Structures.Drawing.Drawing)">
            <summary>Opens a drawing in the drawing editor.</summary>
            <param name="drawing">Drawing to open.</param>
            <returns>A boolean value indicating whether the drawing was opened.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.PickObject(System.String)">
            <summary>Picks an object.</summary>
            <param name="prompt">Pick prompt.</param>
            <returns>Picked object or null if no object was picked.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.RunMacro(System.String)">
            <summary>Executes a macro in the view.</summary>
            <param name="macroName">Macro name.</param>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.Save">
            <summary>
            Saves the current drawing.
            </summary>
            <returns>A boolean value indicating whether the drawing was saved.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.SelectObjectByIdentifier(Tekla.Structures.Identifier)">
            <summary>Selects object by identifier.</summary>
            <param name="identifier">Object identifier.</param>
            <returns>Selected object or null if no matching object was found.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.OnDrawingLoaded">
            <summary>
            Raises the DrawingLoaded event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.OnEditorClosed">
            <summary>
            Raises the EditorClosed event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.OnEditorOpened">
            <summary>
            Raises the EditorOpened event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.OnSelectionChanged">
            <summary>
            Raises the SelectionChanged event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.RegisterEvents">
            <summary>
            Registers the event handlers.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.UnregisterEvents">
            <summary>
            Removes the event handler registration.
            </summary>
        </member>
        <member name="T:Tekla.Structures.DrawingConnection.DrawingCollection">
            <summary>
            Read-only collection of drawings.
            </summary>
        </member>
        <member name="F:Tekla.Structures.DrawingConnection.DrawingCollection.parent">
            <summary>
            Parent connection.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.#ctor(Tekla.Structures.DrawingConnection)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.DrawingConnection.DrawingCollection"/> class. 
            Initializes a new instance of the class.</summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.DrawingCollection.Count">
            <summary>
            Gets the number of drawings in the collection.
            </summary>
            <returns>The number of drawings in the collection.</returns>
        </member>
        <member name="P:Tekla.Structures.DrawingConnection.DrawingCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <returns>A boolean value indicating whether the collection is read-only.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.Add(Tekla.Structures.Drawing.Drawing)">
            <summary>Not supported.</summary>
            <param name="item">The item value.</param>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.Clear">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.Contains(Tekla.Structures.Drawing.Drawing)">
            <summary>Determines whether the collection contains the specified drawing.</summary>
            <param name="item">Drawing to match.</param>
            <returns>A boolean value indicating whether the collection contains the specified drawing.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.CopyTo(Tekla.Structures.Drawing.Drawing[],System.Int32)">
            <summary>Copies the drawings to an array.</summary>
            <param name="array">Target array.</param>
            <param name="arrayIndex">Starting index in the array.</param>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.GetEnumerator">
            <summary>
            Gets the enumerator for the collection.
            </summary>
            <returns>Enumerator for the collection.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.Remove(Tekla.Structures.Drawing.Drawing)">
            <summary>Not supported.</summary>
            <param name="item">The item value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.DrawingConnection.DrawingCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator for the collection.
            </summary>
            <returns>Enumerator for the collection.</returns>
        </member>
        <member name="T:Tekla.Structures.Enumerable">
            <summary>
            Enumerable utility methods.
            </summary>
        </member>
        <member name="M:Tekla.Structures.Enumerable.From(System.Collections.IEnumerator)">
            <summary>Wraps a naked enumerator inside an enumerable sequence.</summary>
            <param name="enumerator">Source enumerator.</param>
            <returns>Enumerable sequence.</returns>
        </member>
        <member name="M:Tekla.Structures.Enumerable.From``1(System.Collections.Generic.IEnumerator{``0})">
            <summary>Wraps a naked enumerator inside an enumerable sequence.</summary>
            <typeparam name="T">Element type.</typeparam>
            <param name="enumerator">Source enumerator.</param>
            <returns>Enumerable sequence.</returns>
        </member>
        <member name="T:Tekla.Structures.ICommonTasks">
            <summary>
            Common tasks library interface.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.CreateGeneralArrangementDrawingFromTemplate(System.String)">
            <summary>Creates a general arrangement drawing from template.</summary>
            <param name="name">Template name.</param>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.OpenAssemblyDrawingProperties(System.String)">
            <summary>Opens assembly drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.OpenAutoDrawingScript(System.String)">
            <summary>Opens auto drawing script editor.</summary>
            <param name="name">Script name.</param>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.OpenCastUnitDrawingProperties(System.String)">
            <summary>Opens cast unit drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.OpenDrawingList">
            <summary>
            Opens the drawing list.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.OpenGeneralArrangementDrawingProperties(System.String)">
            <summary>Opens general arrangement drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.OpenNumberingSettings">
            <summary>
            Opens the numbering settings dialog.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.OpenSinglePartDrawingProperties(System.String)">
            <summary>Opens single part drawing properties dialog.</summary>
            <param name="name">Drawing name.</param>
        </member>
        <member name="M:Tekla.Structures.ICommonTasks.PerformNumbering(System.Boolean)">
            <summary>Performs numbering.</summary>
            <param name="fullNumbering">Indicates whether to perform full numbering for all parts.</param>
        </member>
        <member name="T:Tekla.Structures.IConnection">
            <summary>
            Connection interface.
            </summary>
        </member>
        <member name="P:Tekla.Structures.IConnection.IsActive">
            <summary>
            Gets a value indicating whether the object is active.
            </summary>
            <value>
            Indicates whether the object is active.
            </value>
        </member>
        <member name="T:Tekla.Structures.IDrawing">
            <summary>
            Drawing connection interface.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IDrawing.DrawingLoaded">
            <summary>
            Announces that a drawing has been loaded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IDrawing.EditorClosed">
            <summary>
            Announces that the drawing editor has been closed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IDrawing.EditorOpened">
            <summary>
            Announces that the drawing editor has been opened.
            </summary>
        </member>
        <member name="P:Tekla.Structures.IDrawing.Current">
            <summary>
            Gets the current drawing.
            </summary>
            <value>Current drawing.</value>
        </member>
        <member name="P:Tekla.Structures.IDrawing.Drawings">
            <summary>
            Gets the drawings.
            </summary>
            <value>
            Enumerable collection of drawings.
            </value>
        </member>
        <member name="P:Tekla.Structures.IDrawing.IsEditorOpen">
            <summary>
            Gets a value indicating whether the drawing editor is open.
            </summary>
            <value>
            Indicates whether the drawing editor is open.
            </value>
        </member>
        <member name="M:Tekla.Structures.IDrawing.Close">
            <summary>
            Closes the drawing editor.
            </summary>
            <returns>A boolean value indicating whether the drawing editor was closed.</returns>
        </member>
        <member name="M:Tekla.Structures.IDrawing.Close(System.Boolean)">
            <summary>Closes the drawing editor.</summary>
            <param name="saveBeforeClosing">Indicates whether the drawing is saved before closing.</param>
            <returns>A boolean value indicating whether the drawing editor was closed.</returns>
        </member>
        <member name="M:Tekla.Structures.IDrawing.Open(Tekla.Structures.Drawing.Drawing)">
            <summary>Opens a drawing in the drawing editor.</summary>
            <param name="drawing">Drawing to open.</param>
            <returns>A boolean value indicating whether the drawing was opened.</returns>
        </member>
        <member name="M:Tekla.Structures.IDrawing.Save">
            <summary>
            Saves the current drawing.
            </summary>
            <returns>A boolean value indicating whether the drawing was saved.</returns>
        </member>
        <member name="T:Tekla.Structures.IEnvironment">
            <summary>
            Application environment interface.
            </summary>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.CloningTemplateModelFolders">
            <summary>
            Gets the cloning template model folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.CompanyFolders">
            <summary>
            Gets the company folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.CultureInfo">
            <summary>
            Gets the application culture info.
            </summary>
            <value>
            Application culture info.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.DrawingMacros">
            <summary>
            Gets the drawing macros.
            </summary>
            <value>
            Enumerable collection of drawing macro names.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.Language">
            <summary>
            Gets the application language.
            </summary>
            <value>
            Application language.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.Localization">
            <summary>
            Gets the application localization source.
            </summary>
            <value>
            Application localization source.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.MacrosFolder">
            <summary>
            Gets the macros folder.
            </summary>
            <value>
            Macros folder path.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.ModelMacros">
            <summary>
            Gets the model macros.
            </summary>
            <value>
            Enumerable collection of model macro names.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.OptionTypeUDAIndexAndValue">
            <summary>
            Gets the values and default switches of option type user defined attributes.
            </summary>
            <value>
            Enumerable collection of user defined attribute name, values and default switches which UDAType is option.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.ProjectFolders">
            <summary>
            Gets the project folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.SearchPath">
            <summary>
            Gets the search path.
            </summary>
            <value>
            Search path.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.SystemFolders">
            <summary>
            Gets the system folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.UseUSImperialUnitsInInput">
            <summary>
            Gets a value indicating whether US imperial units are used in input fields.
            </summary>
            <value>
            Indicates whether US imperial units are used in input fields.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.UserDefinedAttributes">
            <summary>
            Gets the user defined attributes.
            </summary>
            <value>
            Enumerable collection of user defined attribute names which UDAType is string.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.UserDefinedAttributesOptionType">
            <summary>
            Gets the option type user defined attributes.
            </summary>
            <value>
            Enumerable collection of user defined attribute names which UDAType is option.
            </value>
        </member>
        <member name="P:Tekla.Structures.IEnvironment.Item(System.String)">
            <summary>Gets an environment variable.</summary>
            <param name="variableName">Variable name.</param>
            <value>Environment variable value.</value>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Tekla.Structures.IEnvironment.LoadLocalizationFile(System.String)">
            <summary>Loads the specified localization file.</summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Tekla.Structures.IEnvironment.GetUserDefinedAttributes(Tekla.Structures.InpParser.UDATypes[])">
            <summary>
            Gets the user defined attributes of the specified <paramref name="types"/>.
            </summary>
            <param name="types">The types.</param>
            <returns>The user defined attributes of the specified <paramref name="types"/>.</returns>
        </member>
        <member name="T:Tekla.Structures.IMainWindow">
            <summary>
            Tekla Structures main window interface.
            </summary>
        </member>
        <member name="P:Tekla.Structures.IMainWindow.IsActive">
            <summary>
            Gets a value indicating whether the main window is active.
            </summary>
            <value>
            Indicates whether the main window is active.
            </value>
        </member>
        <member name="P:Tekla.Structures.IMainWindow.IsMinimized">
            <summary>
            Gets a value indicating whether the main window is minimized.
            </summary>
            <value>
            Indicates whether the main window is minimized.
            </value>
        </member>
        <member name="M:Tekla.Structures.IMainWindow.Activate">
            <summary>
            Activates the main window.
            </summary>
        </member>
        <member name="M:Tekla.Structures.IMainWindow.AttachChildForm(System.Windows.Forms.Form)">
            <summary>Attaches a child form.</summary>
            <param name="form">Child form.</param>
            <remarks>Each child form must have unique name.</remarks>
        </member>
        <member name="M:Tekla.Structures.IMainWindow.DetachChildForm(System.Windows.Forms.Form)">
            <summary>Detaches a child form.</summary>
            <param name="form">Child form.</param>
            <remarks>Each child form must have unique name.</remarks>
        </member>
        <member name="T:Tekla.Structures.SavedInfoEventHandler">
            <summary>
            Event handler that accepts SaveInfoEventArgs with context information.
            </summary>
            <param name="sender">Sender object of event.</param>
            <param name="e">Event arguments with context information.</param>
        </member>
        <member name="T:Tekla.Structures.IModel">
            <summary>
            Model connection interface.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IModel.Changed">
            <summary>
            Announces that the model has been changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IModel.Loaded">
            <summary>
            Announces that the model has been loaded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IModel.Numbering">
            <summary>
            Announces that the model is being numbered.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IModel.Saved">
            <summary>
            Announces that the model has been saved.
            </summary>
        </member>
        <member name="E:Tekla.Structures.IModel.SavedInfo">
            <summary>
            Announces that the model has been saved with context information.
            </summary>
        </member>
        <member name="P:Tekla.Structures.IModel.Folder">
            <summary>
            Gets the model folder.
            </summary>
            <value>
            Model folder.
            </value>
        </member>
        <member name="P:Tekla.Structures.IModel.Name">
            <summary>
            Gets the model name.
            </summary>
            <value>
            Model name.
            </value>
        </member>
        <member name="T:Tekla.Structures.InpParser.EOFException">
            <summary>
                   The exception that is thrown when end of file is reached.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.EOFException.#ctor">
            <summary>
                   Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.EOFException"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.EOFException.#ctor(Tekla.Structures.InpParser.Token)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.EOFException"/> class. 
                    Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.WrongFormatException"/> class.</summary>
            <param name="expectedToken">Expected token.</param>
        </member>
        <member name="M:Tekla.Structures.InpParser.EOFException.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.EOFException"/> class.</summary>
            <param name="correctEnd">Initializes <see cref="P:Tekla.Structures.InpParser.EOFException.IsCorrectEnd"/> property.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.EOFException.IsCorrectEnd">
            <summary>Gets or sets a value indicating whether is correct end.</summary>
            <value>The is correct end.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.CharType">
            <summary>
            The char type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CharType.NotDefined">
            <summary>
            The not defined.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CharType.Delimiter">
            <summary>
            The delimiter.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CharType.Punctuation">
            <summary>
            The punctuation.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CharType.Letter">
            <summary>
            The letter.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CharType.Number">
            <summary>
            The number.
            </summary>
        </member>
        <member name="T:Tekla.Structures.InpParser.TokenType">
            <summary>
            The token type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TokenType.Punctuation">
            <summary>
            The punctuation.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TokenType.Identifier">
            <summary>
            The identifier.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TokenType.Number">
            <summary>
            The number.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TokenType.String">
            <summary>
            The string.
            </summary>
        </member>
        <member name="T:Tekla.Structures.InpParser.Lexer">
            <summary>
            The lexer.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.Lexer.GetLexeme(System.IO.FileStream,System.Int32@)">
            <summary>The get lexeme.</summary>
            <param name="inputStream">The input stream.</param>
            <param name="lineNumber">The line number.</param>
            <returns>The InpParser.Token.</returns>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">
            Throws an exception.
            </exception>
        </member>
        <member name="T:Tekla.Structures.InpParser.Parser">
            <summary>
            The parser.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.Parser.definedModelObjects">
            <summary>
            The _defined model objects.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.Parser.definedTabPages">
            <summary>
            The _defined tab pages.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.Parser.lineNumber">
            <summary>
            The _line number.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.Parser.overrideExisting">
            <summary>
            The _override existing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.Parser.validationOn">
            <summary>
            The _validation on.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.Parser"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.InpParser.Parser.DefinedModelObjects">
            <summary>Gets the list of defined ModelObjects.</summary>
            <value>The defined model objects.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.Parser.DefinedTabPages">
            <summary>Gets the list of found TabPage definitions.</summary>
            <value>The defined tab pages.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.Parser.ValidationOn">
            <summary>Gets or sets a value indicating whether to validation on/off.</summary>
            <value>The validation on.</value>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.FindUdas(Tekla.Structures.InpParser.UDATypes[])">
            <summary>Parses specified file and gathers all known UDAsDictionary (without repeats) with specified type.</summary>
            <param name="udaTypes">Needed type.</param>
            <returns>List of UDAsDictionary.</returns>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.Parse(System.String,System.Boolean)">
            <summary>Parses specified file and fills <see cref="P:Tekla.Structures.InpParser.Parser.DefinedTabPages"/> and <see cref="P:Tekla.Structures.InpParser.Parser.DefinedModelObjects"/> properties.</summary>
            <param name="filePath">File to parse.</param>
            <param name="overrideExisting">Indicates wheather existing objects should be overridden with new or not.</param>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if specified file doesn/t exist.</exception>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Thrown when not correct end of file detected.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Thrown when parsing can't be done because input data format is not correct.</exception>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.Add(Tekla.Structures.InpParser.UDA,Tekla.Structures.InpParser.UDATypes[],System.Collections.Generic.ICollection{Tekla.Structures.InpParser.UDA})">
            <summary>
            Adds the <paramref name="uda"/> to the <paramref name="target"/> if it does not exist.
            </summary>
            <param name="uda">The uda.</param>
            <param name="matchingTypes">The matching types.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetAttributeValue(System.IO.FileStream)">
            <summary>The try get attribute value.</summary>
            <param name="inputStream">The input stream.</param>
            <returns>The InpParser.UDAValue.</returns>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Throws an exception.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Throws an exception.</exception>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetKeWordY(System.IO.FileStream,System.String)">
            <summary>The try get key word.</summary>
            <param name="inputStream">The input stream.</param>
            <param name="keyWord">The key word.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetModelObject(System.IO.FileStream)">
            <summary>The try get model object.</summary>
            <param name="inputStream">The input stream.</param>
            <returns>The InpParser.TSModelObject.</returns>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Throws an exception.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Throws an exception.</exception>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetPicture(System.IO.FileStream)">
            <summary>The try get picture.</summary>
            <param name="inputStream">The input stream.</param>
            <returns>The InpParser.Picture.</returns>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Throws an exception.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Throws an exception.</exception>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetPunctuation(System.IO.FileStream,System.String)">
            <summary>The try get punctuation.</summary>
            <param name="inputStream">The input stream.</param>
            <param name="symbol">The symbol.</param>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Throws an exception.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Throws an exception.</exception>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetTabPageDeclaration(System.IO.FileStream)">
            <summary>The try get tab page declaration.</summary>
            <param name="inputStream">The input stream.</param>
            <returns>The InpParser.TSTabPageDeclaration.</returns>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Throws an exception.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Throws an exception.</exception>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetTabPageDefinition(System.IO.FileStream)">
            <summary>The try get tab page definition.</summary>
            <param name="inputStream">The input stream.</param>
            <returns>The InpParser.TSTabPageDefinition.</returns>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Throws an exception.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Throws an exception.</exception>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetTabPageDefinitionBody(System.IO.FileStream,Tekla.Structures.InpParser.TSTabPageDefinition@)">
            <summary>The try get tab page definition body.</summary>
            <param name="inputStream">The input stream.</param>
            <param name="definition">The definition.</param>
        </member>
        <member name="M:Tekla.Structures.InpParser.Parser.TryGetUDA(System.IO.FileStream)">
            <summary>The try get uda.</summary>
            <param name="inputStream">The input stream.</param>
            <returns>The InpParser.UDA.</returns>
            <exception cref="T:Tekla.Structures.InpParser.EOFException">Throws an exception.</exception>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Throws an exception.</exception>
        </member>
        <member name="T:Tekla.Structures.InpParser.Picture">
            <summary>
                   Describes picture object on TabPage.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.Picture.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.Picture"/> class.</summary>
            <param name="name">Unque name.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.Picture.Height">
            <summary>Gets or sets the picture height.</summary>
            <value>The height.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.Picture.Width">
            <summary>Gets or sets the picture width.</summary>
            <value>The width.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.Picture.X">
            <summary>Gets or sets the picture upper left corner X coordinate.</summary>
            <value>The x value.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.Picture.Y">
            <summary>Gets or sets the picture upper left corner Y coordinate.</summary>
            <value>The y value.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.Token">
            <summary>
            The token.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.Token.tokenType">
            <summary>
            The _type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.Token.value">
            <summary>
            The _value.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.Token.#ctor(System.String,Tekla.Structures.InpParser.TokenType)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.Token"/> class.</summary>
            <param name="stringValue">The string value.</param>
            <param name="type">The type value.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.Token.TokenType">
            <summary>Gets the token type.</summary>
            <value>The token type value.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.Token.Value">
            <summary>Gets the value.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.TSModelObject">
            <summary>
                   Model object for which user attributes are defined.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.TSModelObject.#ctor(Tekla.Structures.InpParser.TSModelObjectTypes)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.TSModelObject"/> class. 
                    Initializes new instance of <see cref="T:Tekla.Structures.InpParser.TSModelObject"/> class.</summary>
            <param name="type">Type of model object.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSModelObject.Attributes">
            <summary>Gets or sets the list of attributes.</summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSModelObject.DummyNumber">
            <summary>Gets or sets the dummy parameter.</summary>
            <value>The dummy number.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSModelObject.Modify">
            <summary>Gets or sets a value indicating whether <b>True.</b> - object modify is possible, <b>False.</b> - modify is not possible.</summary>
            <value>The modify.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSModelObject.Name">
            <summary>Gets or sets the object name in Tekla Structures.</summary>
            <value>The name value.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSModelObject.TabPages">
            <summary>Gets or sets the list of TabPages.</summary>
            <value>The tab pages.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSModelObject.Type">
            <summary>Gets or sets the type of model object.</summary>
            <value>The type value.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.TSTabPageDeclaration">
            <summary>
                   Joins TSTabPageDefinition with its usage.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.TSTabPageDeclaration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.TSTabPageDeclaration"/> class. 
                    Initializes new instance of <see cref="T:Tekla.Structures.InpParser.TSTabPageDeclaration"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.TSTabPageDeclaration.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.TSTabPageDeclaration"/> class. 
                    Initializes new instance of <see cref="T:Tekla.Structures.InpParser.TSTabPageDeclaration"/> class
                    and sets its <see cref="P:Tekla.Structures.InpParser.TSTabPageDeclaration.Definition"/> property.</summary>
            <param name="name">TabPage unique name.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSTabPageDeclaration.Definition">
            <summary>Gets or sets the property which is used when TabPage declaration is used together with definition.</summary>
            <value>The definition.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSTabPageDeclaration.Index">
            <summary>Gets or sets the index in TabControl TabPages collection.</summary>
            <value>The index.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSTabPageDeclaration.Name">
            <summary>Gets or sets the unique name.</summary>
            <value>The name value.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSTabPageDeclaration.Prompt">
            <summary>Gets or sets the text Tekla Structures displays in the dialog box.</summary>
            <value>The prompt.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.TSTabPageDefinition">
            <summary>
                   Describes objects which should contain TabPage.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSTabPageDefinition.objects">
            <summary>
            The _objects.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.TSTabPageDefinition.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.TSTabPageDefinition"/> class. 
                    Initializes new instance of <see cref="T:Tekla.Structures.InpParser.TSTabPageDefinition"/> class.</summary>
            <param name="name">Unique name.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSTabPageDefinition.Name">
            <summary>Gets or sets the unique name.</summary>
            <value>The name value.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSTabPageDefinition.Objects">
            <summary>Gets or sets the tabPage objects.
                   Indexes in the list define the order of "lines" in which objects will be placed.</summary>
            <value>The objects.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.TSTabPageObject">
            <summary>
                   Basic class which joins objects that can be located on TabPage.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.TSTabPageObject.#ctor">
            <summary>
                   Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.TSTabPageObject"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.TSTabPageObject.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.TSTabPageObject"/> class.</summary>
            <param name="name">Unque name.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.TSTabPageObject.Name">
            <summary>Gets or sets the unique name. Used for inquiring value.</summary>
            <value>The name value.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.UDA">
            <summary>
                   User defined attribute.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.UDA.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.UDA"/> class.</summary>
            <param name="isUnique">True if this is unque attribute.</param>
        </member>
        <member name="M:Tekla.Structures.InpParser.UDA.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.UDA"/> class.</summary>
            <param name="name">Unque name.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.AttributeValueMax">
            <summary>Gets or sets the maximum possible value for the attribute.</summary>
            <value>The attribute value max.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.AttributeValueMin">
            <summary>Gets or sets the minimum possible value for the attribute.</summary>
            <value>The attribute value min.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.CheckSwitch">
            <summary>Gets or sets the possible values: none, check_max, check_min, check_maxmin.</summary>
            <value>The check switch.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.FieldFormat">
            <summary>Gets or sets the C-like format definition for dialog field.</summary>
            <value>The field format.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.IsUnique">
            <summary>Gets or sets a value indicating whether this attribute unique or not.</summary>
            <value>The is unique.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.LabelText">
            <summary>Gets or sets the label text shown in dialog.</summary>
            <value>The label text.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.PositionValue1">
            <summary>Gets or sets the position value 1.</summary>
            <value>The position value 1.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.PositionValue2">
            <summary>Gets or sets the position value 2.</summary>
            <value>The position value 2.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.PositionValue3">
            <summary>Gets or sets the position value 1.</summary>
            <value>The position value 3.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.SpecialFlag">
            <summary>Gets or sets a value indicating whether this is specially flagged.
            For parts means consider in numbering.
            For drawings - display the attribute's value in drawing list.
            For other elements - no effect.</summary>
            <value>The special flag.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.ToggleField">
            <summary>Gets or sets the toggle_field string.</summary>
            <value>The toggle field.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.ValueType">
            <summary>Gets or sets the type of the attribute.</summary>
            <value>The value type.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDA.Values">
            <summary>Gets or sets the values of attribute.</summary>
            <value>The values.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.UDANameComparer">
            <summary>
            The <see cref="T:Tekla.Structures.InpParser.UDANameComparer"/> class compares the UDAs by their name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDANameComparer.Instance">
            <summary>
            The singleton instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.UDANameComparer.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Tekla.Structures.InpParser.UDANameComparer"/> class from being created.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.UDANameComparer.Equals(Tekla.Structures.InpParser.UDA,Tekla.Structures.InpParser.UDA)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Tekla.Structures.InpParser.UDANameComparer.GetHashCode(Tekla.Structures.InpParser.UDA)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The object.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Tekla.Structures.InpParser.KeyWords">
            <summary>
            The key words.
            DOT NOT RENAME!!!
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.KeyWords.value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.KeyWords.attribute">
            <summary>
            The attribute.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.KeyWords.unique_attribute">
            <summary>
            The unique_attribute.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.KeyWords.picture">
            <summary>
            The picture.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.KeyWords.tab_page">
            <summary>
            The tab_page.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.KeyWords.modify">
            <summary>
            The modify.
            </summary>
        </member>
        <member name="T:Tekla.Structures.InpParser.TSModelObjectTypes">
            <summary>
            The ts model object types.
            DOT NOT RENAME!!!
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.part">
            <summary>
            The part value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.beam">
            <summary>
            The beam value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.column">
            <summary>
            The column value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.beamortho">
            <summary>
            The beamortho.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.twinprofile">
            <summary>
            The twinprofile.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.contourplate">
            <summary>
            The contourplate.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.foldedplate">
            <summary>
            The foldedplate.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.concrete_beam">
            <summary>
            The concrete_beam.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.concrete_column">
            <summary>
            The concrete_column.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.pad_footing">
            <summary>
            The pad_footing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.strip_footing">
            <summary>
            The strip_footing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.concrete_panel">
            <summary>
            The concrete_panel.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.concrete_slab">
            <summary>
            The concrete_slab.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.rebar">
            <summary>
            The rebar.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.surfacing">
            <summary>
            The surfacing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.welding">
            <summary>
            The welding.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.bolt">
            <summary>
            The bolt value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.singledrawing">
            <summary>
            The singledrawing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.assemblydrawing">
            <summary>
            The assemblydrawing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.gadrawing">
            <summary>
            The gadrawing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.multidrawing">
            <summary>
            The multidrawing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.castunitdrawing">
            <summary>
            The castunitdrawing.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.project">
            <summary>
            The project.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.phase">
            <summary>
            The phase.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.reference">
            <summary>
            The reference.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.reference_part">
            <summary>
            The reference_part.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.steelassembly">
            <summary>
            The steelassembly.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.precastassembly">
            <summary>
            The precastassembly.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.insituassembly">
            <summary>
            The insituassembly.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.grid">
            <summary>
            The grid value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.grid_plane">
            <summary>
            The grid_plane.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.task">
            <summary>
            The task value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.pour_object">
            <summary>
            The pour_object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.TSModelObjectTypes.pour_break">
            <summary>
            The pour_break.
            </summary>
        </member>
        <member name="T:Tekla.Structures.InpParser.UDATypes">
            <summary>
            The uda types.
            DOT NOT RENAME!!!
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Integer">
            <summary>
            The integer.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Float">
            <summary>
            The float.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.String">
            <summary>
            The string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Date">
            <summary>
            The date value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Option">
            <summary>
            The option.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Label">
            <summary>
            The label.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Material">
            <summary>
            The material.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Profile">
            <summary>
            The profile.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.File_in">
            <summary>
            The file_in.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.File_out">
            <summary>
            The file_out.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Bolt_standard">
            <summary>
            The bolt_standard.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Bolt_size">
            <summary>
            The bolt_size.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Ratio">
            <summary>
            The ratio.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Strain">
            <summary>
            The strain.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Angle">
            <summary>
            The angle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Deformation">
            <summary>
            The deformation.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Dimension">
            <summary>
            The dimension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Radiusofinertia">
            <summary>
            The radiusofinertia.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Area">
            <summary>
            The area value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Areaperlength">
            <summary>
            The areaperlength.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Sectionmodulus">
            <summary>
            The sectionmodulus.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Momentofinertia">
            <summary>
            The momentofinertia.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Torsionconstant">
            <summary>
            The torsionconstant.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Warpingconstant">
            <summary>
            The warpingconstant.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Force">
            <summary>
            The force.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Weight">
            <summary>
            The weight.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Distribload">
            <summary>
            The distribload.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Springconstant">
            <summary>
            The springconstant.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Surfaceload">
            <summary>
            The surfaceload.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Strength">
            <summary>
            The strength.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Modulus">
            <summary>
            The modulus.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Density">
            <summary>
            The density.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Moment">
            <summary>
            The moment.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Distribmoment">
            <summary>
            The distribmoment.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Rotspringconst">
            <summary>
            The rotspringconst.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Temperature">
            <summary>
            The temperature.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Thermdilatcoeff">
            <summary>
            The thermdilatcoeff.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Distance">
            <summary>
            The distance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.Distance_list">
            <summary>
            The distance_list.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.integer_no_toggle">
            <summary>
            The integer_no_toggle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.float_no_toggle">
            <summary>
            The float_no_toggle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.string_no_toggle">
            <summary>
            The string_no_toggle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.distance_list_no_toggle">
            <summary>
            The distance_list_no_toggle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.distance_no_toggle">
            <summary>
            The distance_no_toggle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.label2">
            <summary>
            The label 2.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.label3">
            <summary>
            The label 3.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.toggle">
            <summary>
            The toggle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.toggle_no_toggle">
            <summary>
            The toggle_no_toggle.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.optionstring">
            <summary>
            The optionstring.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.radiobutton">
            <summary>
            The radiobutton.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.weld_type">
            <summary>
            The weld_type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.chamfer_type">
            <summary>
            The chamfer_type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.welding_site">
            <summary>
            The welding_site.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.bolt_type">
            <summary>
            The bolt_type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.hole_type">
            <summary>
            The hole_type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.hole_direction">
            <summary>
            The hole_direction.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.stud_standard">
            <summary>
            The stud_standard.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.stud_size">
            <summary>
            The stud_size.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.stud_length">
            <summary>
            The stud_length.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.rebar_size">
            <summary>
            The rebar_size.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.rebar_main">
            <summary>
            The rebar_main.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.rebar_stirrup">
            <summary>
            The rebar_stirrup.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.rebar_mesh">
            <summary>
            The rebar_mesh.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.rebar_grade">
            <summary>
            The rebar_grade.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.rebar_radius">
            <summary>
            The rebar_radius.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.date_time_min">
            <summary>
            The date_time_min.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.date_time_sec">
            <summary>
            The date_time_sec.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.factor">
            <summary>
            The factor.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.ComponentName">
            <summary>
            The component name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.YesNo">
            <summary>
            The yes no.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.UDATypes.ComponentAttributeFile">
            <summary>
            The component attribute file.
            </summary>
        </member>
        <member name="T:Tekla.Structures.InpParser.CheckSwitchValues">
            <summary>
            The check switch values.
            DOT NOT RENAME!!!
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CheckSwitchValues.none">
            <summary>
            The none value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CheckSwitchValues.check_max">
            <summary>
            The check_max.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CheckSwitchValues.check_min">
            <summary>
            The check_min.
            </summary>
        </member>
        <member name="F:Tekla.Structures.InpParser.CheckSwitchValues.check_maxmin">
            <summary>
            The check_maxmin.
            </summary>
        </member>
        <member name="T:Tekla.Structures.InpParser.UDAValue">
            <summary>
                   Describes attribute value.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.UDAValue.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.UDAValue"/> class. 
                    Initializes new instance of <see cref="T:Tekla.Structures.InpParser.UDAValue"/> class
                    and sets <see cref="P:Tekla.Structures.InpParser.UDAValue.DefaultSwitch"/> property to 0.</summary>
            <param name="attributeValue">UDA value.</param>
        </member>
        <member name="M:Tekla.Structures.InpParser.UDAValue.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.UDAValue"/> class. 
                    Initializes new instance of <see cref="T:Tekla.Structures.InpParser.UDAValue"/> class.</summary>
            <param name="attributeValue">UDA value.</param>
            <param name="defaultSwitch">Default switch.
                    0 - no default
                    1 - default, which is stored to the database
                    2 - default, which is not stored to the database.
            </param>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDAValue.DefaultSwitch">
            <summary>Gets or sets a value wheather this value is default in case of option menu.
                   Can be set to    0 - no default
                                   1 - default, which is stored to the database
                                   2 - default, which is not stored to the database.</summary>
            <value>The default switch.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.UDAValue.Value">
            <summary>Gets or sets the value of attribute.</summary>
            <value>The value.</value>
        </member>
        <member name="T:Tekla.Structures.InpParser.WrongFormatException">
            <summary>
                   The exception that is thrown when input data doesn't satisfy predefined format.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.WrongFormatException.#ctor">
            <summary>
                   Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.WrongFormatException"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.InpParser.WrongFormatException.#ctor(Tekla.Structures.InpParser.Token)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.WrongFormatException"/> class.</summary>
            <param name="expectedToken">Expected token.</param>
        </member>
        <member name="M:Tekla.Structures.InpParser.WrongFormatException.#ctor(Tekla.Structures.InpParser.Token,Tekla.Structures.InpParser.Token,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.InpParser.WrongFormatException"/> class.</summary>
            <param name="receivedToken">Received token.</param>
            <param name="expectedToken">Expected token.</param>
            <param name="lineNumber">Line number.</param>
        </member>
        <member name="P:Tekla.Structures.InpParser.WrongFormatException.ExpectedToken">
            <summary>Gets or sets the expected token.</summary>
            <value>The expected token.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.WrongFormatException.LineNumber">
            <summary>Gets or sets the line number.</summary>
            <value>The line number.</value>
        </member>
        <member name="P:Tekla.Structures.InpParser.WrongFormatException.ReceivedToken">
            <summary>Gets or sets the received token.</summary>
            <value>The received token.</value>
        </member>
        <member name="T:Tekla.Structures.IOTools.FileChecksum">
            <summary>
            Calculate checksum of file
            </summary>
        </member>
        <member name="F:Tekla.Structures.IOTools.FileChecksum.md5">
            <summary>The MD5</summary>
        </member>
        <member name="M:Tekla.Structures.IOTools.FileChecksum.Calculate(System.String)">
            <summary>Calculates the MD5 checksum of file contents.</summary>
            <summary>Checksum can be used to check if file has changed.</summary>
            <param name="file">The file.</param>
            <returns>Checksum of file</returns>
        </member>
        <member name="M:Tekla.Structures.IOTools.FileChecksum.CalculateChecksum(System.String)">
            <summary>
            Calculates the checksum.
            NOTE: Do not change the calculated checksum!
            </summary>
            <param name="file">The file.</param>
            <returns>Checksum of file</returns>
        </member>
        <member name="T:Tekla.Structures.IPicker">
            <summary>
            Picker interface.
            </summary>
        </member>
        <member name="M:Tekla.Structures.IPicker.PickObject(System.String)">
            <summary>Picks an object.</summary>
            <param name="prompt">Pick prompt.</param>
            <returns>Picked object or null if no object was picked.</returns>
        </member>
        <member name="T:Tekla.Structures.IRegistry">
            <summary>
            Provides access to application registry keys and values.
            </summary>
        </member>
        <member name="P:Tekla.Structures.IRegistry.CurrentVersion">
            <summary>
            Gets the registry key for current application version.
            </summary>
            <value>
            Registry key.
            </value>
        </member>
        <member name="P:Tekla.Structures.IRegistry.Root">
            <summary>
            Gets the application root registry key.
            </summary>
            <value>
            Registry key.
            </value>
        </member>
        <member name="M:Tekla.Structures.IRegistry.GetVersion(System.String)">
            <summary>Gets the registry key for the specified version.</summary>
            <param name="version">Version string.</param>
            <returns>Registry key.</returns>
        </member>
        <member name="M:Tekla.Structures.IRegistry.LoadDialogBounds(System.String)">
            <summary>Loads dialog bounds rectangle from registry.</summary>
            <param name="dialogName">Dialog name.</param>
            <returns>Loaded dialog bounds or <see cref="F:System.Drawing.Rectangle.Empty"/> if not available.</returns>
        </member>
        <member name="M:Tekla.Structures.IRegistry.LoadDialogBounds(System.String,System.String)">
            <summary>Loads dialog bounds rectangle from registry.</summary>
            <param name="dialogName">Dialog name.</param>
            <param name="version">Version string.</param>
            <returns>Loaded dialog bounds or <see cref="F:System.Drawing.Rectangle.Empty"/> if not available.</returns>
        </member>
        <member name="M:Tekla.Structures.IRegistry.SaveDialogBounds(System.String,System.Drawing.Rectangle)">
            <summary>Saves dialog bounds rectangle to registry.</summary>
            <param name="dialogName">Dialog name.</param>
            <param name="bounds">Bounds rectangle.</param>
        </member>
        <member name="M:Tekla.Structures.IRegistry.SaveDialogBounds(System.String,System.String,System.Drawing.Rectangle)">
            <summary>Saves dialog bounds rectangle to registry.</summary>
            <param name="dialogName">Dialog name.</param>
            <param name="version">Version string.</param>
            <param name="bounds">Bounds rectangle.</param>
        </member>
        <member name="T:Tekla.Structures.IRunMacro">
            <summary>
            Macro execution interface.
            </summary>
        </member>
        <member name="M:Tekla.Structures.IRunMacro.RunMacro(System.String)">
            <summary>Executes a macro.</summary>
            <param name="macroName">Macro name.</param>
        </member>
        <member name="T:Tekla.Structures.ISelection">
            <summary>
            Selection interface.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ISelection.SelectionChanged">
            <summary>
            Announces that the selection has changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ISelection.AllObjects">
            <summary>
            Gets all objects.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="P:Tekla.Structures.ISelection.SelectedObjects">
            <summary>
            Gets the selected objects.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="T:Tekla.Structures.ISelectObject">
            <summary>
            Object selection interface.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ISelectObject.SelectObjectByIdentifier(Tekla.Structures.Identifier)">
            <summary>
            Selects object by identifier.
            </summary>
            <param name="identifier">
            Object identifier.
            </param>
            <returns>
            Selected object or null if no matching object was found.
            </returns>
        </member>
        <member name="T:Tekla.Structures.ITransaction">
            <summary>
            Transaction interface.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ITransaction.ChangesCommitted">
            <summary>
            Announces that the changes have been committed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ITransaction.ChangesDiscarded">
            <summary>
            Announces that the changes have been discarded.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ITransaction.CommitChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Commits the changes made to the objects.
            </summary>
            <param name="objects">
            Enumerable collection of modified objects.
            </param>
        </member>
        <member name="M:Tekla.Structures.ITransaction.DiscardChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Discards the changed made to the objects.
            </summary>
            <param name="objects">
            Enumerable collection of modified objects.
            </param>
        </member>
        <member name="T:Tekla.Structures.MacroBuilder">
            <summary>
            Macro builder.
            </summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilder.FileNameFormat">
            <summary>
            File name format.
            </summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilder.MaxTempFiles">
            <summary>
            Maximum number of temporary files to use.
            </summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilder.Random">
            <summary>
            Random number source.
            </summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilder.tempFileIndex">
            <summary>
            Temporary file index.
            </summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilder.macro">
            <summary>
            Macro text.
            </summary>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.MacroBuilder"/> class. 
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.MacroBuilder"/> class. 
            Initializes a new instance of the class.</summary>
            <param name="script">Script text.</param>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.WaitForMacroToRun(System.Int32)">
            <summary>Waits for the macro to run.</summary>
            <param name="waitCount">The wait count. Each wait is 100 milliseconds.</param>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.ConvertToRanges(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Converts an IEnumerable of integers to ranges.</summary>
            <param name="indexes">The indexes.</param>
            <returns>
            The IEnumerable of integers converted to ranges where item1 is a start index and item2 is the count of consecutive rows.
            </returns>
            <exception cref="T:System.ArgumentException">MacroBuilder.ConvertToRanges - no indexes specified.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.Activate(System.String,System.String)">
            <summary>Activates a field on a dialog.</summary>
            <param name="dialog">Dialog name.</param>
            <param name="field">Field name.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.Callback(System.String)">
            <summary>Invokes a callback.</summary>
            <param name="callback">Callback name.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.Callback(System.String,System.String)">
            <summary>Invokes a callback.</summary>
            <param name="callback">Callback name.</param>
            <param name="parameter">Callback parameter.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.Callback(System.String,System.String,System.String)">
            <summary>Invokes a callback.</summary>
            <param name="callback">Callback name.</param>
            <param name="parameter">Callback parameter.</param>
            <param name="frame">Target frame.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.CheckValue(System.String,System.Int32)">
            <summary>Checks or unchecks a field.</summary>
            <param name="name">Field name.</param>
            <param name="value">Check value.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.CommandEnd">
            <summary>
            Ends a command.
            </summary>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.CommandStart(System.String,System.String,System.String)">
            <summary>Starts a command.</summary>
            <param name="command">Command name.</param>
            <param name="parameter">Command parameter.</param>
            <param name="frame">Target frame.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.FileSelection(System.String[])">
            <summary>Performs file selection.</summary>
            <param name="items">Items to select.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.ListSelect(System.String,System.String,System.String[])">
            <summary>Selects items from a list field.</summary>
            <param name="dialog">Dialog name.</param>
            <param name="field">Field name.</param>
            <param name="items">List items.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.ModalDialog(System.Int32)">
            <summary>Invokes a modal dialog.</summary>
            <param name="value">Modal dialog value.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.MouseDown(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Simulates a mouse button down event.</summary>
            <param name="frame">Frame name.</param>
            <param name="subframe">Subframe name.</param>
            <param name="x">Mouse X position.</param>
            <param name="y">Mouse Y position.</param>
            <param name="modifier">Mouse button modifiers.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.MouseUp(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Simulates a mouse button up event.</summary>
            <param name="frame">Frame name.</param>
            <param name="subframe">Subframe name.</param>
            <param name="x">Mouse X position.</param>
            <param name="y">Mouse Y position.</param>
            <param name="modifier">Mouse button modifiers.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.PushButton(System.String,System.String)">
            <summary>Pushes a button.</summary>
            <param name="button">Button name.</param>
            <param name="frame">Frame name.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.Run">
            <summary>
            Runs the constructed macro.
            </summary>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.Run(System.Int32)">
            <summary>Runs the constructed macro.</summary>
            <param name="waitCount">The wait count where 1 = 100 milliseconds.</param>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.Run(Tekla.Structures.IConnection)">
            <summary>Runs the constructed macro.</summary>
            <param name="connection">Macro runner connection.</param>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.TabChange(System.String,System.String,System.String)">
            <summary>Changes the active tab page.</summary>
            <param name="dialog">The Dialog name.</param>
            <param name="field">The Field name.</param>
            <param name="item">The Tab page.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.TableSelect(System.String,System.String,System.Int32[])">
            <summary>Selects items on a table field.</summary>
            <param name="dialog">Dialog name.</param>
            <param name="field">Field name.</param>
            <param name="items">Table items.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.ToString">
            <summary>
            Returns the constructed macro text.
            </summary>
            <returns>Macro text.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.TreeSelect(System.String,System.String,System.String)">
            <summary>Selects items in a tree field.</summary>
            <param name="dialog">Dialog name.</param>
            <param name="field">Field name.</param>
            <param name="rowstring">Tree row string.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.ValueChange(System.String,System.String,System.String)">
            <summary>Changes a field value.</summary>
            <param name="dialog">Dialog name.</param>
            <param name="field">Field name.</param>
            <param name="data">Field value.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.CloseWpfView(System.String)">
            <summary>Closes a named wpf view.</summary>
            <param name="viewName">Name of the view.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.SetWpfToggleButtonChecked(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Sets a wpf toggle button state to checked.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.SetWpfToggleButtonUnChecked(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Sets a wpf toggle button state to unchecked.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.PushWpfButton(System.String,System.String)">
            <summary>Pushes a wpf button.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="buttonAid">The button automation id.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.PushWpfButton(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Pushes a wpf button.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.PushWpfDataGridColumnHeaderButton(System.String,System.String,System.Boolean)">
            <summary>Pushes a wpf datagrid column header button.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="buttonAid">The button automation id.</param>
            <param name="emulateHoldingShiftKey">if set to <c>true</c> [emulate holding shift key].</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.PushWpfDataGridColumnHeaderButton(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>Pushes a wpf datagrid column header button.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <param name="emulateHoldingShiftKey">if set to <c>true</c> [emulate holding shift key].</param>
            <returns>Reference to self for fluent interface pattern.</returns>
            <exception cref="T:System.ArgumentException">MacroBuilder.PushWpfDataGridColumnHeaderButton parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.PushWpfContextMenuButton(System.String,System.String,System.String)">
            <summary>Pushes a WPF context menu button.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="contextMenuParentAid">The context menu parent automation id.</param>
            <param name="buttonAid">The button automation id.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
            <exception cref="T:System.ArgumentException">MacroBuilder.PushWpfContextMenuButton parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.PushWpfContextMenuButton(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Pushes a WPF context menu button.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="contextMenuParentAids">The context menu parent automation ids in parent to child order.</param>
            <param name="buttonAids">The button automation ids in parent to child order.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
            <exception cref="T:System.ArgumentException">MacroBuilder.PushWpfContextMenuButton parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.SelectWpfListViewItemsByName(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Selects the ListView items by item name.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <param name="itemNames">The item names.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
            <exception cref="T:System.ArgumentException">
            One or more MacroBuilder.SelectWpfListViewItemsByName parameters is invalid.
            or
            One or more MacroBuilder.SelectWpfListViewItemsByName item names is null or whitespace.
            </exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.SelectWpfDataGridRows(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Selects the WPF data grid rows.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The automation ids.</param>
            <param name="indexes">The indexes.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
            <exception cref="T:System.ArgumentException">MacroBuilder.SelectWpfDataGridRows view name, automation id or indexes parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.SetWpfTextBoxText(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>Sets the WPF text box text.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <param name="text">The text.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
            <exception cref="T:System.ArgumentException">MacroBuilder.SetWpfTextBoxText parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.WpfCommandRepositoryCommand(System.String)">
            <summary>Invokes a command repository command.</summary>
            <param name="command">The command.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
            <exception cref="T:System.ArgumentException">MacroBuilder.WpfCommandRepositoryCommand parameter is invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.TrimFirstAndLastInstanceOf(System.String,System.String)">
            <summary>
            Removes the first and last instances of a specific string, no trimming applied so result may still contain leading or trailing spaces.
            </summary>
            <param name="stringToTrim">The string to trim.</param>
            <param name="stringToRemove">The string to remove.</param>
            <returns>The trimmed string</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.GetMacroFileName">
            <summary>
            Gets the generated macro file name.
            </summary>
            <returns>Generated macro file name.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.BuildAidListString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Builds the automation id list string.</summary>
            <param name="automationIds">The context menu parent aids.</param>
            <returns>The automation id list string.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilder.AppendMethodCall(System.String,System.Object[])">
            <summary>Appends a method call to macro.</summary>
            <param name="method">Method to call.</param>
            <param name="arguments">Argument list.</param>
            <returns>Reference to self for fluent interface pattern.</returns>
        </member>
        <member name="T:Tekla.Structures.MacroBuilderCompatibilityHelper">
            <summary>
            A class providing helper methods to achieve backward compatibilty for extensions using MacroBuilder.
            This uses reflection to get methods added to MacroBuilder in Tekla.Application.Library for TS 2020.
            IMPORTANT: this class should be copied and included in the assembly that uses it and not simply
            referenced within the OpenAPI assemblies. See the OpenAPI documentation to learn more about macro 
            compatibility issues.
            </summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.CloseWpfViewMethodName">
            <summary>The close WPF view method name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.SetWpfToggleButtonCheckedName">
            <summary>The set WPF toggle button checked name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.SetWpfToggleButtonUnCheckedName">
            <summary>The set WPF toggle button unchecked name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.PushWpfButtonName">
            <summary>The push WPF button name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.PushWpfDataGridColumnHeaderButtonName">
            <summary>The push WPF data grid column header button name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.PushWpfContextMenuButtonName">
            <summary>The push WPF context menu button name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.SelectWpfListViewItemsByNameName">
            <summary>The select WPF ListView items by name name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.SelectWpfDataGridRowsName">
            <summary>The select WPF data grid rows name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.SetWpfTextBoxTextName">
            <summary>The set WPF text box text name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.WpfCommandRepositoryCommandName">
            <summary>The WPF command repository command name</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.macroBuilder">
            <summary>The macro builder</summary>
        </member>
        <member name="F:Tekla.Structures.MacroBuilderCompatibilityHelper.cachedMethodInfos">
            <summary>The cached method infos</summary>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.#ctor(Tekla.Structures.MacroBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.MacroBuilderCompatibilityHelper"/> class.
            </summary>
            <param name="macroBuilder">A reference to the macro builder instance.</param>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsOldDrawingListInUse">
            <summary>Determines whether the old drawing list is in use.</summary>
            <returns>True if the old drawing list in use; otherwise, false.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.MacroBuilderRuntimeVersionSupportsWpfControls">
            <summary>Indicates if the MacroBuilder version in the Tekla.Applications.Library runtime version supports WPF controls.</summary>
            <returns>A value indicating if the macroBuilder version in the Tekla.Applications.Library runtime version supports WPF controls.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.CreateMacroCodeForDocumentManager">
            <summary>Determines if MacroBuilder should create the macro code for document manager.</summary>
            <returns>True if MacroBuilder should create the macro code for document manager; otherwise false.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedCloseWpfViewMethod">
            <summary>Determines whether [is supported close WPF view method].</summary>
            <returns><c>true</c> if [is supported close WPF view method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokeCloseWpfViewMethod(System.String)">
            <summary>Invokes the CloseWpfView method info.</summary>
            <param name="viewName">Name of the view.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokeCloseWpfViewMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedSetWpfToggleButtonCheckedMethod">
            <summary>Determines whether [is supported set WPF toggle button checked method].</summary>
            <returns><c>true</c> if [is supported set WPF toggle button checked method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokeSetWpfToggleButtonCheckedMethod(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Invokes the SetWpfToggleButtonChecked method info.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokeSetWpfToggleButtonCheckedMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedSetWpfToggleButtonUnCheckedMethod">
            <summary>Determines whether [is supported set WPF toggle button unchecked method].</summary>
            <returns><c>true</c> if [is supported set WPF toggle button checked method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokeSetWpfToggleButtonUnCheckedMethod(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Invokes the SetWpfToggleButtonUnChecked method info.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokeSetWpfToggleButtonUnCheckedMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedPushWpfButtonMethod">
            <summary>Determines whether [is supported push WPF button method].</summary>
            <returns><c>true</c> if [is supported push WPF button method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokePushWpfButtonMethod(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Invokes the PushWpfButtonMethod method info.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokePushWpfButtonMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedPushWpfDataGridColumnHeaderButtonMethod">
            <summary>Determines whether [is supported push WPF data grid column header button method]. </summary>
            <returns><c>true</c> if [is supported push WPF data grid column header button method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokePushWpfDataGridColumnHeaderButtonMethod(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>Invokes the PushWpfDataGridColumnHeaderButton method info.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <param name="emulateHoldingShiftKey">if set to <c>true</c> [emulate holding shift key].</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokePushWpfButtonMethodMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedPushWpfContextMenuButtonMethod">
            <summary>Determines whether [is supported push WPF context menu button method].</summary>
            <returns><c>true</c> if [is supported push WPF context menu button method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokePushWpfContextMenuButtonMethod(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Invokes the PushWpfContextMenuButton method info.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="contextMenuParentAids">The context menu control(s) automation id(s) in parent to child order.</param>
            <param name="buttonAids">The button automation id(s) in parent to child order.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokePushWpfContextMenuButtonMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedSelectWpfListViewItemsByNameMethod">
            <summary>Determines whether [is supported select WPF ListView items by name method].</summary>
            <returns><c>true</c> if [is supported select WPF ListView items by name method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokeSelectWpfListViewItemsByNameMethod(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>Invokes the SelectWpfListViewItemsByName method info.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <param name="itemNames">The item names.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokeSelectWpfListViewItemsByNameMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedSelectWpfDataGridRowsMethod">
            <summary>Determines whether [is supported select WPF data grid row method].</summary>
            <returns><c>true</c> if [is supported select WPF data grid row method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokeSelectWpfDataGridRowsMethod(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>Invokes the select WPF data grid rows method information.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The automation ids.</param>
            <param name="indexes">The indexes.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokeSelectWpfDataGridRowsMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedSetWpfTextBoxTextMethod">
            <summary>Determines whether [is supported set WPF text box text method].</summary>
            <returns><c>true</c> if [is supported set WPF text box text method]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokeSetWpfTextBoxTextMethod(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>Invokes the SetWpfTextBoxText method info.</summary>
            <param name="viewName">Name of the view.</param>
            <param name="automationIds">The control automation ids in parent to child order.</param>
            <param name="text">The text.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokeSetWpfTextBoxTextMethod parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedWpfCommandRepositoryCommand">
            <summary>Determines whether [is supported WPF command repository command].</summary>
            <returns><c>true</c> if [is supported WPF command repository command]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.InvokeWpfInvokeCommandMethod(System.String)">
            <summary>Invokes the WpfCommandRepositoryCommand method info.</summary>
            <param name="commandName">Name of the command.</param>
            <exception cref="T:System.ArgumentException">MacroBuilderCompatibilityHelper.InvokeWpfInvokeCommandMethodInfo parameter(s) invalid.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.TryGetMethodInfo(System.String,System.Type[],System.Reflection.MethodInfo@)">
            <summary>Tries to get the specified method information.</summary>
            <param name="name">The name.</param>
            <param name="typeArray">The method params type array.</param>
            <param name="methodInfo">The method information.</param>
            <returns>The specified method information.</returns>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.IsSupportedMethod(System.String,System.Type[])">
            <summary>
            Determines whether [is supported method] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <param name="typeArray">The type array.</param>
            <returns>
              <c>true</c> if [is supported method] [the specified name]; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.ArgumentException">Name parameter should be a valid string.</exception>
        </member>
        <member name="M:Tekla.Structures.MacroBuilderCompatibilityHelper.GetCachedMethodInfo(System.String,System.Reflection.MethodInfo@)">
            <summary>Tries to get the cached method information.</summary>
            <param name="name">The name.</param>
            <param name="methodInfo">The method information.</param>
            <exception cref="T:System.InvalidOperationException">"Tried to get MethodInfo which doesn't exist in the MethodInfo cache."</exception>
        </member>
        <member name="T:Tekla.Structures.MacroCompatibilityHelperExamples">
            <summary>
            The MacroCompatibilityHelper examples
            </summary>
        </member>
        <member name="M:Tekla.Structures.MacroCompatibilityHelperExamples.CloseDocumentManagerOrDrawingList">
            <summary>Closes the document manager or drawing list as appropriate.</summary>
        </member>
        <member name="M:Tekla.Structures.MacroCompatibilityHelperExamples.SelectSinglePartDrawingForSelectedPartInDocumentManagerOrDrawingList">
            <summary>
            Select single part drawing for the selected part in model using document manager 
            or drawing list as appropriate.
            Assumes document manager or drawing list is open.
            </summary>
        </member>
        <member name="T:Tekla.Structures.MainWindow">
            <summary>
                Tekla Structures main window interface.
            </summary>
        </member>
        <member name="P:Tekla.Structures.MainWindow.Handle">
            <summary>
                Gets the main window handle.
            </summary>
            <value> Main window handle.</value>
            <summary>
                Gets the main window handle.
            </summary>
            <value> Main window handle.</value>
        </member>
        <member name="P:Tekla.Structures.MainWindow.IsActive">
            <summary>
            Gets a value indicating whether the main window is active.
            </summary>
            <value> Indicates whether the main window is active.</value>
        </member>
        <member name="P:Tekla.Structures.MainWindow.IsMinimized">
            <summary>
            Gets a value indicating whether the main window is minimized.
            </summary>
            <value> Indicates whether the main window is minimized.</value>
        </member>
        <member name="M:Tekla.Structures.MainWindow.Activate">
            <summary>
                Activates the main window.
            </summary>
        </member>
        <member name="M:Tekla.Structures.MainWindow.AttachChildForm(System.Windows.Forms.Form)">
            <summary>
            Attaches a child form.
            </summary>
            <param name="form">
            Child form. 
            </param>
            <remarks>
            Each child form must have unique name.
            </remarks>
        </member>
        <member name="M:Tekla.Structures.MainWindow.DetachChildForm(System.Windows.Forms.Form)">
            <summary>
            Detaches a child form.
            </summary>
            <param name="form">
            Child form. 
            </param>
            <remarks>
            Each child form must have unique name.
            </remarks>
        </member>
        <member name="M:Tekla.Structures.MainWindow.GetForegroundWindow">
            <summary>
                Gets the foreground window handle.
            </summary>
            <returns> Foreground window handle.</returns>
        </member>
        <member name="M:Tekla.Structures.MainWindow.IsIconic(System.IntPtr)">
            <summary>
            Determinws whether the specified window is minimized.
            </summary>
            <param name="windowHandle">
            Window handle. 
            </param>
            <returns>
            A boolean value indicating whether the window is minimized. 
            </returns>
        </member>
        <member name="M:Tekla.Structures.MainWindow.SetForegroundWindow(System.IntPtr)">
            <summary>
            Gets the foreground window handle.
            </summary>
            <param name="windowHandle">
            Foreground window handle. 
            </param>
            <returns>
            A boolean value indicating whether the operation was successful. 
            </returns>
        </member>
        <member name="T:Tekla.Structures.ModelConnection">
            <summary>
            Model connection.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelConnection.LongOperation">
            <summary>
            Timeout for long operations.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelConnection.PathSeparators">
            <summary>
            Environment path separators.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelConnection.context">
            <summary>
            UIThreadId for executing the operation immediately if in UI thread
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelConnection.connection">
            <summary>
            Model connection object.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelConnection.events">
            <summary>
            Model event dispatcher.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelConnection.eventsRegistered">
            <summary>
            Indicates whether event dispatcher has been registered.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelConnection.localization">
            <summary>
            Localization object.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.#ctor(Tekla.Structures.RunContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ModelConnection" /> class.
            </summary>
            <param name="context">passes the info to define running context</param>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.ApplicationClosed">
            <summary>
            Announces that the application has been closed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Changed">
            <summary>
            Announces that the model has changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.ChangesCommitted">
            <summary>
            Announces that the changes have been committed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.ChangesDiscarded">
            <summary>
            Announces that the changes have been discarded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Loaded">
            <summary>
            Announces that the model has been loaded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Unloading">
            <summary>
            Announces that the model starts to unload.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Numbering">
            <summary>
            Announces that the model is being numbered.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Saved">
            <summary>
            Announces that the model has been saved.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.SavedInfo">
            <summary>
            Announces that the model has been saved.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.SelectionChanged">
            <summary>
            Announces that the selection has changed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.ApplicationClosed_Event">
            <summary>
            Announces that the application has been closed.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Changed_Event">
            <summary>
            Announces that the model has chenged.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Loaded_Event">
            <summary>
            Announces that the model has been loaded.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Unloading_Event">
            <summary>
            Announces that the model starts to unload.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Numbering_Event">
            <summary>
            Announces that the model is being numbered.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.Saved_Event">
            <summary>
            Announces that the model has been saved.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.SavedInfo_Event">
            <summary>
            Announces that the model has been saved with context information.
            </summary>
        </member>
        <member name="E:Tekla.Structures.ModelConnection.SelectionChanged_Event">
            <summary>
            Announces that the selection has changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.AllObjects">
            <summary>
            Gets all objects in the view.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.CloningTemplateModelFolders">
            <summary>
            Gets the cloning template model folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.CompanyFolders">
            <summary>
            Gets the company folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.Configuration">
            <summary>
            Gets the application configuration.
            </summary>
            <value>
            Application configuration.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.CultureInfo">
            <summary>
            Gets the application culture info.
            </summary>
            <value>
            Application culture info.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.DrawingMacros">
            <summary>
            Gets the drawing macros.
            </summary>
            <value>
            Enumerable collection of drawing macro names.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.Folder">
            <summary>
            Gets the model folder.
            </summary>
            <value>
            Model folder.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.IsActive">
            <summary>
            Gets a value indicating whether the object is active.
            </summary>
            <value>
            Indicates whether the object is active.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.Language">
            <summary>
            Gets the application language.
            </summary>
            <value>
            Application language.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.Localization">
            <summary>
            Gets the application localization source.
            </summary>
            <value>
            Application localization source.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.MacrosFolder">
            <summary>
            Gets the macros folder. If there are several paths, the first will be returned.
            <seealso cref="P:Tekla.Structures.ModelConnection.MacrosFolders">The MacrosFolders returns enumerable collection of all macro paths.</seealso>
            </summary>
            <value>
            Macros folder path.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.MacrosFolders">
            <summary>
            Gets the macros folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.ModelMacros">
            <summary>
            Gets the model macros.
            </summary>
            <value>
            Enumerable collection of model macro names.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.Name">
            <summary>
            Gets the model name.
            </summary>
            <value>
            Model name.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.OptionTypeUDAIndexAndValue">
            <summary>
            Gets the values and default switches of option type user defined attributes.
            </summary>
            <value>
            Enumerable collection of user defined attribute name, values and default switches which UDAType is option.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.ProjectFolders">
            <summary>
            Gets the project folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.SearchPath">
            <summary>
            Gets the search path.
            </summary>
            <value>
            Search path.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.SelectedObjects">
            <summary>
            Gets the selected objects in the view.
            </summary>
            <value>
            Enumerable collection of objects.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.SystemFolders">
            <summary>
            Gets the system folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.UseUSImperialUnitsInInput">
            <summary>
            Gets a value indicating whether US imperial units are used in input fields.
            </summary>
            <value>
            Indicates whether US imperial units are used in input fields.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.UserDefinedAttributes">
            <summary>
            Gets the user defined attributes.
            </summary>
            <value>
            Enumerable collection of user defined attribute names which UDAType is string.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.UserDefinedAttributesOptionType">
            <summary>
            Gets the option type user defined attributes.
            </summary>
            <value>
            Enumerable collection of user defined attribute names which UDAType is option.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.Version">
            <summary>
            Gets the application version string.
            </summary>
            <value>
            Application version string.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.InpFolders">
            <summary>
            Gets the system folders.
            </summary>
            <value>
            Enumerable collection of paths.
            </value>
        </member>
        <member name="P:Tekla.Structures.ModelConnection.Item(System.String)">
            <summary>Gets an environment variable.</summary>
            <param name="variableName">Variable name.</param>
            <value>Environment variable value.</value>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.GetUserDefinedAttributes(Tekla.Structures.InpParser.UDATypes[])">
            <summary>
            Gets the user defined attributes of the specified <paramref name="types"/>.
            </summary>
            <param name="types">The types.</param>
            <returns>The user defined attributes of the specified <paramref name="types"/>.</returns>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.CommitChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Commits the changes made to the objects.</summary>
            <remarks>If Object.Modify() is not implemented this method does nothing.</remarks>
            <param name="objects">Enumerable collection of modified objects.</param>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.Connect">
            <summary>
            Connects the model interface.
            </summary>
            <returns>A boolean value indicating whether the interface is connected.</returns>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.DiscardChanges(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>Discards the changed made to the objects.</summary>
            <param name="objects">Enumerable collection of modified objects.</param>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.Disconnect">
            <summary>
            Disconnects the model interface.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.LoadLocalizationFile(System.String)">
            <summary>Loads the specified localization file.</summary>
            <param name="fileName">File name.</param>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.PickObject(System.String)">
            <summary>Picks an object.</summary>
            <param name="prompt">Pick prompt.</param>
            <returns>Picked object or null if no object was picked.</returns>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.RunMacro(System.String)">
            <summary>Executes a macro in the view.</summary>
            <param name="macroName">Macro name.</param>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.SelectObjectByIdentifier(Tekla.Structures.Identifier)">
            <summary>Selects object by identifier.</summary>
            <param name="identifier">Object identifier.</param>
            <returns>Selected object or null if no matching object was found.</returns>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.OnApplicationClosed">
            <summary>
            Raises the ApplicationClosed event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.OnLoaded">
            <summary>
            Raises the Loaded event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.OnUnloading">
            <summary>
            Raises the Unloading event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.OnNumbering">
            <summary>
            Raises the Numbering event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.OnSaved">
            <summary>
            Raises the Saved event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.OnSavedInfo(System.String)">
            <summary>
            Raises the Saved event with additional information.
            </summary>
            <param name="ModelSaveInfo">Information about why model is being saved.</param>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.OnSelectionChanged">
            <summary>
            Raises the SelectionChanged event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.RegisterEvents">
            <summary>
            Registers the event handlers.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.UnregisterEvents">
            <summary>
            Removes the event handler registration.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelConnection.ParseUDAs">
            <summary>
            Parses the UDA fields.
            </summary>
            <returns>The parser.</returns>
        </member>
        <member name="T:Tekla.Structures.ModelFolder">
            <summary>
            Representation of a model folder structure.
            </summary>
            <remarks>
            ModelFolder represents the folder layout of single model.
            </remarks>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.AssemblyFileExtension">
            <summary>
            Assembly standard file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.AttributesFolderName">
            <summary>
            Attributes folder name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.CastUnitFileExtension">
            <summary>
            Cast unit standard file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.DatabaseFileExtension">
            <summary>
            Model database file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.DrawingsFolderName">
            <summary>
            Drawings folder name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.ExtendedRulesetFileExtension">
            <summary>
            Extended ruleset file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.GeneralArrangementFileExtension">
            <summary>
            GA standard file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.ObjectDefinitionFile">
            <summary>
            Object definition file.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.ObjectSettingsFileExtension">
            <summary>
            Object settings file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.RulesetFileExtension">
            <summary>
            Ruleset file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.SelectFilterFileExtension">
            <summary>
            Select filter file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.SinglePartFileExtension">
            <summary>
            Single part standard file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.ViewFilterFileExtension">
            <summary>
            View filter file extension.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.attributesFolder">
            <summary>
            Attributes folder.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ModelFolder.drawingsFolder">
            <summary>
            Drawings folder.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ModelFolder.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ModelFolder"/> class.
            Initializes a new instance of the class.
            </summary>
            <param name="folderPath">
            Model folder path.
            </param>
            <param name="searchPath">
            Model folder search path.
            </param>
        </member>
        <member name="P:Tekla.Structures.ModelFolder.AttributesFolder">
            <summary>
            Gets the model attributes folder.
            </summary>
            <value> Model attributes folder.</value>
        </member>
        <member name="P:Tekla.Structures.ModelFolder.DrawingsFolder">
            <summary>
            Gets the model drawings folder.
            </summary>
            <value> Model drawings folder.</value>
        </member>
        <member name="M:Tekla.Structures.ModelFolder.ContainsModelDatabase(System.String)">
            <summary>
            Determines whether the specified folder contains a model database file.
            </summary>
            <param name="modelFolder">
            Model folder path.
            </param>
            <returns>
            A boolean value indicating whether the folder contains a model database file.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ModelFolder.GetDatabaseFile(System.String)">
            <summary>
            Gets the model database file path.
            </summary>
            <param name="modelFolder">
            Model folder path.
            </param>
            <returns>
            Model database file path.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ModelFolder.GetModelName(System.String)">
            <summary>
            Gets the model name.
            </summary>
            <param name="modelFolder">
            Model folder path.
            </param>
            <returns>
            Model name.
            </returns>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog">
            <summary>
            The all properties dialog.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.prevSelection">
            <summary>
            The prev selection.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.validationErrorLabel">
            <summary>
            The validation error label.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.allShownPresentedPropertiesXmlInstance">
            <summary>
            The all shown presented properties xml instance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.newShownPresentedPropertiesXmlInstance">
            <summary>
            The new shown presented properties xml instance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.quickSearchUserCntrl">
            <summary>
            The quick search user cntrl.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog"/> class. 
            Instantiates a user control for handling all properties.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.#ctor(System.Windows.Forms.Form,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.LocalisationDelegate)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog"/> class. 
            Instantiates a user control for handling all properties.</summary>
            <param name="parentForm">A form in relation location of this form is set.</param>
            <param name="allPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains all properties.</param>
            <param name="shownPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains shown properties.</param>
            <param name="methodToLocalize">Delegate method to use for localization.</param>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllShownPresentedPropertiesXmlInstance">
            <summary>Gets or sets the all shown presented properties xml instance.</summary>
            <value>The all shown presented properties xml instance.</value>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.InitializeAllPropertiesDialog(System.Windows.Forms.Form,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.LocalisationDelegate)">
            <summary>Initializes a user control for handling all properties.</summary>
            <param name="newParentForm">A form in relation location of this form is set.</param>
            <param name="allPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains all properties.</param>
            <param name="shownPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains shown properties.</param>
            <param name="methodToLocalize">Delegate method to use for localization.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ShowIncludedColumn(System.Boolean)">
            <summary>Sets visibility of Included check box column.</summary>
            <param name="show">The show value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ShowSelected">
            <summary>
            Sets selected rows properties visibility to true.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.UpdateAllProperties">
            <summary>
            Updates all properties hidden values according shown properties.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AddProperties(System.Boolean)">
            <summary>The add properties.</summary>
            <param name="external">The external.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllPropertiesDGWCellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>The all properties dgw cell click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllPropertiesDGWCellDoubleClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>The all properties dgw cell double click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllPropertiesDGWRowValidating(System.Object,System.Windows.Forms.DataGridViewCellCancelEventArgs)">
            <summary>The all properties dgw row validating.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllPropertiesDGWCellValidating(System.Object,System.Windows.Forms.DataGridViewCellValidatingEventArgs)">
            <summary>The all properties dg w_ cell validating.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllPropertiesDGWKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>The all properties dg w_ key down.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllPropertiesDGWMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>The all properties dg w_ mouse click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AllPropertiesDGWSorted(System.Object,System.EventArgs)">
            <summary>The all properties dg w_ sorted.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.CancelEditIfPropertyIsDefault(System.Int32,System.Windows.Forms.DataGridViewCellCancelEventArgs)">
            <summary>Cancel the edit mode if the Property Name is equal to the defalult name. The DataGridView control
            has some bugs that occurs in databinding. This logic is done in order to prevent the DataGriedView internal crash.</summary>
            <param name="rowNumber">The number of the row to check.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.GridClicked(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>The grid clicked.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.LoadPropertiesClick(System.Object,System.EventArgs)">
            <summary>The load properties_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.RemoveSelectedRows">
            <summary>
            The remove selected rows.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.SavePropertiesClick(System.Object,System.EventArgs)">
            <summary>The save properties_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ShowHideColumns(System.Drawing.Point)">
            <summary>The show hide columns.</summary>
            <param name="showLocation">The show location.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ShowHideOnClick(System.Object,System.EventArgs)">
            <summary>The show hide on click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ShownPropertiesDGWSelectionChanged(System.Object,System.EventArgs)">
            <summary>The shown properties dg w_ selection changed.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AlblExcludeselectedToolStripMenuItemClick(System.Object,System.EventArgs)">
            <summary>The albl excludeselected tool strip menu item_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AlblIncludeselectedToolStripMenuItemClick(System.Object,System.EventArgs)">
            <summary>The albl includeselected tool strip menu item_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.AlblRemoveselectedToolStripMenuItemClick(System.Object,System.EventArgs)">
            <summary>The albl removeselected tool strip menu item_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ToolStripButton1Click(System.Object,System.EventArgs)">
            <summary>The tool strip button 1_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ToolStripButton2Click(System.Object,System.EventArgs)">
            <summary>The tool strip button 2_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ToolStripButton3Click(System.Object,System.EventArgs)">
            <summary>The tool strip button 3_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ToolStripMenuItem1Click(System.Object,System.EventArgs)">
            <summary>The tool strip menu item 1_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.ToolStripMenuItem2Click(System.Object,System.EventArgs)">
            <summary>The tool strip menu item 2_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.AllPropertiesDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.DataGridViewNullableDateTimePickerColumn">
            <summary>
            The data grid view nullable date time picker column.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.DataGridViewNullableDateTimePickerColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.DataGridViewNullableDateTimePickerColumn"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.DataGridViewNullableDateTimePickerColumn.CellTemplate">
            <summary>Gets or sets the cell template.</summary>
            <exception cref="T:System.InvalidCastException">Throws an exception.</exception>
            <value>The cell template.</value>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.DrawingControl">
            <summary>
            The drawing control.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.DrawingControl.WmSetRedraw">
            <summary>
            The w m_ setredraw.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.DrawingControl.ResumeDrawing(System.Windows.Forms.Control)">
            <summary>The resume drawing.</summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.DrawingControl.SendMessage(System.IntPtr,System.Int32,System.Boolean,System.Int32)">
            <summary>The send message.</summary>
            <param name="windowHandle">The h wnd.</param>
            <param name="windowMessage">The w msg.</param>
            <param name="windowParameter">The w param.</param>
            <param name="parameterLong">The l param.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.DrawingControl.SuspendDrawing(System.Windows.Forms.Control)">
            <summary>The suspend drawing.</summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate">
            <summary>
            The math evaluate.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.DivideByZero">
            <summary>
            The dividebyzero.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.equation">
            <summary>
            The equation.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.postFix">
            <summary>
            The post fix.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.defaultFunctionEvaluation">
            <summary>
            The default function evaluation.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.errorDescription">
            <summary>
            The error description.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.evaluationError">
            <summary>
            The evaluation error.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.evaluationResult">
            <summary>
            The evaluation result.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.EvaluateFunctionDelegate">
            <summary>
            The evaluate function delegate.
            </summary>
            <param name="name">
            The name value.
            </param>
            <param name="args">
            The args value.
            </param>
            <returns>Returns a symbol object.
            </returns>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type">
            <summary>
            The type value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Variable">
            <summary>
            The variable.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Operator">
            <summary>
            The operator.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Function">
            <summary>
            The function.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Bracket">
            <summary>
            The bracket.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Comma">
            <summary>
            The comma.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Type.Error">
            <summary>
            The error.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.DefaultFunctionEvaluation">
            <summary>Gets or sets the default function evaluation.</summary>
            <value>The default function evaluation.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Equation">
            <summary>Gets the equation.</summary>
            <value>The equation.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Error">
            <summary>Gets a value indicating whether error.</summary>
            <value>The error.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.ErrorDescription">
            <summary>Gets the error description.</summary>
            <value>The error description.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Postfix">
            <summary>Gets the postfix.</summary>
            <value>The postfix.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Result">
            <summary>Gets the result.</summary>
            <value>The result.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Variables">
            <summary>Gets or sets the variables.</summary>
            <value>The variables.</value>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.EvaluatePostfix">
            <summary>
            The evaluate postfix.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Infix2Postfix">
            <summary>
            The infix 2 postfix.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Parse(System.String)">
            <summary>The parse.</summary>
            <param name="newEquation">The equation.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified new equation.
            </summary>
            <param name="newEquation">The new equation.</param>
            <param name="cultureInfo">The current cultureInfo.</param>
            <returns>True if parsing was successful.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Evaluate(Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol,Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol,Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol)">
            <summary>The evaluate.</summary>
            <param name="sym1">The sym 1 value.</param>
            <param name="opr">The opr value.</param>
            <param name="sym2">The sym 2 value.</param>
            <returns>The Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate+Symbol.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.EvaluateFunction(System.String,System.Object[])">
            <summary>The evaluate function.</summary>
            <param name="name">The name value.</param>
            <param name="args">The args value.</param>
            <returns>The Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate+Symbol.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Precedence(Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol)">
            <summary>The precedence.</summary>
            <param name="sym">The sym value.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol">
            <summary>
            The symbol.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol.SymbolName">
            <summary>
            The _ symbol name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol.SymbolType">
            <summary>
            The _ symbol type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol.SymbolValue">
            <summary>
            The _ symbol value.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.MathEvaluate.Symbol.ToString">
            <summary>
            The to string.
            </summary>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker">
            <summary>
            The nullable date time picker.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.format">
            <summary>
            The _format.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.formatAsString">
            <summary>
            The _format as string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.isNull">
            <summary>
            The _is null.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.nullValue">
            <summary>
            The _null value.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker"/> class. 
            Default Constructor.</summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.CustomFormat">
            <summary>
            Gets or sets the custom date/time format string.
            <value>A string that represents the custom date/time format. The default is a null
            reference (<b>Nothing.</b> in Visual Basic).</value>
            </summary>
            <value>The custom format.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.Format">
            <summary>
            Gets or sets the format of the date and time displayed in the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.DateTimePickerFormat"/> values. The default is 
            <see cref="F:System.Windows.Forms.DateTimePickerFormat.Long"/>.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.NullValue">
            <summary>
            Gets or sets the string value that is assigned to the control as null value. 
            </summary>
            <value>The string value assigned to the control as null value.</value>
            <remarks>
            If the <see cref="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.Value"/> is <b>null.</b>, <b>NullValue.</b> is
            shown in the <b>DateTimePicker.</b> control.
            </remarks>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.Value">
            <summary>
            Gets or sets the date/time value assigned to the control.
            </summary>
            <value>The DateTime value assigned to the control.
            </value>
            <remarks>
            <p>If the <b>Value.</b> property has not been changed in code or by the user, it is set
            to the current date and time (<see cref="P:System.DateTime.Now"/>).</p>
            <p>If <b>Value.</b> is <b>null.</b>, the DateTimePicker shows 
            <see cref="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.NullValue"/>.</p>
            </remarks>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.FormatAsString">
            <summary>
            Gets or sets the current format of the DateTimePicker as string. 
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)"/>.</summary>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that was raised.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)"/>.</summary>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that was raised.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.WndProc(System.Windows.Forms.Message@)">
            <summary>This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"/>.</summary>
            <param name="m">The m value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.DataBindingsCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
            <summary>The data bindings_ collection changed.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.NullableDateTimePickerParse(System.Object,System.Windows.Forms.ConvertEventArgs)">
            <summary>The nullable date time picker_ parse.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.SetFormat">
            <summary>
            Sets the format according to the current DateTimePickerFormat.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.SetToDateTimeValue">
            <summary>
            Sets the <b>DateTimePicker.</b> back to a non null value.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.SetToNullValue">
            <summary>
            Sets the <b>DateTimePicker.</b> to the value of the <see cref="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.NullValue"/> property.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.Nmhdr">
            <summary>
            The nmhdr.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.Nmhdr.WindowHandleFrom">
            <summary>
            The windowHandle from.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.Nmhdr.IdFrom">
            <summary>
            The id from.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePicker.Nmhdr.Code">
            <summary>
            The code value.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell">
            <summary>
            The nullable date time picker cell.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell.DefaultNewRowValue">
            <summary>Gets the default new row value.</summary>
            <value>The default new row value.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell.EditType">
            <summary>Gets the edit type.</summary>
            <value>The edit type.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell.ValueType">
            <summary>Gets the value type.</summary>
            <value>The value type.</value>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell.InitializeEditingControl(System.Int32,System.Object,System.Windows.Forms.DataGridViewCellStyle)">
            <summary>The initialize editing control.</summary>
            <param name="rowIndex">The row index.</param>
            <param name="initialFormattedValue">The initial formatted value.</param>
            <param name="dataGridViewCellStyle">The data grid view cell style.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerCell.ParseFormattedValue(System.Object,System.Windows.Forms.DataGridViewCellStyle,System.ComponentModel.TypeConverter,System.ComponentModel.TypeConverter)">
            <summary>The parse formatted value.</summary>
            <param name="formattedValue">The formatted value.</param>
            <param name="cellStyle">The cell style.</param>
            <param name="formattedValueTypeConverter">The formatted value type converter.</param>
            <param name="valueTypeConverter">The value type converter.</param>
            <returns>The System.Object.</returns>
            <exception cref="T:System.ArgumentException">Throws a argument exception.</exception>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl">
            <summary>
            The nullable date time picker editing control.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.valueChanged">
            <summary>
            The value changed.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.EditingControlDataGridView">
            <summary>
            Gets or sets the editing control data grid view.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.EditingControlFormattedValue">
            <summary>
            Gets or sets the editing control formatted value.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.EditingControlRowIndex">
            <summary>
            Gets or sets the editing control row index.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.EditingControlValueChanged">
            <summary>
            Gets or sets a value indicating whether editing control value changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.EditingPanelCursor">
            <summary>
            Gets the editing panel cursor.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.RepositionEditingControlOnValueChange">
            <summary>
            Gets a value indicating whether reposition editing control on value change.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.ApplyCellStyleToEditingControl(System.Windows.Forms.DataGridViewCellStyle)">
            <summary>The apply cell style to editing control.</summary>
            <param name="dataGridViewCellStyle">The data grid view cell style.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.EditingControlWantsInputKey(System.Windows.Forms.Keys,System.Boolean)">
            <summary>The editing control wants input key.</summary>
            <param name="key">The key value.</param>
            <param name="dataGridViewWantsInputKey">The data grid view wants input key.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.GetEditingControlFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)">
            <summary>The get editing control formatted value.</summary>
            <param name="context">The context.</param>
            <returns>The System.Object.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.PrepareEditingControlForEdit(System.Boolean)">
            <summary>The prepare editing control for edit.</summary>
            <param name="selectAll">The select all.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.NullableDateTimePickerEditingControl.OnValueChanged(System.EventArgs)">
            <summary>The on value changed.</summary>
            <param name="e">The e value.</param>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties">
            <summary>
            A data class representing Tekla Structures property presented in UI.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.DefaultPropertyName">
            <summary>
            The default property name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.DefaultWidth">
            <summary>
            The default width.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.decimals">
            <summary>
            The _ decimals.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.displayType">
            <summary>
            The _ display type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.hidden">
            <summary>
            The _ hidden.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.name">
            <summary>
            The _ name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.propertyType">
            <summary>
            The _ property type.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.reportPropertyName">
            <summary>
            The _ report property name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.udaPropertyName">
            <summary>
            The _ user defined attribute property name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.width">
            <summary>
            The _ width.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties"/> class. 
            Instantiates class representing Tekla Structures property presented in UI.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties"/> class. 
            Instantiates class representing Tekla Structures property presented in UI.</summary>
            <param name="displayName">Name showed in UI.</param>
            <param name="reportName">Tekla Stuctures report property name.</param>
            <param name="udaName">Tekla Stuctures UDA property name.</param>
            <param name="type">Type of the property.</param>
            <param name="decimals">How many decimals are presented in UI for property.</param>
            <param name="width">Column width in UI that presents the property.</param>
            <param name="hidden">Visibility of the property column.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.#ctor(Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties"/> class. 
            Instantiates class representing Tekla Structures property presented in UI. Copies values from other instance.</summary>
            <param name="propertyToCopy">Presented property from which attributes are copied from.</param>
        </member>
        <member name="E:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.PropertyChanged">
            <summary>
            The property changed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.Decimals">
            <summary>Gets or sets the decimals.</summary>
            <value>The decimals.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.DisplayType">
            <summary>Gets or sets the display type.</summary>
            <value>The display type.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.Hidden">
            <summary>Gets or sets a value indicating whether hidden.</summary>
            <value>The hidden.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.Name">
            <summary>Gets or sets the name.</summary>
            <value>The name value.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.PropertyType">
            <summary>Gets or sets the property type.</summary>
            <value>The property type.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.ReportPropertyName">
            <summary>Gets or sets the report property name.</summary>
            <value>The report property name.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.UdaPropertyName">
            <summary>Gets or sets the uda property name.</summary>
            <value>The uda property name.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.Visible">
            <summary>Gets or sets a value indicating whether visible.</summary>
            <value>The visible.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.Width">
            <summary>Gets or sets the width.</summary>
            <value>The width.</value>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.Copy(Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties)">
            <summary>Copy all attributes from other property.</summary>
            <param name="propertyToCopy">Presented property from which attributes are copied from.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.Equals(System.Object)">
            <summary>Presented properties equal, if they Name property equals.</summary>
            <param name="obj">The obj value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.GetHashCode">
            <summary>
            The get hash code.
            </summary>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.ToString">
            <summary>
            The to string.
            </summary>
            <returns>
            The System.String.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.System#IComparable#CompareTo(System.Object)">
            <summary>The compare to.</summary>
            <param name="first">The first.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties.OnPropertyChanged(System.String)">
            <summary>The on property changed.</summary>
            <param name="name">The name value.</param>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage">
            <summary>
            The presented properties manage.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.ChangeHiddenValuesByOtherFile(Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@)">
            <summary>Change properties hidden values in first property file
            so that properties that are in second property file are shown.</summary>
            <param name="all">All the properties.</param>
            <param name="shown">The shown.</param>
            <returns>false if write to file fails.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetBaseType(System.String)">
            <summary>The get base type.</summary>
            <param name="propertyType">The property type.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetPartPropertyValue(Tekla.Structures.Model.ModelObject,System.String,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml)">
            <summary>The value of objects property (report or UDA), returned in units given in PresentedProperties propertyType.</summary>
            <param name="thisPart">The object for which to get amount.</param>
            <param name="visibleName">Name of the property is properties xml file.</param>
            <param name="presentedPropertiesInstance">The Presented Properties Instance.</param>
            <returns>Value of objects property. If both UDA and Report properties are declared, returns value of report property.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetPartPropertyValue(Tekla.Structures.Model.ModelObject,Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml)">
            <summary>The value of objects property (report or UDA), returned in units given in PresentedProperties propertyType.</summary>
            <param name="thisPart">The object for which to get amount.</param>
            <param name="property">The property to get the value for.</param>
            <param name="presentedPropertiesInstance">The Presented Properties Instance.</param>
            <returns>Value of objects property. If both UDA and Report properties are declared, returns value of report property.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.MakeFileFromOtherFilesHiddenProperties(Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@)">
            <summary>Makes a new properties file from other files shown properties.</summary>
            <param name="shown">New properties.</param>
            <param name="all">File from which visible new properties is done.</param>
            <returns><c>false.</c> if write to file fails.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetAttributeByUDAFormula(Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml,Tekla.Structures.Model.ModelObject,System.String,System.Double@)">
            <summary>Gets the value of an attibute defined by a formula.</summary>
            <param name="presentedPropertiesInstance">The presented properties instance.</param>
            <param name="modelObj">The model obj.</param>
            <param name="udaEquation">The text of the formula.</param>
            <param name="resultValue">The result of the calculation.</param>
            <returns><c>true.</c> if a result has been found.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetProperty(Tekla.Structures.Model.ModelObject,System.String,System.Boolean,System.String@)">
            <summary>The get property.</summary>
            <param name="propertyOwner">The property owner.</param>
            <param name="propertyName">The property name.</param>
            <param name="isReportProperty">The is report property.</param>
            <param name="returnValue">The return value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetProperty(Tekla.Structures.Model.ModelObject,System.String,System.Boolean,System.Int32@)">
            <summary>The get property.</summary>
            <param name="propertyOwner">The property owner.</param>
            <param name="propertyName">The property name.</param>
            <param name="isReportProperty">The is report property.</param>
            <param name="returnValue">The return value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetProperty(Tekla.Structures.Model.ModelObject,System.String,System.Boolean,System.Double@)">
            <summary>The get property.</summary>
            <param name="propertyOwner">The property owner.</param>
            <param name="propertyName">The property name.</param>
            <param name="isReportProperty">The is report property.</param>
            <param name="returnValue">The return value.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.GetPropertvalueYBasedOnType(Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml,Tekla.Structures.Model.ModelObject,Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties,System.Boolean,System.Boolean)">
            <summary>The get property value based on type.</summary>
            <param name="presentedPropertiesInstance">The presented properties instance.</param>
            <param name="part">The part value.</param>
            <param name="thisProperty">The this property.</param>
            <param name="isReportProperty">The is report property.</param>
            <param name="roundDoubles">The round doubles.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes">
            <summary>
            The property types.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Date">
            <summary>
            The date value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Double">
            <summary>
            The double.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Formula">
            <summary>
            The formula.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Int">
            <summary>
            The int value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Kg">
            <summary>
            The kg value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Pieces">
            <summary>
            The pieces.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.String">
            <summary>
            The string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Ton">
            <summary>
            The ton value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Cm">
            <summary>
            The cm value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Cm2">
            <summary>
            The cm2 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Cm3">
            <summary>
            The cm3 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Ft">
            <summary>
            The ft value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Ft2">
            <summary>
            The ft2 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Ft3">
            <summary>
            The ft3 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Inch">
            <summary>
            The inch value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Inch2">
            <summary>
            The inch 2.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Inch3">
            <summary>
            The inch 3.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Lbs">
            <summary>
            The lbs value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.M">
            <summary>
            The m value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.M2">
            <summary>
            The m2 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.M3">
            <summary>
            The m3 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Mm">
            <summary>
            The mm value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Mm2">
            <summary>
            The mm2 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Mm3">
            <summary>
            The mm3 value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.TonLong">
            <summary>
            The ton_long.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.TonShort">
            <summary>
            The ton_short.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Yard">
            <summary>
            The yard value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Yard2">
            <summary>
            The yard 2.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesManage.PropertyTypes.Yard3">
            <summary>
            The yard 3.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml">
            <summary>
            Public class for additional model object properties read from .xml.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.CsIniDefaultAttributes">
            <summary>
            Cs ini default attributes.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.Comment">
            <summary>
            The comment.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.XsFirm">
            <summary>
            The Xs firm folder.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.XsProject">
            <summary>
            The Xs project folder.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.XsSystem">
            <summary>
            The Xs system folder.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.currentModel">
            <summary>
            The current model.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.lastReadTime">
            <summary>
            The last read time.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.propertiesFileName">
            <summary>
            The properties file name.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.propertiesList">
            <summary>
            The _ properties list.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.readOnlyOnce">
            <summary>
            The read only once.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.theFullPath">
            <summary>
            The the full path.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.visiblePropertiesList">
            <summary>
            The _ visible properties list.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.#ctor(System.String,Tekla.Structures.Model.Model)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml"/> class. 
            Instantiates a class for handling presented properties.</summary>
            <param name="fileName">And xml file for storing properties.</param>
            <param name="openModel">Tekla Structures model.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml"/> class. 
            Contractor for derived classes that dont use file storage.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.TickHandler">
            <summary>
            The tick handler.
            </summary>
            <param name="m">The m value.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="E:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.Modified">
            <summary>
            The modified.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.LoadSaveDirectory">
            <summary>Gets the load save directory.</summary>
            <value>The load save directory.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.PropertiesList">
            <summary>Gets or sets additional object properties defined in ModelOrganizerPropertiex.xml.</summary>
            <value>The properties list.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.VisiblePropertiesList">
            <summary>Gets or sets the list of AdditionalProperties which Hidden=false.
            NOTE: This is needed to be nulled, if properties Hidden values are changed.</summary>
            <value>The visible properties list.</value>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.ReadPropertiesListFromFile(System.String)">
            <summary>Reads the properties list from file.</summary>
            <param name="fileName">Name of the file.</param>
            <returns>List of properties.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.SortBindingList(System.ComponentModel.BindingList{System.Object}@,System.ComponentModel.ListSortDirection,System.ComponentModel.PropertyDescriptor)">
            <summary>Sort BindingList by property.</summary>
            <param name="list">The list value.</param>
            <param name="direction">The direction.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.XmlWriteProperties(System.ComponentModel.BindingList{Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties},System.String)">
            <summary>The xml write properties.</summary>
            <param name="listToSerialize">The list to serialize.</param>
            <param name="fileName">The file name.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.AddPropertyWithReportName(System.String,System.String)">
            <summary>Add a property to presented properties list. Sets property visible name same as ReportPropertyName
            and tries to deduct the type based on ValueString.</summary>
            <param name="reportPropertyName">Tekla Structures report property name.</param>
            <param name="valueString">Value of the report property.</param>
            <returns>If property with same visible name already exits, property is not added and <c>false.</c> is returned.
            Otherwise <c>true.</c>.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.ForceReadFile">
            <summary>
            Ensures that file is read when properties list is next used.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.GetPropertiesHashCode(System.ComponentModel.BindingList{Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties})">
            <summary>Gets the properties list hash code for quick comparsion.</summary>
            <param name="listToHash">The List To Hash.</param>
            <returns>The hash code representing the properties list.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.GetPropertyByModelPropertyName(System.String,Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties@)">
            <summary>Gets property from property list by model property (report or UDA) name.</summary>
            <param name="modelPropertyName">Name of the model property.</param>
            <param name="property">The property.</param>
            <returns>True if found.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.GetPropertyByName(System.String,Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties@)">
            <summary>Gets property from property list by name.</summary>
            <param name="propertyName">Name of the property.</param>
            <param name="property">The property.</param>
            <returns>True if found.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.GetPropertyByNameOrModelPropertyName(System.String,Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties@)">
            <summary>Gets property from property list by name, if not found, try to get by model property name.</summary>
            <param name="propertyName">Name of the property.</param>
            <param name="property">The property.</param>
            <returns>True if found.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.Initialize(System.String,Tekla.Structures.Model.Model)">
            <summary>Initializes the specified file name.</summary>
            <param name="fileName">Name of the file.</param>
            <param name="openModel">The open model.</param>
            <returns>True, unless there is an exception.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.MergeProperties(Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml)">
            <summary>Merges all properties list from PropertiesToMerge to this instance properties list.</summary>
            <param name="propertiesToMerge">Properties to merge.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.MoveProperty(Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties,Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties)">
            <summary>Moves property to different place in list.</summary>
            <param name="propertyToMove">The property to move.</param>
            <param name="propertyToMoveBy">The property to move by.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.RemoveProperty(Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties)">
            <summary>Removeve property from list.</summary>
            <param name="propertyToRemove">The property to remove.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.XmlWriteProperties">
            <summary>
            Write properties list to properties file.
            </summary>
            <returns> False if write fails.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.XmlWriteProperties(System.ComponentModel.BindingList{Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties})">
            <summary>Write given list to properties file.</summary>
            <param name="listToSerialize">The list to serialize.</param>
            <returns>false if write fails.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.ReadPropertiesList">
            <summary>
            The read properties list.
            </summary>
            <returns>List of properties.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.GetFullPath(System.Collections.IEnumerable,System.String)">
            <summary>Gets the full path.</summary>
            <param name="paths">The paths.</param>
            <param name="fileName">Name of the file.</param>
            <returns>The full path.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.OccurencesOf(System.String,System.String)">
            <summary>Occuranceses the of.</summary>
            <param name="searchIn">The search in.</param>
            <param name="searchThis">The search this.</param>
            <returns>Number of occurrences.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.TryToGuessType(System.String)">
            <summary>Try to guess the type of the value passed as a string.</summary>
            <param name="stringValue">The string value.</param>
            <returns>A string describing the type of the input.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.CreateDefaultFile">
            <summary>
            Creates the default file.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml.GetFullPathToExistingFile(System.String,System.String@)">
            <summary>The get full path to existing file.</summary>
            <param name="fileName">The file name.</param>
            <param name="fullPath">The full path.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.LocalisationDelegate">
            <summary>
            Delegate method to localise this form and dialog forms.
            </summary>
            <param name="formToLocalise">Form to localize.</param>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm">
            <summary>
            The properties form.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.ownAllPresentedPropertiesXmlInstance">
            <summary>
            The own all presented properties xml instance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.ownShownPresentedPropertiesXmlInstance">
            <summary>
            The own shown presented properties xml instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm"/> class. 
            Initializes a form to select showable properties. 
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.#ctor(System.Windows.Forms.Form,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.LocalisationDelegate,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm"/> class.
            Initializes a form to select showable properties.</summary>
            <param name="parentForm">A form in relation location of this form is set.</param>
            <param name="allPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains all properties.</param>
            <param name="shownPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains shown properties.</param>
            <param name="localizationMethod">Delegate method to use for localization.</param>
            <param name="showShownProperties">If true, shown properties are shown in separate panel as well as move properties buttons.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.Button1Click(System.Object,System.EventArgs)">
            <summary>Button1's click event handler
            Moves included properties to shown properties list.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.Button2Click(System.Object,System.EventArgs)">
            <summary>Handles the Click event of the button2 control.
            Set properties included parameter according the shown list.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.GetLocation(System.Drawing.Point)">
            <summary>The get location.</summary>
            <param name="parentLocation">The parent location.</param>
            <returns>The System.Drawing.Point.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.OkButtonClick(System.Object,System.EventArgs)">
            <summary>Handles the Click event of the OkButton control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.PropertiesFormFormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>Propertieses the form form closing.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.FormClosingEventArgs"/>
            instance containing the event data.</param>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertiesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1">
            <summary>The property comparer.</summary>
            <typeparam name="T">The T value.</typeparam>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.direction">
            <summary>
            The _direction.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.property">
            <summary>
            The _property.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1"/> class.</summary>
            <param name="property">The property.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.Compare(`0,`0)">
            <summary>The compare.</summary>
            <param name="wordX">The x word.</param>
            <param name="wordY">The y word.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.Equals(`0,`0)">
            <summary>The equals.</summary>
            <param name="wordX">The x word.</param>
            <param name="wordY">The y word.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.GetHashCode(`0)">
            <summary>The get hash code.</summary>
            <param name="obj">The obj value.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.CompareAscending(System.Object,System.Object)">
            <summary>The compare ascending.</summary>
            <param name="valueX">The x value.</param>
            <param name="valueY">The y value.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.CompareDescending(System.Object,System.Object)">
            <summary>The compare descending.</summary>
            <param name="valueX">The x value.</param>
            <param name="valueY">The y value.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.PropertyComparer`1.GetPropertvalueY(`0,System.String)">
            <summary>The get property value.</summary>
            <param name="value">The value.</param>
            <param name="property">The property.</param>
            <returns>The System.Object.</returns>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW">
            <summary>
            Textbox that performs search for set datagridview and changes visibility of row accordingly. OR- " ", AND - "+", NOT - "!". 
            NOTE: DGW performance bug => 4000 rows takes ~10s. 8000 35s. etc.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.DelayBeforeSearch">
            <summary>
            The delay before search.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.clearButtonImage">
            <summary>
            The clear button image.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.quickSearchTimer">
            <summary>
            The quick search timer.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.dgwToSearch">
            <summary>
            The dgw to search.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.hiddenRows">
            <summary>
            The hidden rows.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.previousSearchString">
            <summary>
            The previous search string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.rowIsSelected">
            <summary>
            The row is selected.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.searchString">
            <summary>
            The search string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.visibleRows">
            <summary>
            The visible rows.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.#ctor(System.Windows.Forms.DataGridView@)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW"/> class.</summary>
            <param name="dgw">The dgw value.</param>
        </member>
        <member name="E:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.UpdateRowsCount">
            <summary>
            Fired when quick search is done. Registered handler had to get updated rows count by GetVisibleRows() and GetHiddenRows().
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.EmptySearchBox">
            <summary>
            Empty Search Box.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.GetHiddenRows">
            <summary>
            Return count of hidden rows.
            </summary>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.GetVisibleRows">
            <summary>
            Return count of visible rows.
            </summary>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.QuickSearchExecute">
            <summary>
            Show only rows that match search pattern.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.SetReferenceProperties(System.Windows.Forms.DataGridView@)">
            <summary>Assignes dataGridView for control to search.</summary>
            <param name="dgw">The dgw value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.OnUpdateRowsCount(System.EventArgs)">
            <summary>The on update rows count.</summary>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.ClearButtonClick(System.Object,System.EventArgs)">
            <summary>The clear button_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.GetOrSearchTerms(System.String)">
            <summary>The get or search terms.</summary>
            <param name="rawSearchString">The raw search string.</param>
            <returns>The System.Collections.Generic.List`1[T -&gt; System.String[]].</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.HideClearButton">
            <summary>
            The hide clear button.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.OnQuickSearchTimerTick(System.Object,System.EventArgs)">
            <summary>The on quick search timer tick.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.QuickSearchIsTrue(System.String,System.Collections.Generic.List{System.String[]})">
            <summary>The quick search is true.</summary>
            <param name="rowString">The row string.</param>
            <param name="searchTermsOr">The or search terms.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.QuickSearchTbTextChanged(System.Object,System.EventArgs)">
            <summary>The quick search t b_ text changed.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.ShowClearButton">
            <summary>
            The show clear button.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.UpdateRows">
            <summary>
            The update rows.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDGW.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.SearchStartDelegate">
            <summary>
            The search start delegate.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.SearchEndedDelegate">
            <summary>
            The search ended delegate.
            </summary>
            <param name="resultTable">
            The result table.
            </param>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable">
            <summary>
            The quick search for data table.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.DelayBeforeSearch">
            <summary>
            The delay before search.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.clearButtonImage">
            <summary>
            The clear button image.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.quickSearchTimer">
            <summary>
            The quick search timer.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.dataTableToSearch">
            <summary>
            The data table to search.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.doSearchEnded">
            <summary>
            The do search ended.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.doSearchStarted">
            <summary>
            The do search started.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.hiddenRows">
            <summary>
            The hidden rows.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.previousSearchString">
            <summary>
            The previous search string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.resultDataTable">
            <summary>
            The result data table.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.rowIsSelected">
            <summary>
            The row is selected.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.searchString">
            <summary>
            The search string.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.visibleRows">
            <summary>
            The visible rows.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable"/> class.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.#ctor(System.Data.DataTable@,Tekla.Structures.ObjectPropertiesLibrary.SearchStartDelegate,Tekla.Structures.ObjectPropertiesLibrary.SearchEndedDelegate)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable"/> class.</summary>
            <param name="newDataTableToSearch">The dt to search.</param>
            <param name="searchStarted">The search started.</param>
            <param name="searchEnded">The search ended.</param>
        </member>
        <member name="E:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.UpdateRowsCount">
            <summary>
            Fired when quick search is done. Registered handler had to get updated rows count by GetVisibleRows() and GetHiddenRows().
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.GetHiddenRows">
            <summary>
            Return count of hidden rows.
            </summary>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.GetVisibleRows">
            <summary>
            Return count of visible rows.
            </summary>
            <returns>
            The System.Int32.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.QuickSearchExecute">
            <summary>
            Show only rows that match search pattern.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.SetReferenceProperties(System.Data.DataTable@,Tekla.Structures.ObjectPropertiesLibrary.SearchStartDelegate,Tekla.Structures.ObjectPropertiesLibrary.SearchEndedDelegate)">
            <summary>Assignes dataGridView for control to search.</summary>
            <param name="newDataTableToSearch">DataTable to search.</param>
            <param name="searchStarted">Delegate method for giving possibility for parent do some actions just before search is started.</param>
            <param name="searchEnded">Delegate method for giving possibility for parent do some actions just after search is completed.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.SilentlyEmptySearchBox">
            <summary>
            Empties Search text box without doing search.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.OnUpdateRowsCount(System.EventArgs)">
            <summary>The on update rows count.</summary>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.ClearButtonClick(System.Object,System.EventArgs)">
            <summary>The clear button_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.GetOrSearchTerms(System.String)">
            <summary>The get or search terms.</summary>
            <param name="rawSearchString">The raw search string.</param>
            <returns>The System.Collections.Generic.List`1[T -&gt; System.String[]].</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.HideClearButton">
            <summary>
            The hide clear button.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.OnQuickSearchTimerTick(System.Object,System.EventArgs)">
            <summary>The on quick search timer tick.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.QuickSearchIsTrue(System.String,System.Collections.Generic.List{System.String[]})">
            <summary>The quick search is true.</summary>
            <param name="rowString">The row string.</param>
            <param name="searchTermsOr">The or search terms.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.QuickSearchTbTextChanged(System.Object,System.EventArgs)">
            <summary>The quick search t b_ text changed.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.ShowClearButton">
            <summary>
            The show clear button.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.UpdateRows">
            <summary>
            The update rows.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.QuickSearchForDataTable.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1">
            <summary>The searchable sortable binding list.</summary>
            <typeparam name="T">The T value.</typeparam>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.isSorted">
            <summary>
            The _is sorted.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.sortDirection">
            <summary>
            The _sort direction.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.sortProperty">
            <summary>
            The _sort property.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.IsSortedCore">
            <summary>Gets a value indicating whether is sorted core.</summary>
            <value>The is sorted core.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.SortDirectionCore">
            <summary>Gets the sort direction core.</summary>
            <value>The sort direction core.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.SortPropertyCore">
            <summary>Gets the sort property core.</summary>
            <value>The sort property core.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.SupportsSearchingCore">
            <summary>Gets a value indicating whether supports searching core.</summary>
            <value>The supports searching core.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.SupportsSortingCore">
            <summary>Gets a value indicating whether supports sorting core.</summary>
            <value>The supports sorting core.</value>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.Load(System.String)">
            <summary>The load value.</summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.Save(System.String)">
            <summary>The save value.</summary>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.Sort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>The sort value.</summary>
            <param name="property">The property.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>The apply sort core.</summary>
            <param name="property">The property.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>The find core.</summary>
            <param name="property">The property.</param>
            <param name="key">The key value.</param>
            <returns>The System.Int32.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList`1.RemoveSortCore">
            <summary>
            The remove sort core.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog">
            <summary>
            The shown properties dialog.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.prevSelection">
            <summary>
            The prev selection.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.allShownPresentedPropertiesXmlInstance">
            <summary>
            The all shown presented properties xml instance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.newShownPresentedPropertiesXmlInstance">
            <summary>
            The new shown presented properties xml instance.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog"/> class. 
            Instantiates a user control for handling all properties.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.#ctor(System.Windows.Forms.Form,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.LocalisationDelegate)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog"/> class. 
            Instantiates a user control for handling all properties.</summary>
            <param name="parentForm">A form in relation location of this form is set.</param>
            <param name="allPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains all properties.</param>
            <param name="shownPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains shown properties.</param>
            <param name="methodToLocalize">Delegate method to use for localization.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.InitializeShownPropertiesDialog(System.Windows.Forms.Form,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.PresentedPropertiesXml@,Tekla.Structures.ObjectPropertiesLibrary.LocalisationDelegate)">
            <summary>Initialises a user control for handling all properties.</summary>
            <param name="newParentForm">A form in relation location of this form is set.</param>
            <param name="allPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains all properties.</param>
            <param name="shownPresentedPropertiesXmlInstance">PresentedPropertiesXml instance which contains shown properties.</param>
            <param name="methodToLocalize">Delegate method to use for localization.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.RefreshDGW(Tekla.Structures.ObjectPropertiesLibrary.SearchableSortableBindingList{Tekla.Structures.ObjectPropertiesLibrary.PresentedProperties})">
            <summary>The refresh dgw.</summary>
            <param name="reallyRefreshList">The really refresh list.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.RemovePropertiesFromShown">
            <summary>
            Removes selected properties from list.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.SaveShown">
            <summary>
            The save shown.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.UpdateShownProperties">
            <summary>
            Updates shown properties list according all properties hidden values.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.AllPropertiesDGWSelectionChanged(System.Object,System.EventArgs)">
            <summary>The all properties dg w_ selection changed.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.LoadTsbClick(System.Object,System.EventArgs)">
            <summary>The load ts b_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.SaveTsbClick(System.Object,System.EventArgs)">
            <summary>The save ts b_ click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.ShownPropertiesDGWCellMouseClick(System.Object,System.Windows.Forms.DataGridViewCellMouseEventArgs)">
            <summary>The shown properties dg w_ cell mouse click.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.ShownPropertiesDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Tekla.Structures.ObjectPropertiesLibrary.TSConnection">
            <summary>
            The ts connection.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.PrivateFileOnTheSide">
            <summary>
            The privat e_ fil e_ o n_ th e_ side.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.PrivateLocalizationFile">
            <summary>
            The privat e_ localizatio n_ file.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.events">
            <summary>
            The _events.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.localizationCommonFile">
            <summary>
            The _localization common file.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.localizationPrivateFile">
            <summary>
            The _localization private file.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.model">
            <summary>
            The _model.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.modelSelector">
            <summary>
            The _model selector.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.currentLanguage">
            <summary>
            The current language.
            </summary>
        </member>
        <member name="F:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.localizationForm">
            <summary>
            The localization form.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.ObjectPropertiesLibrary.TSConnection"/> class.
            </summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.CurrentLanguage">
            <summary>Gets or sets the current language.</summary>
            <value>The current language.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.LocalizationForm">
            <summary>Gets the TS localization form.</summary>
            <value>The localization form.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.OpenModel">
            <summary>Gets the open model.</summary>
            <value>The open model.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.TeklaEvents">
            <summary>Gets the tekla events.</summary>
            <value>The tekla events.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.ModelSelector">
            <summary>Gets the model selector.</summary>
            <value>The model selector.</value>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.LocalizationCommonFile">
            <summary>Gets the Tekla Structures common localization file.</summary>
        </member>
        <member name="P:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.LocalizationPrivateFile">
            <summary>Gets the Localization file for this application only.</summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.Connect">
            <summary>
            The connect.
            </summary>
            <exception cref="T:System.ApplicationException">
            Throws an exception.
            </exception>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.Dispose">
            <summary>
            The dispose.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.GetAllObjects">
            <summary>
            The get all objects.
            </summary>
            <returns>
            The System.Collections.Generic.Dictionary`2[TKey -&gt; System.String, TValue -&gt; Tekla.Structures.Model.ModelObject].
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.GetChildrenOfSelected">
            <summary>
            The get children of selected.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.GetSelectedObjects">
            <summary>
            The get selected objects.
            </summary>
            <returns>
            The System.Collections.ArrayList.
            </returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.SelectObjectsInModel(System.Collections.ArrayList)">
            <summary>The select objects in model.</summary>
            <param name="selectedObjects">The selected objects.</param>
            <returns>The System.Boolean.</returns>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.SetLanguage">
            <summary>
            The set language.
            </summary>
        </member>
        <member name="M:Tekla.Structures.ObjectPropertiesLibrary.TSConnection.ZoomToSelectedObjects">
            <summary>
            The zoom to selected objects.
            </summary>
        </member>
        <member name="T:Tekla.Structures.Registry">
            <summary>
            Provides access to application registry keys and values.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Registry.currentVersion">
            <summary>
            Registry key for current version.
            </summary>
        </member>
        <member name="F:Tekla.Structures.Registry.root">
            <summary>
            Application root key.
            </summary>
        </member>
        <member name="P:Tekla.Structures.Registry.CurrentVersion">
            <summary>
            Gets the registry key for current application version.
            </summary>
            <value> Registry key.</value>
        </member>
        <member name="P:Tekla.Structures.Registry.Root">
            <summary>
            Gets the application root registry key.
            </summary>
            <value> Registry key.</value>
        </member>
        <member name="M:Tekla.Structures.Registry.GetVersion(System.String)">
            <summary>
            Gets the registry key for the specified version.
            </summary>
            <param name="version">
            Version string. 
            </param>
            <returns>
            Registry key. 
            </returns>
        </member>
        <member name="M:Tekla.Structures.Registry.LoadDialogBounds(System.String)">
            <summary>
            Loads dialog bounds rectangle from registry.
            </summary>
            <param name="dialogName">
            Dialog name. 
            </param>
            <returns>
            Loaded dialog bounds or <see cref="F:System.Drawing.Rectangle.Empty"/> if not available. 
            </returns>
        </member>
        <member name="M:Tekla.Structures.Registry.LoadDialogBounds(System.String,System.String)">
            <summary>
            Loads dialog bounds rectangle from registry.
            </summary>
            <param name="dialogName">
            Dialog name. 
            </param>
            <param name="version">
            Version string. 
            </param>
            <returns>
            Loaded dialog bounds or <see cref="F:System.Drawing.Rectangle.Empty"/> if not available. 
            </returns>
        </member>
        <member name="M:Tekla.Structures.Registry.SaveDialogBounds(System.String,System.Drawing.Rectangle)">
            <summary>
            Saves dialog bounds rectangle to registry.
            </summary>
            <param name="dialogName">
            Dialog name. 
            </param>
            <param name="bounds">
            Bounds rectangle. 
            </param>
        </member>
        <member name="M:Tekla.Structures.Registry.SaveDialogBounds(System.String,System.String,System.Drawing.Rectangle)">
            <summary>
            Saves dialog bounds rectangle to registry.
            </summary>
            <param name="dialogName">
            Dialog name. 
            </param>
            <param name="version">
            Version string. 
            </param>
            <param name="bounds">
            Bounds rectangle. 
            </param>
        </member>
        <member name="T:Tekla.Structures.RunContext">
            <summary>
            Defines in which context the actions are called
            </summary>
        </member>
        <member name="F:Tekla.Structures.RunContext.teklaStructuresProcess">
            <summary>
            Running within TeklaStructures.exe process
            </summary>
        </member>
        <member name="F:Tekla.Structures.RunContext.uiThreadId">
            <summary>
            UI thread ID
            </summary>
        </member>
        <member name="M:Tekla.Structures.RunContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.RunContext" /> class.
            By default it is non ts process and no UI thread set.
            </summary>
        </member>
        <member name="M:Tekla.Structures.RunContext.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.RunContext" /> class.
            Actions are run same thread if called from ui thread
            </summary>
            <param name="uiThreadId">UI thread Id</param>
        </member>
        <member name="M:Tekla.Structures.RunContext.RunInSameThread">
            <summary>
            Checks if action should be run in same thread.
            </summary>
            <returns>Returns true if call comes within TS process and UI thread.</returns>
        </member>
        <member name="T:Tekla.Structures.RunContextHelper">
            <summary>
            Helper class to choose running context for an action
            </summary>
        </member>
        <member name="T:Tekla.Structures.RunContextHelper.Action">
            <summary>
            Deferred action.
            </summary>
        </member>
        <member name="T:Tekla.Structures.RunContextHelper.Action`1">
            <summary>
            Deferred action with result.
            </summary>
            <typeparam name="T">
            Result type.
            </typeparam>
            <returns>
            Action result.
            </returns>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.Execute(Tekla.Structures.RunContext,Tekla.Structures.RunContextHelper.Action)">
            <summary>
            Executes action in correct context
            </summary>
            <param name="context">context to choose the running context</param>
            <param name="action">action to run</param>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.ExecuteInSeparateThread(Tekla.Structures.RunContextHelper.Action)">
            <summary>
            Executes action in separate thread
            </summary>
            <param name="action">action to run</param>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.Execute(Tekla.Structures.RunContext,System.Int32,Tekla.Structures.RunContextHelper.Action)">
            <summary>
            Executes action in correct context
            </summary>
            <param name="context">context to choose the running context</param>
            <param name="timeoutMilliseconds">timeout for separate thread running context</param>
            <param name="action">action to run</param>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.Execute``1(Tekla.Structures.RunContext,Tekla.Structures.RunContextHelper.Action{``0})">
            <summary>
            Executes action in correct context
            </summary>
            <typeparam name="T">return type of the action</typeparam>
            <param name="context">context to choose the running context</param>
            <param name="action">action to run</param>
            <returns>returns result of the action</returns>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.Execute``1(Tekla.Structures.RunContext,System.Int32,Tekla.Structures.RunContextHelper.Action{``0})">
            <summary>
            Executes action in correct context
            </summary>
            <typeparam name="T">return type of the action</typeparam>
            <param name="context">context to choose the running context</param>
            <param name="timeoutMilliseconds">timeout for separate thread running context</param>
            <param name="action">action to run</param>
            <returns>returns result of the action</returns>
        </member>
        <member name="T:Tekla.Structures.RunContextHelper.SeparateThread">
            <summary>
            Helper class for executing actions in separate thread.
            </summary>
        </member>
        <member name="F:Tekla.Structures.RunContextHelper.SeparateThread.timeoutMilliseconds">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="P:Tekla.Structures.RunContextHelper.SeparateThread.TimeoutMilliseconds">
            <summary>
            Gets or sets the default timeout in milliseconds.
            </summary>
            <value> Timeout in milliseconds.</value>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SeparateThread.Execute(Tekla.Structures.RunContextHelper.Action)">
            <summary>
            Executes an action in separate thread.
            </summary>
            <param name="action">
            Action to execute.
            </param>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SeparateThread.Execute(System.Int32,Tekla.Structures.RunContextHelper.Action)">
            <summary>
            Executes an action in separate thread.
            </summary>
            <param name="timeoutMilliseconds">
            Timeout in milliseconds.
            </param>
            <param name="action">
            Action to execute.
            </param>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SeparateThread.Execute``1(Tekla.Structures.RunContextHelper.Action{``0})">
            <summary>
            Executes an action in separate thread.
            </summary>
            <typeparam name="T">
            Result type.
            </typeparam>
            <param name="action">
            Action to execute.
            </param>
            <returns>
            Action result.
            </returns>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SeparateThread.Execute``1(System.Int32,Tekla.Structures.RunContextHelper.Action{``0})">
            <summary>
            Executes an action in separate thread.
            </summary>
            <typeparam name="T">
            Result type.
            </typeparam>
            <param name="timeoutMilliseconds">
            Timeout in milliseconds.
            </param>
            <param name="action">
            Action to execute.
            </param>
            <returns>
            Action result.
            </returns>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="T:Tekla.Structures.RunContextHelper.SameThread">
            <summary>
            Helper class for executing actions in same thread.
            </summary>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SameThread.Execute(Tekla.Structures.RunContextHelper.Action)">
            <summary>
            Executes an action in separate thread.
            </summary>
            <param name="action">
            Action to execute.
            </param>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SameThread.Execute(System.Int32,Tekla.Structures.RunContextHelper.Action)">
            <summary>
            Executes an action in separate thread.
            </summary>
            <param name="timeoutMilliseconds">
            Timeout in milliseconds.
            </param>
            <param name="action">
            Action to execute.
            </param>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SameThread.Execute``1(Tekla.Structures.RunContextHelper.Action{``0})">
            <summary>
            Executes an action in separate thread.
            </summary>
            <typeparam name="T">
            Result type.
            </typeparam>
            <param name="action">
            Action to execute.
            </param>
            <returns>
            Action result.
            </returns>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="M:Tekla.Structures.RunContextHelper.SameThread.Execute``1(System.Int32,Tekla.Structures.RunContextHelper.Action{``0})">
            <summary>
            Executes an action in separate thread.
            </summary>
            <typeparam name="T">
            Result type.
            </typeparam>
            <param name="timeoutMilliseconds">
            Timeout in milliseconds.
            </param>
            <param name="action">
            Action to execute.
            </param>
            <returns>
            Action result.
            </returns>
            <exception cref="T:System.TimeoutException">
            Thrown if the operation times out.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown if the operation causes an error.
            </exception>
        </member>
        <member name="T:Tekla.Structures.SaveInfoEventArgs">
            <summary>
            Extended EventArgs that carries context information about the ModelSaved event.
            </summary>
        </member>
        <member name="M:Tekla.Structures.SaveInfoEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.SaveInfoEventArgs" /> class.
            </summary>
            <param name="reason">Reason for saving model.</param>
        </member>
        <member name="P:Tekla.Structures.SaveInfoEventArgs.Reason">
            <summary>
            Gets the reason for saving the model.
            </summary>
        </member>
        <member name="T:Tekla.Structures.SearchPath">
            <summary>
            Operations for working with search paths.
            </summary>
        </member>
        <member name="F:Tekla.Structures.SearchPath.Separator">
            <summary>
            Separator character in search path.
            </summary>
        </member>
        <member name="F:Tekla.Structures.SearchPath.Separators">
            <summary>
            Separator characters.
            </summary>
        </member>
        <member name="M:Tekla.Structures.SearchPath.FindFile(System.String,System.String)">
            <summary>
            Finds the specified file in the search path.
            </summary>
            <param name="searchPath">
            Search path.
            </param>
            <param name="filename">
            File name.
            </param>
            <returns>
            Full path of the file or null if the file was not found.
            </returns>
        </member>
        <member name="M:Tekla.Structures.SearchPath.FindFiles(System.String,System.String)">
            <summary>
            Finds the files matching the specified search pattern.
            </summary>
            <param name="searchPath">
            Search path.
            </param>
            <param name="searchPattern">
            Search pattern.
            </param>
            <returns>
            Enumerable collection of file paths.
            </returns>
        </member>
        <member name="M:Tekla.Structures.SearchPath.FindFilesWithExtension(System.String,System.String)">
            <summary>
            Finds the files with the specified extension.
            </summary>
            <param name="searchPath">
            Search path.
            </param>
            <param name="extension">
            File extension.
            </param>
            <returns>
            Enumerable collection of file paths.
            </returns>
        </member>
        <member name="M:Tekla.Structures.SearchPath.GetDirectories(System.String)">
            <summary>
            Gets the directories specified in the search path.
            </summary>
            <param name="searchPath">
            Search path.
            </param>
            <returns>
            Enumerable collection of directory paths.
            </returns>
        </member>
        <member name="T:Tekla.Structures.TeklaStructures">
            <summary>
            Application interface.
            </summary>
        </member>
        <member name="F:Tekla.Structures.TeklaStructures.TeklaStructuresCommonTasks">
            <summary>
            Common tasks library.
            </summary>
        </member>
        <member name="F:Tekla.Structures.TeklaStructures.TeklaStructuresConnection">
            <summary>
            Application connection instance.
            </summary>
        </member>
        <member name="F:Tekla.Structures.TeklaStructures.TeklaStructuresMainWindow">
            <summary>
            Application main window.
            </summary>
        </member>
        <member name="F:Tekla.Structures.TeklaStructures.TeklaStructuresRegistry">
            <summary>
            Application registry.
            </summary>
        </member>
        <member name="M:Tekla.Structures.TeklaStructures.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Tekla.Structures.TeklaStructures"/> class. 
            Initializes the class.
            </summary>
        </member>
        <member name="E:Tekla.Structures.TeklaStructures.Closed">
            <summary>
            Announces that the application has been closed.
            </summary>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.CommonTasks">
            <summary>
            Gets the common tasks library interface.
            </summary>
            <value>
            Common tasks library interface instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.Configuration">
            <summary>
            Gets the application configuration.
            </summary>
            <value>
            Application configuration.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.Connection">
            <summary>
            Gets the connection interface.
            </summary>
            <value>
            Connection interface instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.Drawing">
            <summary>
            Gets the drawing interface.
            </summary>
            <value>
            Drawing interface instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.Environment">
            <summary>
            Gets the application environment interface.
            </summary>
            <value>
            Application environment interface instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.IsRunning">
            <summary>
            Gets a value indicating whether the application is running.
            </summary>
            <value>
            Indicates whether the application is running.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.MainWindow">
            <summary>
            Gets the Tekla Structures main window interface.
            </summary>
            <value>
            Tekla Structures main window interface instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.Model">
            <summary>
            Gets the model interface.
            </summary>
            <value>
            Model interface instance.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.Registry">
            <summary>
            Gets the application registry interface.
            </summary>
            <value>
            Application registry interface.
            </value>
        </member>
        <member name="P:Tekla.Structures.TeklaStructures.Version">
            <summary>
            Gets the application version string.
            </summary>
            <value>
            Application version string.
            </value>
        </member>
        <member name="M:Tekla.Structures.TeklaStructures.Connect">
            <summary>
            Connects the interface to the application.
            </summary>
            <returns>A boolean value indicating whether the interface was connected.</returns>
        </member>
        <member name="M:Tekla.Structures.TeklaStructures.Disconnect">
            <summary>
            Disconnects the interface from the application.
            </summary>
        </member>
        <member name="M:Tekla.Structures.TeklaStructures.ExecuteScript(System.String)">
            <summary>Executes a script.</summary>
            <param name="script">Script text.</param>
        </member>
        <member name="T:Tekla.Structures.UI.ExpandableStringComboBox">
            <summary>
            ExpandableStringComboBox extends standard ComboBox. 
            It provides, e.g., 
            1) functionality to add strings to the items list by editing a new string in the text field and
            2) possibility to add a delegate for retrieving new string from implementation specific source.
            3) possibility to add a delegate for saving a new string to, e.g., implementation specific container.
            </summary>
            <example>
            The following example creates an ExpandableStringComboBox with non-default ListTerminator and adds 
            implementation specific delegates to the instance.
            <code>
            using System;
            using System.Diagnostics;
            using System.Windows.Forms;
            using Tekla.Structures.UI;
            
            namespace Sample
            {
                public partial class Sample : Form
                {
                    private readonly ExpandableStringComboBox _ExScb;
            
                    public Sample()
                    {
                        InitializeComponent();
                        _ExScb = new ExpandableStringComboBox()
                                     {
                                         ListTerminator = "- new -",
                                         Location = new System.Drawing.Point(10, 10),
                                         Size = new System.Drawing.Size(120, 20)
                                        
                                     };
            
                        _ExScb.GetNewStringEvent += GetNewStringHandler;
                        _ExScb.AddNewStringEvent += AddNewStringHandler;
            
                        string[] SampleData = { "TT600*2400-100-50-1200-0.04-200-0.25", "P27(265X1200)", "P32(320X1200)" };
                        _ExScb.Initialize( SampleData, SampleData[ 0 ]);
            
                        Controls.Add(_ExScb);
                    }
            
                    public void GetNewStringHandler(object Sender, ExpandableStringComboBox.ExpandableStringComboBoxEvent Event)
                    {
                        Event.Result = DateTime.Now.ToLongTimeString();
                    }
            
                    public void AddNewStringHandler(object Sender, ExpandableStringComboBox.ExpandableStringComboBoxEvent Event)
                    {
                        Trace.WriteLine(string.Format("AddNewStringHandler {0}", Event.Input));
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Tekla.Structures.UI.ExpandableStringComboBox.previousIndex">
            <summary>
            The _ previous index.
            </summary>
        </member>
        <member name="F:Tekla.Structures.UI.ExpandableStringComboBox.state">
            <summary>
            The _ state.
            </summary>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.UI.ExpandableStringComboBox"/> class.
            </summary>
        </member>
        <member name="T:Tekla.Structures.UI.ExpandableStringComboBox.AddNewStringHandler">
            <summary>
            Client implementation can preserve the string that does not exist on the list.
            </summary>
            <param name="sender">Instance of the control triggering the event.</param>
            <param name="Event">Event.Input contains the new string.</param>
        </member>
        <member name="T:Tekla.Structures.UI.ExpandableStringComboBox.GetNewStringHandler">
            <summary>
            Client implementation uses delegate to provide a new string to be added to the list.
            </summary>
            <param name="sender">Instance of the control triggering the event.</param>
            <param name="Event">Event.Input contains the current selection. Client should add new string into <b>Event.Result.</b>.</param>
        </member>
        <member name="E:Tekla.Structures.UI.ExpandableStringComboBox.AddNewStringEvent">
            <summary>
            The add new string event.
            </summary>
        </member>
        <member name="E:Tekla.Structures.UI.ExpandableStringComboBox.GetNewStringEvent">
            <summary>
            The get new string event.
            </summary>
        </member>
        <member name="T:Tekla.Structures.UI.ExpandableStringComboBox.Status">
            <summary>
            The status.
            </summary>
        </member>
        <member name="F:Tekla.Structures.UI.ExpandableStringComboBox.Status.Unknown">
            <summary>
            The unknown.
            </summary>
        </member>
        <member name="F:Tekla.Structures.UI.ExpandableStringComboBox.Status.Old">
            <summary>
            The old value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.UI.ExpandableStringComboBox.Status.New">
            <summary>
            The new value.
            </summary>
        </member>
        <member name="F:Tekla.Structures.UI.ExpandableStringComboBox.Status.Invalid">
            <summary>
            The invalid.
            </summary>
        </member>
        <member name="P:Tekla.Structures.UI.ExpandableStringComboBox.ListTerminator">
            <summary>Gets or sets the property to be used to mark the list item that triggers GetNewStringDelegates.</summary>
            <value>The list terminator.</value>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.Initialize(System.String[],System.String)">
            <summary>Initializes control with provided data and sets text part according to current value. The ListTerminator is added to the end of the list.</summary>
            <param name="data">Strings to initialize the list.</param>
            <param name="currentValue">Value that is used as selected value. CurrentValue is added to the list if it does not exist in Data.</param>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.Select(System.String)">
            <summary>Adds, if necessary, the given value to items and sets the current selection to the given value. 
            Method automatically adds ListTerminator to items if the ListTerminator is set (not null) and it is not already in items.</summary>
            <param name="currentValue">Value to be selected.</param>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.AddToListEvent(System.Object,Tekla.Structures.UI.ExpandableStringComboBox.ExpandableStringComboBoxEvent)">
            <summary>Internal delegate to handle adding new string to items.</summary>
            <param name="sender">The sender value.</param>
            <param name="expandableStringComboBoxEvent">The expandableStringComboBoxEvent value.</param>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.AddNewString(System.String)">
            <summary>Method that triggers combo (and client) to add new string.</summary>
            <param name="newString">Value of the new item.</param>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.LeaveHandler(System.Object,System.EventArgs)">
            <summary>Method to handle Leave-event. The implementation calls AddNewString -method if necessary to add user modified new value to items.</summary>
            <param name="sender">The sender value.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.SelectionChangeCommittedHandler(System.Object,System.EventArgs)">
            <summary>Internal handler to handle user selection. The method triggers GetNewStringEvent if user selects the ListTerminator-option.</summary>
            <param name="sender">The sender value.</param>
            <param name="eventArgs">The eventArgs value.</param>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.TextUpdateHandler(System.Object,System.EventArgs)">
            <summary>Method to handle user made modifications to the value in the text field.</summary>
            <param name="sender">The sender value.</param>
            <param name="e">The e value.</param>
        </member>
        <member name="T:Tekla.Structures.UI.ExpandableStringComboBox.ExpandableStringComboBoxEvent">
            <summary>
            Event used by ExpandableStringComboBox to retrieve and save strings.
            </summary>
        </member>
        <member name="M:Tekla.Structures.UI.ExpandableStringComboBox.ExpandableStringComboBoxEvent.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.UI.ExpandableStringComboBox.ExpandableStringComboBoxEvent"/> class. 
            Constucts a new event.</summary>
            <param name="strInput">String value for input.</param>
        </member>
        <member name="P:Tekla.Structures.UI.ExpandableStringComboBox.ExpandableStringComboBoxEvent.Input">
            <summary>Gets or sets the currently selected value or new string.</summary>
            <value>The input.</value>
        </member>
        <member name="P:Tekla.Structures.UI.ExpandableStringComboBox.ExpandableStringComboBoxEvent.Result">
            <summary>Gets or sets the return value from a delegate.</summary>
            <value>The result.</value>
        </member>
        <member name="T:Tekla.Structures.VirtualFolder">
            <summary>
            Representation of a virtual folder.
            </summary>
            <remarks>
            Virtual folder represents a folder that is augmented with a search path. When 
            searching for files, the search is extended to all folders in the search path.
            </remarks>
        </member>
        <member name="F:Tekla.Structures.VirtualFolder.folderPath">
            <summary>
            Folder path.
            </summary>
        </member>
        <member name="F:Tekla.Structures.VirtualFolder.searchPath">
            <summary>
            Search path.
            </summary>
        </member>
        <member name="M:Tekla.Structures.VirtualFolder.#ctor(System.String,System.String)">
            <summary>Initializes a new instance of the <see cref="T:Tekla.Structures.VirtualFolder"/> class. 
            Initializes a new instance of the class.</summary>
            <param name="folderPath">Folder path.</param>
            <param name="searchPath">Search path.</param>
        </member>
        <member name="P:Tekla.Structures.VirtualFolder.FolderName">
            <summary>
            Gets the folder name.
            </summary>
            <value>
            Folder name.
            </value>
        </member>
        <member name="P:Tekla.Structures.VirtualFolder.FolderPath">
            <summary>
            Gets the folder path.
            </summary>
            <value>
            Folder path.
            </value>
        </member>
        <member name="M:Tekla.Structures.VirtualFolder.CreateWritableCopy(System.String)">
            <summary>Creates a writable copy of the specified file.</summary>
            <param name="filename">File name.</param>
            <returns>Writable path for the specified file.</returns>
        </member>
        <member name="M:Tekla.Structures.VirtualFolder.FindFile(System.String)">
            <summary>Finds a file in the folder.</summary>
            <param name="filename">File name.</param>
            <returns>Path to the file or null if the file was not found.</returns>
        </member>
        <member name="M:Tekla.Structures.VirtualFolder.FindFiles(System.String)">
            <summary>Finds the files matching the specified pattern.</summary>
            <param name="pattern">Find pattern.</param>
            <returns>Enumerable collection of found files.</returns>
        </member>
        <member name="M:Tekla.Structures.VirtualFolder.FindFilesWithExtension(System.String)">
            <summary>Finds the files with the specified extension.</summary>
            <param name="extension">File extension.</param>
            <returns>Enumerable collection of found files.</returns>
        </member>
        <member name="M:Tekla.Structures.VirtualFolder.GetWritablePath(System.String)">
            <summary>Returns the writable path for the specified file.</summary>
            <param name="filename">File name.</param>
            <returns>Writable path for the specified file.</returns>
        </member>
        <member name="M:Tekla.Structures.VirtualFolder.IsWritable(System.String)">
            <summary>Determines whether the specified file is writable.</summary>
            <param name="filename">File name.</param>
            <returns>A boolean value indicating whether the file is writable.</returns>
        </member>
        <member name="T:Tekla.Structures.WaitingDialog">
            <summary>
            Waiting dialog.
            </summary>
        </member>
        <member name="F:Tekla.Structures.WaitingDialog.completed">
            <summary>
            Predicate that determines whether the operation has been completed.
            </summary>
        </member>
        <member name="M:Tekla.Structures.WaitingDialog.#ctor(System.Predicate{Tekla.Structures.WaitingDialog})">
            <summary>
            Initializes a new instance of the <see cref="T:Tekla.Structures.WaitingDialog"/> class. 
            Initializes a new instance of the class.
            </summary>
            <param name="completed">
            Predicate that determines whether the operation has been completed.
            </param>
        </member>
        <member name="M:Tekla.Structures.WaitingDialog.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">
            Event arguments.
            </param>
        </member>
        <member name="M:Tekla.Structures.WaitingDialog.OnTick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event.
            </summary>
            <param name="sender">
            The Sender.
            </param>
            <param name="e">
            Event arguments.
            </param>
        </member>
        <member name="F:Tekla.Structures.WaitingDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Tekla.Structures.WaitingDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Tekla.Structures.WaitingDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ConversionTool.UnitConverter">
            <summary>
            The unit converter.
            </summary>
        </member>
        <member name="F:ConversionTool.UnitConverter.FootToInchFactor">
            <summary>
            The foo t_ t o_ inc h_ factor.
            </summary>
        </member>
        <member name="F:ConversionTool.UnitConverter.FractionDivisor">
            <summary>
            The fractio n_ divisor.
            </summary>
        </member>
        <member name="F:ConversionTool.UnitConverter.InchToMmFactor">
            <summary>
            The inc h_ t o_ m m_ factor.
            </summary>
        </member>
        <member name="F:ConversionTool.UnitConverter.MmToInchFactor">
            <summary>
            The m m_ t o_ inc h_ factor.
            </summary>
        </member>
        <member name="F:ConversionTool.UnitConverter.imperialUnits">
            <summary>
            The imperial units.
            </summary>
        </member>
        <member name="M:ConversionTool.UnitConverter.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:ConversionTool.UnitConverter"/> class.</summary>
            <param name="convertToImperial">The convert to imperial.</param>
        </member>
        <member name="M:ConversionTool.UnitConverter.ConvertFromCurrentUnitsToMm(System.String)">
            <summary>Method to convert a length in the current unit being used in TS to mm.</summary>
            <param name="value">Value to convert to mm.</param>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Thrown when conversion can't be done because input data format is not correct.</exception>
            <returns>D.uble containing Value in mm.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.ConvertFromMmToCurrentUnits(System.Double)">
            <summary>Method to convert a length in mm to the current unit being used in TS.</summary>
            <param name="value">Value to convert to current units.</param>
            <returns>String containing Value in the current units.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.FormatNumericTextIfNecessary(System.String)">
            <summary>Method to format the input value in dialogs. For instance it could be used 
                within a callback like EventHandler.Leave.</summary>
            <param name="value">Value to format.</param>
            <exception cref="T:Tekla.Structures.InpParser.WrongFormatException">Thrown when formatting in fractional inches 
            can't be done because input data format is not correct.</exception>
            <exception cref="T:System.InvalidCastException">Thrown when formatting in mm 
            an't be done because input data format is not correct.</exception>
            <returns>String containing Value in the appropriate format.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.TryConvertFromCurrentUnitsToMm(System.String,System.Double@)">
            <summary>Method that tries to convert a length in the current unit being used in TS to mm.</summary>
            <param name="value">Value to convert to mm.</param>
            <param name="convertedResult">Double containing Value in mm.</param>
            <returns>True if Value can be converted, false if not.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.TryConvertFromMmToCurrentUnits(System.Double,System.String@)">
            <summary>Method that tries to convert a length in mm to the current unit being used in TS.</summary>
            <param name="value">Value to convert to current units.</param>
            <param name="convertResult">The Convert Result.</param>
            <returns>True if Value can be converted, false if not.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.TryFormatNumericTextIfNecessary(System.String,System.String@)">
            <summary>Method that tries to format the input value in dialogs.</summary>
            <param name="value">Value to format.</param>
            <param name="formatedResult">String containing Value in the appropriate format.</param>
            <returns>True if Value can be formatted, false if not.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.ConvertFromMmToFractionalInches(System.Double)">
            <summary>The convert from mm to fractional inches.</summary>
            <param name="value">The value.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.GetFractionalInchesText(System.Double)">
            <summary>The get fractional inches text.</summary>
            <param name="inchesValue">The inches value.</param>
            <returns>The System.String.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.ConvertFractionToDecimal(System.String)">
            <summary>The convert fraction to decimal.</summary>
            <param name="text">The text value.</param>
            <returns>The System.Double.</returns>
            <exception cref="T:System.Exception">Throws an exception.</exception>
        </member>
        <member name="M:ConversionTool.UnitConverter.ConvertTextFractionalInchesToDecimalInches(System.String)">
            <summary>The convert text fractional inches to decimal inches.</summary>
            <param name="value">The value.</param>
            <returns>The System.Double.</returns>
        </member>
        <member name="M:ConversionTool.UnitConverter.FormatFractionalInchesText(System.String)">
            <summary>The format fractional inches text.</summary>
            <param name="value">The value.</param>
            <returns>The System.String.</returns>
        </member>
    </members>
</doc>
